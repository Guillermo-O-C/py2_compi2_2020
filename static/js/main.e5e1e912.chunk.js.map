{"version":3,"sources":["backend/instrucciones.js","App.js","backend/desanidar.js","backend/traductor.js","backend/Menu.js","index.js","backend/gramatica.js"],"names":["TIPO_VALOR","NUMERO","DECIMAL","IDENTIFICADOR","CADENA","CARACTER","TRUE","FALSE","OBJETO","ANONYMOUS_FUNCTION","CADENA_EJECUTABLE","CADENA_CHARS","NULL","SENTENCIAS","CLASE","ASIGNACION","DECLARACION","IMPORT","IF","ELSE_IF","ELSE","SWITCH","WHILE","DO_WHILE","FOR","FUNCION","MAIN","RETURN","CONTINUE","BREAK","IMPRIMIR","COMENTARIO","PARAMETRO","VARIABLE","METODO","CASE","DEFAULT","LLAMADA","INCREMENTO","DECREMENTO","FOR_OF","FOR_IN","ACCESO_POSICION","TYPE_DECLARATION","PUSH","POP","LENGTH","ACCESO","GRAFICAR_TS","ASIGNACION_SUMA","ASIGNACION_RESTA","CHAR_AT","TO_LOWER_CASE","TO_UPPER_CASE","CONCAT","TIPO_DATO","NUMBER","BOOLEAN","STRING","VOID","ARRAY","TYPE","OPERADOR_TERNARIO","NEW_ARRAY","TIPO_ACCESO","ATRIBUTO","POSICION","TIPO_VARIABLE","LET","CONST","nuevaOperacion","operandoIzq","OperandoDer","tipo","operandoDer","Data_Type","_TIPO_OPERACION","SUMA","RESTA","MULTIPLICACION","DIVISION","NEGATIVO","POTENCIA","MODULO","MAYOR","MAYOR_IGUAL","MENOR","MENOR_IGUAL","CONCATENACION","IGUAL_IGUAL","DISTINTO","CONDICION","AND","OR","NOT","_TIPO_VARIABLE","_SENTENCIAS","_TIPO_VALOR","_instruccionesAPI","nuevaOperacionBinaria","Izq","Der","nuevaOperacionUnaria","izq","undefined","nuevoValor","valor","nuevaDeclaracion","variable_type","id","data_type","next_declaration","fila","columna","sentencia","isArray","expresion","nuevoID","nuevoObjeto","atributos","nuevoObjAtributo","next","nuevoTypeAtributo","nuevaDimension","next_dimension","dimension","nuevoTipo","nuevoArray","nuevoDato","dato","next_data","nuevoType","nuevoOperadorTernario","logica","result1","result2","nuevaAsignacion","nuevoImprimir","nuevoIf","sentencias","elseT","accion","else","nuevoElseIf","nuevoElse","nuevoSwitch","cases","nuevoCase","next_case","nuevoDefault","nuevoFor","inicial","final","paso","nuevoForOF","variable","conjunto","nuevoForIn","nuevoWhile","nuevoDoWhile","nuevaFuncion","parametros","nuevaListaid","siguiente","nuevaLlamada","nuevoArgumento","nuevoParametro","opcional","nuevoReturn","nuevoArrayIndex","index","next_index","nuevoAccesoAPosicion","nuevoDecremento","nuevoIncremento","nuevoPush","nuevoPop","nuevoLength","nuevaReferencia","acc","nuevoAccPosicion","next_acc","acc_type","nuevoAccAtributo","atributo","_TIPO_ACCESO","nuevoContinue","nuevoBreak","nuevoAcceso","nuevoGraficarTS","nuevoAsignacioSuma","nuevoAsignacioResta","nuevoCharAt","nuevoToLowerCase","nuevoToUpperCase","nuevoConcat","nuevoNewArray","nuevoStr","_TIPO_DATO","_TS","simbolos","printedTable","this","_simbolos","_printedTable","var_type","ambito","direcciones","nuevoSimbolo","si","crearSimbolo","push","crearFuncion","crearType","simbolo","filter","toLowerCase","split","erEj","descripcion","linea","amb","funcion","type","newID","oldID","React","Component","Desanidar","salida","consola","traduccion","tablaDeSalida","tablaDeSimbolos","output","erTr","ErrArr","value","tsGlobal","TS","scanForFunctions","instrucciones","instruccion","agregarFuncion","updateFuncionID","AST","agregarType","scanForTypes","procesarBloque","setValue","Errores","error","setSalida","console","log","tsTr","e","procesarDeclaracion","procesarAsigacion","procesarAsigacionSuma","procesarAsigacionResta","procesarTypeDeclaration","procesarIf","slice","procesarImpresion","procesarSwitch","procesarFor","procesarForIn","procecsarForOf","procesarWhile","procesarDoWhile","procesarLLamada","procesarReturn","procesarIncremento","procesarDecremento","procesarIdentificador","procesarFuncion","Variable_Type","temp","agregar","temporal","procesarExpresionNumerica","TIPO_OPERACION","objeto","text","procesarObjeto","arreglo","datos","procesarElementosDeArray","procesarArreglo","operacion","procesarOperadorTernario","acceso","procesarAccesoAPosicion","strMethods","llamada","changeOldIDCall","argumentos","procesarArgumentos","declaracion","identificador","funciones","procesarTipo","procesarParametros","Traucir","tablero","contadores","temporales","etiquetas","arreglos","uno","dos","tres","cuatro","cinco","pilas","stack","heap","functionDeclaration","funcionesTraducidas","FuncionesC3D","length","procesarAtributos","existe","dataType","procesarDataType","mainContent","c3d","tsFuncion","JSON","parse","stringify","Nested","traducirFunciones","ts","importFunctions","txt","i","printTemporales","tsEj","inicio","falso","retorno","procesarAccID","returnedAcction","procesarForOF","procesarLlamada","procesarUnicambios","graficar_Ts","tempAtributos","data_description","principalValue","getSimbol","SplitAmbitos","pila","assignedValue","nuevoTemporal","ExistingAttribute","temporal1","posicion","tempTipo","suma","temporal2","valores","procesarTexto","valorIzq","valorDer","valIzq","initial","cadenaUpdated","sustituirEscapes","charCodeAt","heapPush","verdadero","nuevaEtiqueta","valorVerdadero","valorFalso","toString","cadena","Array","elem","String","replace","puntero","reference","userType","tamanio","procesarArray","attb","obtenerType","count","largo","arrayHead","procesarNewArray","pop","checkForMultyType","getType","calcularDimensiones","contador","typeID","attributeID","attribute","obtenerSimbolo","temporal3","name","ar","er","x","obtenerFuncion","GetAmbito","tsTemp","apuntador","falsoC","tsIf","tsElIf","tsElse","actualizar","temporalID","instruccionID","condicion","tsFor","size","actualizacion","ejecucion","temporal4","original","comparacion","caso","tabla","document","createElement","bgColor","align","width","border","row0","insertRow","rows","celda01","insertCell","celda02","celda03","celda04","celda05","celda06","celda07","celda08","innerHTML","row","celda1","celda2","celda3","celda4","celda5","celda6","celda7","celda8","appendChild","label","countDeclarations","padre","tablas","data","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","secondary","absolute","position","bottom","right","absolute2","absolute3","absolute4","absolute5","absolute6","appBar","title","marginLeft","flex","button","margin","p","backgroundColor","marginTop","reports","intros","entrada","desanidado","Transition","forwardRef","props","ref","Slide","direction","UI","analizar","entry","getElementById","parser","Interpretar","Traducir","prs","attributes","children","atb","EntryValue","populateTableTsTr","populateTableErTr","Errores_Array","err","populateTableTsEj","celda11","colSpan","populateTableErEj","classes","useState","open","setOpen","a","setTimeout","style","display","handleClose","className","Grid","container","item","xs","CssBaseline","Paper","options","mode","lineNumbers","onChange","editor","onCursorActivity","getCursor","line","ch","CursosLocation","cdm","readOnly","indentAutoShift","editorDidMount","translationConsole","Button","startIcon","marginRight","onClick","str","el","setAttribute","left","body","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","disabled","height","resize","float","alignContent","variant","handleClickOpenAST","Dialog","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","aria-label","Typography","zoomable","orientation","background","ReactDOM","render","gramatica","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","$Vn1","$Vo1","$Vp1","$Vq1","$Vr1","$Vs1","$Vt1","$Vu1","$Vv1","$Vw1","$Vx1","$Vy1","$Vz1","$VA1","$VB1","$VC1","$VD1","$VE1","$VF1","$VG1","$VH1","$VI1","$VJ1","$VK1","$VL1","$VM1","$VN1","$VO1","$VP1","$VQ1","$VR1","$VS1","$VT1","$VU1","$VV1","$VW1","$VX1","$VY1","$VZ1","$V_1","$V$1","$V02","$V12","$V22","$V32","$V42","$V52","$V62","$V72","trace","yy","symbols_","terminals_","2","5","9","10","12","13","15","17","18","19","21","22","24","26","28","30","31","32","33","34","36","39","42","43","44","45","46","47","48","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","71","73","75","76","77","78","79","81","84","85","87","88","89","93","96","98","99","103","104","105","106","107","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","tempAr","ArrayDeErrores","$","instruccionesAPI","first_line","first_column","Number","table","3","4","6","7","8","41","1","102","11","40","72","25","14","49","38","70","74","90","29","35","80","92","82","37","20","83","86","94","23","100","91","27","95","16","97","defaultActions","163","194","321","323","333","335","367","368","391","395","423","424","443","444","447","parseError","hash","recoverable","Error","input","self","vstack","lstack","recovering","TERROR","EOF","args","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","errStr","showPosition","join","match","loc","last_line","last_column","range","apply","concat","require","_input","_more","_backtrack","done","matched","conditionStack","offset","unput","lines","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","pre","c","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv"],"mappings":"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,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAA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","file":"static/js/main.e5e1e912.chunk.js","sourcesContent":["const TIPO_VALOR = {\n    NUMERO: 'NUMERO',\n    DECIMAL: 'DECIMAL',\n    IDENTIFICADOR: 'IDENTIFICADOR',\n    CADENA: 'CADENA',\n    CARACTER: 'CARACTER',\n    TRUE: 'TRUE',\n    FALSE: 'FALSE',\n    OBJETO: 'OBJETO',\n    ANONYMOUS_FUNCTION: 'ANONYMOUS_FUNCTION',\n    CADENA_EJECUTABLE: 'CADENA_EJECUTABLE',\n    CADENA_CHARS:'CADENA_CHARS',\n    NULL:'NULL'\n};\nconst TIPO_OPERACION = {\n    SUMA: 'SUMA',\n    RESTA: 'RESTA',\n    MULTIPLICACION: 'MULTIPLICACION',\n    DIVISION: 'DIVISION',\n    NEGATIVO: 'NEGATIVO',\n    POTENCIA: 'POTENCIA',\n    MODULO: 'MODULO',\n    MAYOR: 'MAYOR',\n    MAYOR_IGUAL: 'MAYOR_IGUAL',\n    MENOR: 'MENOR',\n    MENOR_IGUAL: 'MENOR_IGUAL',\n    CONCATENACION: 'CONCATENACION',\n    IGUAL_IGUAL: 'IGUAL IGUAL',\n    DISTINTO: 'DISTINTO',\n    CONDICION: 'CONDICION',\n    AND: 'AND',\n    OR: 'OR',\n    NOT: 'NOT',\n};\nconst SENTENCIAS = {\n    CLASE: 'CLASE',\n    ASIGNACION: 'ASIGNACION',\n    DECLARACION: 'DECLARACION',\n    IMPORT: 'IMPORT',\n    IF: 'IF',\n    ELSE_IF: 'ELSE_IF',\n    ELSE: 'ELSE',\n    SWITCH: 'SWITCH',\n    WHILE: 'WHILE',\n    DO_WHILE: 'DO_WHILE',\n    FOR: 'FOR',\n    FUNCION: 'FUNCION',\n    MAIN: 'MAIN',\n    RETURN: 'RETURN',\n    CONTINUE: 'CONTINUE',\n    BREAK: 'BREAK',\n    IMPRIMIR: 'IMPRIMIR',\n    COMENTARIO: 'COMENTARIO',\n    PARAMETRO: 'PARAMETRO',\n    VARIABLE: 'VARIABLE',\n    METODO: 'METODO',\n    CASE: 'CASE',\n    DEFAULT: 'DEFAULT',\n    LLAMADA: 'LLAMADA',\n    INCREMENTO: 'INCREMENTO',\n    DECREMENTO: 'DECREMENTO',\n    FOR_OF:'FOR_OF',\n    FOR_IN:'FOR_IN',\n    ACCESO_POSICION:'ACCESO_POSICION',\n    TYPE_DECLARATION:'TYPE_DECLARATION',\n    PUSH:'PUSH',\n    POP:'POP',\n    LENGTH:'LENGTH',\n    ACCESO:'ACCESO',\n    GRAFICAR_TS:'GRAFICAR_TS',\n    ASIGNACION_SUMA:'ASIGNACION_SUMA',\n    ASIGNACION_RESTA:'ASIGNACION_RESTA',\n    CHAR_AT:'CHAR_AT',\n    TO_LOWER_CASE:'TO_LOWER_CASE',\n    TO_UPPER_CASE:'TO_UPPER_CASE',\n    CONCAT:'CONCAT'\n};\nconst TIPO_DATO = {\n    NUMBER: 'NUMBER',\n    BOOLEAN: 'BOOLEAN',\n    STRING: 'STRING',\n    OBJETO: 'OBJETO',\n    VOID:'VOID',\n    ARRAY: 'ARRAY',\n    TYPE: 'TYPE',\n    OPERADOR_TERNARIO: 'OPERADOR_TERNARIO',\n    NEW_ARRAY:'NEW_ARRAY'\n};\nconst TIPO_ACCESO={\n    ATRIBUTO:'ATRIBUTO',\n    POSICION:'POSICION'\n};\nconst TIPO_VARIABLE ={\n    LET: 'LET',\n    CONST: 'CONST'\n};\nfunction nuevaOperacion(operandoIzq, OperandoDer, tipo) {\n    return {\n        operandoIzq: operandoIzq,\n        operandoDer: OperandoDer,\n        tipo: tipo\n    }\n}\n\nfunction crearSimbolo(var_type, id, tipo, ambito, fila, columna, direcciones) {\n    return {\n        si:'variable',\n        var_type:var_type,\n        id: id,\n        tipo: tipo,\n        ambito:ambito,\n        fila:fila,\n        columna:columna,\n        direcciones:direcciones\n    }\n}\n\nfunction crearFuncion(id, tipo, parametros, accion,ambito, fila, columna) {\n    return {\n        si:'funcion',\n        id: id,\n        tipo: tipo,\n        parametros: parametros,\n        accion: accion,\n        ambito:ambito,\n        fila:fila,\n        columna:columna\n    }\n}\n\nfunction crearType(id, atributos, fila, columna){\n    return{\n        si:'type',\n        id:id,\n        atributos:atributos,\n        fila:fila,\n        columna:columna\n    }\n}\n\nclass TS {\n    constructor(simbolos, printedTable) {\n        this._simbolos = simbolos;\n        this._printedTable=printedTable;\n    }\n\n    agregar(var_type, id, tipo, ambito, fila, columna, direcciones) {\n        const nuevoSimbolo = crearSimbolo(var_type, id, tipo, ambito, fila, columna,direcciones);\n        this._simbolos.push(nuevoSimbolo);\n    }\n\n    agregarFuncion(id, tipo, parametros, accion, ambito, fila, columna) {\n        const nuevaFuncion = crearFuncion(id, tipo, parametros, accion, ambito, fila, columna);\n        this._simbolos.push(nuevaFuncion);\n    }\n\n    agregarType(id, atributos, fila, columna){\n        const nuevoType= crearType(id, atributos, fila, columna);\n        this._simbolos.push(nuevoType);\n    }\n\n    actualizar(id, valor) {\n        const simbolo = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && simbolo.si==\"variable\")[0];\n        if (simbolo.tipo != valor.tipo) {\n            if(simbolo.tipo.split(\"[]\")[0]==\"undefined\"){\n                simbolo.tipo=valor.tipo;\n            }else{\n                //this._consola.value+='ERROR: Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + simbolo.tipo;\n                this._printedTable.erEj.push({descripcion:'Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + simbolo.tipo,tipo:\"semántico\", linea:0, columna:0}); \n                throw 'ERROR: Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + simbolo.tipo;\n            }\n            }\n        if (simbolo){\n            simbolo.valor = valor.valor;\n        }else{\n            //this._consola.value+='ERROR: variable: ' + id + ' no ha sido declarada.';\n            this._printedTable.erEj.push({descripcion:'variable: ' + id + ' no ha sido declarada.', tipo:\"semántico\", linea:0, columna:0}); \n            throw 'ERROR: variable: ' + id + ' no ha sido declarada.';\n        }\n    }\n    actualizarAndType(id, valor) {\n        const simbolo = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase())[0];\n        if (simbolo) simbolo.valor = valor.valor;\n        if (simbolo) simbolo.tipo = valor.tipo;\n        else {\n            //this._consola+='ERROR: variable: ' + id + ' no ha sido declarada.';\n            this._printedTable.erEj.push({descripcion:' variable: ' + id + ' no ha sido declarada. ',tipo:\"semántico\", linea:0, columna:0}); \n            throw 'ERROR: variable: ' + id + ' no ha sido declarada.';}\n    }\n\n    obtenerSimbolo(id, ambito, fila, columna) {\n        for(let amb of ambito){\n            const simbolo = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && amb==simbolo.ambito && simbolo.si ==\"variable\")[0];\n            if (simbolo){\n                return { valor: simbolo.direcciones, tipo: simbolo.tipo, ambito:simbolo.ambito }\n            };\n        }\n        //this._consola.value+='f:'+fila+', c:'+columna+', ambito:'+ambito[0]+'\\nERROR: variable: ' + id + ' no ha sido declarada.';\n        this._printedTable.erEj.push({descripcion:'variable: ' + id + ' no ha sido declarada.',tipo:\"semántico\", linea:fila, columna:columna}); \n        throw 'ERROR: variable: ' + id + ' no ha sido declarada.';\n    }\n    getSimbol(id, ambito, fila, columna) {\n        for(let amb of ambito){\n            const simbolo = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && amb==simbolo.ambito && simbolo.si==\"variable\")[0];\n            if (simbolo) return simbolo;\n        }\n        //this._consola.value+='f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: variable: ' + id + ' no ha sido declarada.';\n        this._printedTable.erEj.push({descripcion:'variable: ' + id + ' no ha sido declarada.', tipo:\"semántico\", linea:fila, columna:columna}); \n        throw 'ERROR: variable: ' + id + ' no ha sido declarada.';\n    }\n    obtenerFuncion(id, fila, columna, ambito) {\n        const funcion = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && simbolo.si==\"funcion\")[0];\n        if (funcion){ \n                return { tipo: funcion.tipo, parametros: funcion.parametros, accion: funcion.accion };\n            }\n        else {\n            //this._consola.value+='f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: no existe ninguna función llamada: ' + id + '.';\n            this._printedTable.erEj.push({descripcion:'no existe ninguna función llamada: ' + id + '.', tipo:\"semántico\", linea:fila, columna:columna}); \n            throw 'ERROR: no existe ninguna función llamada: ' + id + '.';\n        }\n    }\n    obtenerType(id) {\n        const type = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && simbolo.si==\"type\")[0];\n        if (type) return { atributos:type.atributos };\n        else {\n            //this._consola.value+='ERROR: no existe ningun type llamado: ' + id + '.'; \n            this._printedTable.erEj.push({descripcion:'no existe ningun type llamado: ' + id + '.', tipo:\"semántico\", linea:0, columna:0}); \n            throw 'ERROR: no existe ningun type llamado: ' + id + '.';\n        }\n    }\n    updateFuncionID(id,  newID, fila, columna) {\n        const funcion = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase())[0];\n        if (funcion) {\n            funcion.oldID=funcion.id;\n            funcion.id=newID;\n            return true;\n        }\n        else {\n           // this._consola.value+='f:'+fila+', c:'+columna+'\\nERROR: no existe ninguna función llamada: ' + id + '.';\n            this._printedTable.erEj.push({descripcion:'no existe ninguna función llamada: ' + id + '.', tipo:\"semántico\", linea:fila, columna:columna});\n            throw 'ERROR: no existe ninguna función llamada: ' + id + '.';\n        }\n    }\n    changeOldIDCall(id, fila, columna){\n        const funcion = this._simbolos.filter(simbolo => simbolo.oldID === id && simbolo.si==\"funcion\")[0];\n        if (funcion) {\n            return funcion.id;\n        }\n        else {\n            //this._consola.value+='f:'+fila+', c:'+columna+'\\nERROR: no existe ninguna función llamada: ' + id + '.';\n            this._printedTable.erEj.push({descripcion:'no existe ninguna función llamada: ' + id + '.', tipo:\"semántico\", linea:fila, columna:columna});\n            throw 'ERROR: no existe ninguna función llamada: ' + id + '.';\n        }\n    }\n    existe(id, ambito, si) {\n        const simbolo = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && ambito == simbolo.ambito && si==simbolo.si)[0];\n        if (simbolo){ return true;}\n        else {return false;}\n    }\n\n    get simbolos() {\n        return this._simbolos;\n    }\n}\n\nfunction Data_Type(tipo) {\n    if (tipo === \"number\") {\n        return TIPO_DATO.NUMBER;\n    }else if (tipo === \"boolean\") {\n        return TIPO_DATO.BOOLEAN;\n    }else if (tipo === \"string\") {\n        return TIPO_DATO.STRING;\n    }else if (tipo === \"void\") {\n        return TIPO_DATO.VOID;\n    }else{\n        return tipo;\n    }\n}\nfunction Variable_Type(tipo) {\n    if (tipo === \"let\") {\n        return TIPO_VARIABLE.LET;\n    }\n    if (tipo === \"const\") {\n        return TIPO_VARIABLE.CONST;\n    }\n}\nconst instruccionesAPI = {\n    nuevaOperacionBinaria: function(Izq, Der, tipo) {\n        return nuevaOperacion(Izq, Der, tipo);\n    },\n    nuevaOperacionUnaria: function(izq, tipo) {\n        return nuevaOperacion(izq, undefined, tipo);\n    },\n    nuevoValor: function(valor, tipo) {\n        return {\n            tipo: tipo,\n            valor: valor\n        };\n    },\n    nuevaDeclaracion: function(variable_type, id, data_type, valor, next_declaration, fila, columna) {\n        return {\n            sentencia: SENTENCIAS.DECLARACION,\n            variable_type:Variable_Type(variable_type),\n            data_type: Data_Type(data_type.tipo),\n            isArray:data_type.isArray,\n            id: id,\n            expresion: valor,\n            next_declaration:next_declaration,\n            fila:fila,\n            columna:columna\n        };\n    },\n    nuevoID:function( id, data_type, valor,  next_declaration, fila, columna){\n      return{\n        data_type: Data_Type(data_type.tipo),\n        isArray:data_type.isArray,\n        id: id,\n        expresion: valor,\n        next_declaration:next_declaration,\n        fila:fila,\n        columna:columna\n      };  \n    },\n    nuevoObjeto:function(atributos, columna, fila){\n        return{\n            tipo:TIPO_VALOR.OBJETO,\n            atributos:atributos,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoObjAtributo:function(id, valor, next){\n        return{\n            id:id,\n            valor:valor,\n            next:next\n        };\n    },\n    nuevoTypeAtributo:function(id, data_type, next){\n        return{\n            id:id,\n            data_type:Data_Type(data_type),\n            next:next\n        };\n    },\n    nuevaDimension:function(next_dimension){\n      return{\n          dimension:true,\n          next_dimension:next_dimension\n        };\n    },\n    nuevoTipo: function (tipo, isArray) {\n      return{\n          tipo:tipo,\n          isArray:isArray\n      };  \n    },\n    nuevoArray: function(dimension, columna, fila){\n        return{\n            data_type:TIPO_DATO.ARRAY,\n            dimension:dimension,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoDato: function (dato, next_data) {\n      return{\n          dato:dato,\n          next_data:next_data\n      };  \n    },\n    nuevoType: function(id, atributos, fila, columna){\n        return{\n            sentencia:SENTENCIAS.TYPE_DECLARATION,\n            data_type:TIPO_DATO.TYPE,\n            id:id,\n            atributos:atributos,\n            fila:fila,\n            columna:columna\n        };\n    },\n    nuevoOperadorTernario:function(logica, result1, result2){\n        return{\n            tipo:TIPO_DATO.OPERADOR_TERNARIO,\n            logica:logica,\n            result1:result1,\n            result2:result2\n        };\n    },\n    nuevaAsignacion: function(id, valor, columna, fila) {\n        return {\n            sentencia: SENTENCIAS.ASIGNACION,\n            id: id,\n            expresion: valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoImprimir: function(valor) {\n        return {\n            sentencia: SENTENCIAS.IMPRIMIR,\n            valor: valor\n        };\n    },\n    nuevoIf: function(logica, sentencias, elseT) {\n        return {\n            sentencia: SENTENCIAS.IF,\n            logica: logica,\n            accion: sentencias,\n            else: elseT\n        };\n    },\n    nuevoElseIf: function(logica, sentencias, elseT) {\n        return {\n            sentencia: SENTENCIAS.ELSE_IF,\n            logica: logica,\n            accion: sentencias,\n            else: elseT\n        };\n    },\n    nuevoElse: function(sentencias) {\n        return {\n            sentencia: SENTENCIAS.ELSE,\n            accion: sentencias\n        };\n    },\n    nuevoSwitch: function(logica, cases){\n        return{\n            sentencia:SENTENCIAS.SWITCH,\n            logica:logica,\n            cases:cases\n        };\n    },\n    nuevoCase: function(logica, accion, next_case){\n        return{\n            logica:logica,\n            accion:accion,\n            next_case:next_case\n        };\n    },\n    nuevoDefault: function(accion){\n        return{\n            logica:'default',\n            accion:accion\n            //podía llevar casos después pero aún no lo he hecho\n        };\n    },\n    nuevoFor: function(inicial, final, paso, sentencias) {\n        return {\n            sentencia: SENTENCIAS.FOR,\n            inicial: inicial,\n            final: final,\n            paso: paso,\n            accion: sentencias\n        };\n    },\n    nuevoForOF:function(variable, tipo,conjunto,  accion){\n        return{\n            sentencia:SENTENCIAS.FOR_OF,\n            conjunto:conjunto,\n            variable:variable,\n            accion:accion,\n            tipo:tipo\n        };\n    },\n    nuevoForIn:function(variable,tipo,conjunto,  accion){\n        return{\n            sentencia:SENTENCIAS.FOR_IN,\n            conjunto:conjunto,\n            variable:variable,\n            accion:accion,\n            tipo:tipo\n        };\n    },\n    nuevoWhile:function(logica, accion){\n      return{\n          sentencia:SENTENCIAS.WHILE,\n          logica:logica,\n          accion:accion\n      };  \n    },\n    nuevoDoWhile:function(accion, logica){\n        return{\n            sentencia:SENTENCIAS.DO_WHILE,\n            logica:logica,\n            accion:accion\n        };  \n      },\n    nuevaFuncion: function(tipo, id, parametros, accion,fila,columna) {\n        return {\n            sentencia: SENTENCIAS.FUNCION,\n            tipo: Data_Type(tipo),\n            id: id,\n            parametros: parametros,\n            accion: accion,\n            fila:fila,\n            columna:columna\n        }\n    },\n    nuevaListaid: function(id, siguiente) {\n        return {\n            id: id,\n            siguiente: siguiente\n        };\n    },\n    nuevaLlamada: function(id, parametros, columna, fila) {\n        return {\n            sentencia: SENTENCIAS.LLAMADA,\n            id: id,\n            parametros: parametros,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoArgumento: function(expresion, siguiente, columna, fila) {\n        return {\n            expresion: expresion,\n            siguiente: siguiente,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoParametro: function(tipo, id, siguiente, opcional) {\n        return {\n            tipo: Data_Type(tipo),\n            id: id,\n            siguiente: siguiente,\n            opcional:opcional\n        };\n    },\n    nuevoReturn: function(valor, columna, fila) {\n        return {\n            sentencia: SENTENCIAS.RETURN,\n            valor: valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoArrayIndex: function(index, next_index){\n        return{\n            index:index,\n            next_index:next_index\n        };\n    },\n    nuevoAccesoAPosicion: function(id, index, next_index){\n        return{\n            sentencia:SENTENCIAS.ACCESO_POSICION,\n            id:id,\n            index:index,\n            next_index:next_index\n        };\n    },\n    nuevoDecremento: function(id, columna, fila){\n        return{\n            sentencia:SENTENCIAS.DECREMENTO,\n            id:id,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoIncremento: function(id, columna, fila){\n        return{\n            sentencia:SENTENCIAS.INCREMENTO,\n            id:id,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoPush: function(valor, columna, fila){\n        return{\n            sentencia:SENTENCIAS.PUSH,\n            valor:valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoPop: function(columna, fila){\n        return{            \n            sentencia:SENTENCIAS.POP,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoLength: function(columna, fila){\n        return{            \n            sentencia:SENTENCIAS.LENGTH,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevaReferencia:function(id, acc, columna, fila){\n        return{\n            id:id,\n            acc:acc,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoAccPosicion:function(index, next_acc, columna, fila){\n        return{\n            acc_type:TIPO_ACCESO.POSICION,\n            index:index,\n            next_acc:next_acc,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoAccAtributo:function(atributo, next_acc, columna, fila){\n        return{\n            acc_type:_TIPO_ACCESO.ATRIBUTO,\n            atributo:atributo,\n            next_acc:next_acc,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoContinue:function(columna, fila){\n        return{\n            sentencia:SENTENCIAS.CONTINUE,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoBreak:function(columna, fila){\n        return{\n            sentencia:SENTENCIAS.BREAK,\n            columna:columna, \n            fila:fila\n        };\n    },\n    nuevoAcceso: function(id, columna, fila){\n        return{\n            sentencia:SENTENCIAS.ACCESO,\n            id:id,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoGraficarTS:function(){\n        return{\n            sentencia:SENTENCIAS.GRAFICAR_TS\n        };\n    },\n    nuevoAsignacioSuma:function(id, valor, columna, fila){\n        return{\n            sentencia:SENTENCIAS.ASIGNACION_SUMA,\n            id:id,\n            valor:valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoAsignacioResta:function(id, valor, columna, fila){\n        return{\n            sentencia:SENTENCIAS.ASIGNACION_RESTA,\n            id:id,\n            valor:valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoCharAt: function(valor, next_acc, columna, fila){\n        return{\n            sentencia:SENTENCIAS.CHAR_AT,\n            valor:valor,\n            next_acc:next_acc,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoToLowerCase: function(next_acc,columna, fila){\n        return{            \n            sentencia:SENTENCIAS.TO_LOWER_CASE,\n            next_acc:next_acc,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoToUpperCase: function(next_acc,columna, fila){\n        return{            \n            sentencia:SENTENCIAS.TO_UPPER_CASE,\n            next_acc:next_acc,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoConcat: function(valor,next_acc, columna, fila){\n        return{\n            sentencia:SENTENCIAS.CONCAT,\n            valor:valor,\n            next_acc:next_acc,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoNewArray: function (expresion){\n        return{\n            tipo:TIPO_DATO.NEW_ARRAY,\n            expresion:expresion\n        };\n    },\n    nuevoStr:function(valor,next_acc, tipo) {\n        return {\n            tipo: tipo,\n            valor: valor,\n            next_acc:next_acc\n        };\n    }\n\n};\n\nconst _TIPO_OPERACION = TIPO_OPERACION;\nexport { _TIPO_OPERACION as TIPO_OPERACION };\nconst _TIPO_VARIABLE = TIPO_VARIABLE;\nexport { _TIPO_VARIABLE as TIPO_VARIABLE };\nconst _SENTENCIAS = SENTENCIAS;\nexport { _SENTENCIAS as SENTENCIAS };\nconst _TIPO_VALOR = TIPO_VALOR;\nexport { _TIPO_VALOR as TIPO_VALOR };\nconst _instruccionesAPI = instruccionesAPI;\nexport { _instruccionesAPI as instruccionesAPI };\nconst _TIPO_DATO = TIPO_DATO;\nexport { _TIPO_DATO as TIPO_DATO };\nconst _TS = TS;\nexport { _TS as TS };\nconst _TIPO_ACCESO = TIPO_ACCESO;\nexport {_TIPO_ACCESO as TIPO_ACCESO};","import React from 'react'\n\nimport './App.css'\nimport SocialFollow from \"./SocialFollow\"\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n            <h1>WELCOME TO GYAANI BABA</h1>\n          </div>\n\n        );\n    }\n}\n\nexport default App","import { TS, TIPO_DATO, SENTENCIAS, TIPO_VARIABLE, TIPO_OPERACION, TIPO_VALOR, TIPO_ACCESO } from \"./instrucciones\";\n\nexport default function Desanidar(salida, consola, traduccion, tablaDeSalida){\n   // console.log(\"this is the output\"+  JSON.stringify(salida.AST)); \n   let output=\"\";\n   tablaDeSalida.erTr=salida.ErrArr;\n   try {\n        consola.value=\"\";\n        const tsGlobal = new TS([], consola);\n        scanForFunctions(salida.AST, tsGlobal, \"Global\");\n        scanForTypes(salida.AST, tsGlobal);\n        procesarBloque(salida.AST, tsGlobal, \"Global\");\n        traduccion.setValue(output);\n        setSalida(salida.Errores);\n        console.log(tsGlobal);\n        sendTable(tsGlobal);\n    } catch (e) {\n        console.error(e);\n        return;\n    }\n    function procesarBloque(instrucciones, tablaDeSimbolos, ambito){\n        for(let instruccion of instrucciones){\n            if (instruccion.sentencia === SENTENCIAS.DECLARACION) {\n                procesarDeclaracion(instruccion, tablaDeSimbolos, ambito);\n                output+=\"\\n\";\n            }else if (instruccion.sentencia === SENTENCIAS.ASIGNACION) {\n                procesarAsigacion(instruccion, tablaDeSimbolos);\n                output+=\"\\n\";\n            }else if (instruccion.sentencia === SENTENCIAS.ASIGNACION_SUMA) {\n                procesarAsigacionSuma(instruccion, tablaDeSimbolos);\n                output+=\"\\n\";\n            }else if (instruccion.sentencia === SENTENCIAS.ASIGNACION_RESTA) {\n                procesarAsigacionResta(instruccion, tablaDeSimbolos);\n                output+=\"\\n\";\n            }else if (instruccion.sentencia === SENTENCIAS.TYPE_DECLARATION) {\n                procesarTypeDeclaration(instruccion, tablaDeSimbolos, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.IF){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarIf(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.IMPRIMIR){\n                procesarImpresion(instruccion, tablaDeSimbolos);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.SWITCH){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarSwitch(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.FOR){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarFor(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.FOR_IN){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarForIn(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.FOR_OF){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procecsarForOf(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.WHILE){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarWhile(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.DO_WHILE){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarDoWhile(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.LLAMADA){\n                output+=procesarLLamada(instruccion, tablaDeSimbolos)+\";\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.RETURN){\n                procesarReturn(instruccion, tablaDeSimbolos);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.BREAK){\n                output+=\"break;\\n\"\n            }else if(instruccion.sentencia === SENTENCIAS.CONTINUE){\n                output+=\"continue;\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.INCREMENTO){\n                procesarIncremento(instruccion);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.DECREMENTO){\n                procesarDecremento(instruccion);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.ACCESO){\n                output+=procesarIdentificador(instruccion.id, tablaDeSimbolos)+\";\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.FUNCION){\n                procesarFuncion(instruccion, tablaDeSimbolos, ambito);\n            }else if(instruccion.sentencia === SENTENCIAS.GRAFICAR_TS){\n                output+=\"graficar_ts();\\n\";\n            }else if(instruccion==\";\"){\n                console.log(\"En esta posición hay un error sintáctico.\");\n                //se ignora esta acción\n            }\n        }\n    }\n    function procesarDeclaracion(instruccion, tablaDeSimbolos, ambito){\n        output+=Variable_Type(instruccion.variable_type)+\" \";\n        let temp = instruccion;\n        let data_type = \"\";\n        while(temp!=\"Epsilon\"){\n            if(temp!=instruccion) output+=\",\";\n                if(temp.data_type===\"infer\"){\n                    output+=temp.id; \n                    tablaDeSimbolos.agregar(instruccion.variable_type,temp.id, \"undefined\", \"undefined\", ambito, temp.fila, temp.columna);\n            \n                }else{                \n                    output+=temp.id+\":\"+Data_Type(temp.data_type);\n                    if(temp.isArray!=false){\n                        let temporal = temp.isArray;\n                        while(temporal.dimension===true){\n                            output+=\"[]\";\n                            temporal=temporal.next_dimension;\n                        }\n                    } \n                    tablaDeSimbolos.agregar(instruccion.variable_type,temp.id, {tipo:Data_Type(temp.data_type), isArray:temp.isArray}, \"undefined\", ambito, temp.fila, temp.columna);\n            \n                }\n            if(temp.expresion!=\"undefined\"){\n                output+=\"=\"+procesarExpresionNumerica(temp.expresion, tablaDeSimbolos);\n            }\n           temp=temp.next_declaration;\n        }\n        output+=\";\";       \n    }\n    function Data_Type(tipo){\n        if (tipo === TIPO_DATO.NUMBER) {\n            return \"number\";\n        }else if (tipo === TIPO_DATO.BOOLEAN) {\n            return \"boolean\";\n        }else if (tipo === TIPO_DATO.STRING) {\n            return \"string\";\n        }else if (tipo === TIPO_DATO.VOID) {\n            return \"void\";\n        }else{\n            return tipo;\n        }\n    }\n    function Variable_Type(tipo) {\n        if (tipo === TIPO_VARIABLE.LET) {\n            return \"let\";\n        }\n        if (tipo === TIPO_VARIABLE.CONST) {\n            return \"const\";\n        }\n    }\n    function procesarExpresionNumerica(expresion, tablaDeSimbolos){\n        if (expresion.sentencia === SENTENCIAS.LLAMADA) {\n            return procesarLLamada(expresion, tablaDeSimbolos);\n        } else if (expresion.tipo === TIPO_OPERACION.NEGATIVO) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            return \"(-\"+valorIzq+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.SUMA) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"+\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.RESTA) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"-\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MULTIPLICACION) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"*\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.DIVISION) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"/\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.POTENCIA) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"**\" +valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MODULO) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq+ \"%\" +valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq+ \">\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\">=\" +valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"<\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"<=\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.IGUAL_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"==\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.DISTINTO) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"!=\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.AND) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"&&\" +valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.OR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq+ \"||\" +valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.NOT) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            return \"(!\"+valorIzq+\")\";\n        }else if(expresion.tipo===TIPO_OPERACION.CONCATENACION){\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq+\", \"+valorDer+\")\";\n        } else if (expresion.tipo === TIPO_VALOR.NUMERO) {\n            return expresion.valor;\n        }else if (expresion.tipo === TIPO_VALOR.DECIMAL) {\n            return expresion.valor;\n        }else if (expresion.tipo === TIPO_VALOR.TRUE) {\n            return \"true\";\n        } else if (expresion.tipo === TIPO_VALOR.FALSE) {\n            return \"false\";\n        } else if (expresion.tipo === TIPO_VALOR.IDENTIFICADOR) {\n            return procesarIdentificador(expresion.valor, tablaDeSimbolos);\n        } else if (expresion.tipo === TIPO_VALOR.OBJETO) {\n            return procesarObjeto(expresion, tablaDeSimbolos);\n        }else if (expresion.data_type === TIPO_DATO.ARRAY) {\n            return procesarArreglo(expresion, tablaDeSimbolos);\n        }else if (expresion.tipo === TIPO_DATO.OPERADOR_TERNARIO) {\n            return procesarOperadorTernario(expresion, tablaDeSimbolos);\n        }else if (expresion.sentencia === SENTENCIAS.ACCESO_POSICION) {\n            return procesarAccesoAPosicion(expresion, tablaDeSimbolos);\n        } else if (expresion.tipo === TIPO_VALOR.CADENA) {\n            return \"\\\"\"+expresion.valor+\"\\\"\"+strMethods(expresion.next_acc, tablaDeSimbolos);\n        } else if (expresion.tipo === TIPO_VALOR.CADENA_CHARS) {\n            return \"\\'\"+expresion.valor+\"\\'\"+strMethods(expresion.next_acc, tablaDeSimbolos);\n        } else if (expresion.tipo === TIPO_VALOR.CADENA_EJECUTABLE) {\n            return \"\\`\"+expresion.valor+\"\\`\";\n        }else if (expresion.tipo === TIPO_VALOR.NULL) {\n            return \"null\";\n        }else if(expresion.tipo===TIPO_DATO.NEW_ARRAY){\n            return \"new Array(\"+procesarExpresionNumerica(expresion.expresion)+\")\";\n        }else {\n            throw 'ERROR: expresión numérica no válida: ' + expresion.valor;\n        }\n    }\n    function procesarLLamada(llamada, tablaDeSimbolos){\n        let text=tablaDeSimbolos.changeOldIDCall(llamada.id, llamada.fila, llamada.columna)+\"(\";\n        text+=procesarArgumentos(llamada.parametros, tablaDeSimbolos);\n        text+=\")\";\n        return text;\n    }\n    function procesarArgumentos(argumentos, tablaDeSimbolos){\n        let text=\"\";\n        let temp = argumentos;\n        while(temp!=\"Epsilon\"){\n            if(temp!=argumentos) text+=\",\";\n            text+=procesarExpresionNumerica(temp.expresion, tablaDeSimbolos);\n            temp=temp.siguiente;\n        }\n        return text;\n    }\n    function procesarObjeto(objeto, tablaDeSimbolos){\n        let text=\"{\\n\";\n        let temp = objeto.atributos;\n        while(temp!=\"Epsilon\"){\n            if(temp != objeto.atributos){\n                text+=\",\\n\";\n            }\n            text+=temp.id+\":\"+procesarExpresionNumerica(temp.valor, tablaDeSimbolos);\n            temp=temp.next;\n        }\n        return text+\"\\n}\";\n    }\n    function procesarArreglo(arreglo, tablaDeSimbolos){\n         let text=\"\";\n         text+=\"[\";\n         if(arreglo.dimension!=\"Epsilon\"){\n            text+=procesarElementosDeArray(arreglo.dimension, tablaDeSimbolos);\n         }\n         return text+\"]\";\n    }\n    function procesarElementosDeArray(datos, tablaDeSimbolos){\n        let text=\"\";\n        let temp=datos;\n        while(temp!=\"Epsilon\"){\n            if(temp!=datos) text+=\",\";\n            text+=procesarExpresionNumerica(temp.dato, tablaDeSimbolos);\n            temp=temp.next_data;\n        }\n        return text;\n    }\n    function procesarOperadorTernario(operacion, tablaDeSimbolos){\n        let text=\"\";\n        text+=procesarExpresionNumerica(operacion.logica, tablaDeSimbolos)+\"?\";\n        text+=procesarExpresionNumerica(operacion.result1, tablaDeSimbolos)+\":\";\n        text+=procesarExpresionNumerica(operacion.result2, tablaDeSimbolos);\n        return text;\n    }\n    function procesarAccesoAPosicion(acceso, tablaDeSimbolos){\n        let text=acceso.id;\n        let temp = acceso;\n        while(temp!=\"false\"){\n            text+=\"[\"+procesarExpresionNumerica(temp.index, tablaDeSimbolos)+\"]\";\n            temp=temp.next_index;\n        }\n        return text;\n    }\n    function procesarTypeDeclaration(declaracion, tablaDeSimbolos){\n        output+=\"type \"+declaracion.id+\"={\\n\";\n        let temp=declaracion.atributos;\n        while(temp!=\"Epsilon\"){\n            if(temp!=declaracion.atributos) output+=\",\\n\";\n            if(temp.data_type.tipo===\"infer\"){\n                output+=temp.id;\n            }else{                \n                output+=temp.id+\":\"+Data_Type(temp.data_type.tipo);\n                if(temp.isArray!=false){\n                    let temporal = temp.data_type.isArray;\n                    while(temporal.dimension===true){\n                        output+=\"[]\";\n                        temporal=temporal.next_dimension;\n                    }\n                }\n            }           \n            temp=temp.next;\n        }\n        output+=\"\\n};\";\n    }\n    function procesarIf(instruccion, tablaDeSimbolos, ambito){\n        output+=\"if(\"+procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos)+\"){\\n\";\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\";\n        if(instruccion.else!=\"Epsilon\"){\n            let temp = instruccion.else;\n            while(temp.sentencia!=SENTENCIAS.ELSE && temp != \"Epsilon\"){\n                output+=\"else if(\"+procesarExpresionNumerica(temp.logica, tablaDeSimbolos)+\"){\\n\";\n                procesarBloque(temp.accion, tablaDeSimbolos, ambito);\n                output+=\"}\";\n                temp=temp.else;\n            }\n            if(temp.sentencia==SENTENCIAS.ELSE){\n                output+=\"else{\\n\";\n                procesarBloque(temp.accion, tablaDeSimbolos, ambito);\n                output+=\"}\"\n            }\n        }\n    }\n    function procesarImpresion(instruccion, tablaDeSimbolos){\n        output+=\"console.log(\"+procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos)+\");\";\n    }\n    function procesarSwitch(instruccion, tablaDeSimbolos, ambito){\n        output+=\"switch(\"+procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos)+\"){\\n\";\n        let temp = instruccion.cases;\n        while(temp!=\"Epsilon\"){\n            if(temp.logica==\"default\"){\n                output+=\"default:\\n\";\n                procesarBloque(temp.accion, tablaDeSimbolos, ambito);\n                break;\n            }else{\n                output+=\"case \"+procesarExpresionNumerica(temp.logica, tablaDeSimbolos)+\":\\n\";\n                procesarBloque(temp.accion, tablaDeSimbolos, ambito);\n            }\n            temp=temp.next_case;\n        }\n        output+=\"\\n}\";\n    }\n    function procesarIdentificador(identificador, tablaDeSimbolos){\n        let text=\"\";\n        text+=identificador.id;\n        let temp = identificador.acc;\n        while(temp!=\"Epsilon\"){\n            if(temp.acc_type==TIPO_ACCESO.ATRIBUTO){\n                text+=\".\"+temp.atributo;\n            }else if(temp.acc_type==TIPO_ACCESO.POSICION){\n                text+=\"[\"+procesarExpresionNumerica(temp.index, tablaDeSimbolos)+\"]\";\n            }else if(temp.sentencia==SENTENCIAS.LENGTH){\n                text+=\".length\";\n                break;\n            }else if(temp.sentencia==SENTENCIAS.CONCAT){\n                text+=\".concat(\"+procesarExpresionNumerica(temp.valor, tablaDeSimbolos)+\")\";\n            }else if(temp.sentencia==SENTENCIAS.TO_LOWER_CASE){\n                text+=\".toLowerCase()\";\n            }else if(temp.sentencia==SENTENCIAS.TO_UPPER_CASE){\n                text+=\".toUpperCase()\";\n            }else if(temp.sentencia==SENTENCIAS.CHAR_AT){\n                text+=\".CharAt(\"+procesarExpresionNumerica(temp.valor, tablaDeSimbolos)+\")\";\n            }\n            temp=temp.next_acc;\n        }\n        return text;\n    }\n    function procesarFor(instruccion, tablaDeSimbolos, ambito){\n        output+=\"for(\";\n        if(instruccion.inicial.sentencia==SENTENCIAS.ASIGNACION){\n            output+=procesarIdentificador(instruccion.inicial.id)+\"=\"+procesarExpresionNumerica(instruccion.inicial.expresion, tablaDeSimbolos)+\";\";\n        }else if(instruccion.inicial.sentencia==SENTENCIAS.DECLARACION){\n            procesarDeclaracion(instruccion.inicial, tablaDeSimbolos, ambito);\n        }\n        output+=procesarExpresionNumerica(instruccion.final, tablaDeSimbolos)+\";\";\n        if(instruccion.paso.paso==\"++\"){\n            output+=instruccion.paso.id+\"++){\\n\";\n        }else  if(instruccion.paso.paso==\"--\"){\n            output+=instruccion.paso.id+\"--){\\n\";\n        }else {\n            output+=instruccion.paso.id+\"=\"+procesarExpresionNumerica(instruccion.paso.paso, tablaDeSimbolos)+\"){\\n\";\n        }\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\";//se le quitó el \\n porque cada sentencia lleva un salto de línea al final\n    }\n    function procesarAsigacion(instruccion, tablaDeSimbolos){\n        output+=procesarIdentificador(instruccion.id, tablaDeSimbolos)+\"=\"+procesarExpresionNumerica(instruccion.expresion, tablaDeSimbolos)+\";\";\n    }\n    function procecsarForOf(instruccion, tablaDeSimbolos, ambito){\n        let tipo = \"\";\n        let temp=instruccion.tipo;\n        tipo+=Data_Type(temp.tipo);\n        if(temp.isArray!=false){\n            let temporal = temp.isArray;\n            while(temporal.dimension===true){\n                tipo+=\"[]\";\n                temporal=temporal.next_dimension;\n            }\n        } \n        output+=\"for(let \"+instruccion.variable+\":\"+tipo+\" of \"+procesarExpresionNumerica(instruccion.conjunto)+\"){\\n\";\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\";\n    }\n    function procesarForIn(instruccion, tablaDeSimbolos, ambito){\n        let tipo = \"\";\n        let temp=instruccion.tipo;\n        tipo+=Data_Type(temp.tipo);\n        if(temp.isArray!=false){\n            let temporal = temp.isArray;\n            while(temporal.dimension===true){\n                tipo+=\"[]\";\n                temporal=temporal.next_dimension;\n            }\n        } \n        output+=\"for(let \"+instruccion.variable+\":\"+tipo+\" in \"+procesarExpresionNumerica(instruccion.conjunto)+\"){\\n\";\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\";\n    }\n    function procesarWhile(instruccion, tablaDeSimbolos, ambito){\n        output+=\"while(\"+procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos)+\"){\\n\";\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\"\n    }\n    function procesarDoWhile(instruccion, tablaDeSimbolos, ambito){\n        output+=\"do{\\n\";\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\"+\"while(\"+procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos)+\");\";\n    }\n    function procesarReturn(instruccion, tablaDeSimbolos){\n        if(instruccion.valor==\"Epsilon\"){\n            output+=\"return;\";\n        }else{\n            output+=\"return \"+procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos)+\";\";\n        }\n    }\n    function procesarIncremento(instruccion){\n        output+=procesarIdentificador(instruccion.id, tablaDeSalida)+\"++;\";\n    }\n    function procesarDecremento(instruccion){\n        output+=procesarIdentificador(instruccion.id, tablaDeSalida)+\"--;\";\n    }\n    function procesarFuncion(instrucciones, tablaDeSimbolos, ambito){\n            let funciones=[];\n            output+=/*(ambito==\"Global\")?*/\"function \"+instrucciones.id+\"(\"+procesarParametros(instrucciones.parametros)+\"):\"+procesarTipo(instrucciones.tipo)+\"{\\n\"/*:\"function \"+ambito+\"_\"+instrucciones.id+\"(\"+procesarParametros(instrucciones.parametros)+\"):\"+procesarTipo(instrucciones.tipo)+\"{\\n\"*/;\n       //     if(ambito!=\"Global\")tablaDeSimbolos.updateFuncionID(instrucciones.id, ambito+\"_\"+instrucciones.id);\n           // instrucciones.id=(ambito==\"Global\")?instrucciones.id:ambito+\"_\"+instrucciones.id;\n            for(let instruccion of instrucciones.accion){\n                if(instruccion.sentencia==SENTENCIAS.FUNCION){\n                    //quizás con ponerlo acá se soluciona\n                    funciones.push(instruccion);\n                    //output+=(ambito!=\"Global\")?\"//origen de la función \"+instruccion.id+\"\\n\":\"\";\n                    output+=\"//origen de la función \"+instruccion.id+\"\\n\";\n                }else{\n                        procesarBloque([instruccion], tablaDeSimbolos, instrucciones.id);                    \n                }\n            }\n            output+=\"}\\n\"\n            for(let funcion of  funciones){\n                procesarFuncion(funcion, tablaDeSimbolos, instrucciones.id);                    \n            }\n            //imprimir todas las funciones justo después de salir de la función padre\n            //recorrer la función que se acaba de sacar para que saque a sus hijos\n    }\n    function scanForFunctions(instrucciones, tablaDeSimbolos, ambito){\n        for(let instruccion of instrucciones){\n            if(instruccion.sentencia==SENTENCIAS.FUNCION){\n                tablaDeSimbolos.agregarFuncion(instruccion.id, instruccion.tipo, null, null, ambito, instruccion.fila, instruccion.columna);\n                if(ambito!=\"Global\"){\n                    tablaDeSimbolos.updateFuncionID(instruccion.id, ambito+\"_\"+instruccion.id, instruccion.fila, instruccion.columna);\n                }else{\n                    tablaDeSimbolos.updateFuncionID(instruccion.id, instruccion.id, instruccion.fila, instruccion.columna);                    \n                }\n                instruccion.id=(ambito==\"Global\")?instruccion.id:ambito+\"_\"+instruccion.id;\n                scanForFunctions(instruccion.accion, tablaDeSimbolos, instruccion.id);\n            }\n        }\n    }\n    function scanForTypes(instrucciones, tablaDeSimbolos){\n        for(let instruccion of instrucciones){\n            if(instruccion.sentencia==SENTENCIAS.TYPE_DECLARATION){\n                tablaDeSimbolos.agregarType(instruccion.id, null, instruccion.fila, instruccion.columna);\n            }\n        }\n    }\n    function sendTable(tablaDeSimbolos){\n        tablaDeSalida.tsTr=tablaDeSimbolos;\n    }\n    function procesarParametros(parametros){\n        let text=\"\";\n        let temp = parametros;\n        while(temp!=\"Epsilon\"){\n            if(temp!=parametros)text+=\", \";\n            text+=(temp.tipo.tipo==\"infer\")?temp.id:temp.id+\":\"+procesarTipo(temp.tipo);\n            temp=temp.siguiente;\n        }\n        return text;\n    }\n    function procesarTipo(tipo){\n        let text=tipo.tipo;\n        if(tipo.isArray!=false){\n            let temporal = tipo.isArray;\n            while(temporal.dimension===true){\n                text+=\"[]\";\n                temporal=temporal.next_dimension;\n            }\n        }\n        return text;   \n    }\n    function lookForMethods(id){\n        //se realiza este método para verificar que no vengan push, pop o length en la parte izquierda de ua igualdad \n        //se realiza también para saber que no viene un push en la parte derecha\n        //se realiza en los métodos no en procesarBloque\n    }\n    function procesarAsigacionSuma(instruccion, tablaDeSimbolos){\n        output+=procesarIdentificador(instruccion.id, tablaDeSimbolos)+\"+=\"+procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos)+\";\";\n    }\n    function procesarAsigacionResta(instruccion, tablaDeSimbolos){\n        output+=procesarIdentificador(instruccion.id, tablaDeSimbolos)+\"-=\"+procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos)+\";\";\n    }\n    function setSalida(Errores){\n        for(let error of Errores){\n            consola.value+=\"> \"+error+\"\\n\";\n        }\n    } \n    function strMethods(acc, tablaDeSimbolos){\n        let text=\"\";\n        let temp = acc;\n        while(temp!=\"Epsilon\"){\n            if(temp.acc_type==TIPO_ACCESO.ATRIBUTO){\n                text+=\".\"+temp.atributo;\n            }else if(temp.acc_type==TIPO_ACCESO.POSICION){\n                text+=\"[\"+procesarExpresionNumerica(temp.index, tablaDeSimbolos)+\"]\";\n            }else if(temp.sentencia==SENTENCIAS.LENGTH){\n                text+=\".length\";\n                break;\n            }else if(temp.sentencia==SENTENCIAS.CONCAT){\n                text+=\".concat(\"+procesarExpresionNumerica(temp.valor, tablaDeSimbolos)+\")\";\n            }else if(temp.sentencia==SENTENCIAS.TO_LOWER_CASE){\n                text+=\".toLowerCase()\";\n            }else if(temp.sentencia==SENTENCIAS.TO_UPPER_CASE){\n                text+=\".toUpperCase()\";\n            }else if(temp.sentencia==SENTENCIAS.CHAR_AT){\n                text+=\".CharAt(\"+procesarExpresionNumerica(temp.valor, tablaDeSimbolos)+\")\";\n            }\n            temp=temp.next_acc;\n        }\n        return text;\n    }\n}","import { ThumbUpAltSharp } from \"@material-ui/icons\";\nimport { TS, TIPO_DATO, SENTENCIAS, TIPO_VARIABLE, TIPO_OPERACION, TIPO_VALOR, TIPO_ACCESO } from \"./instrucciones\";\n\nexport default function Traucir(salida, consola, traduccion, printedTable, tablero){\n    const contadores = {temporales:4, etiquetas:0};\n    const arreglos = {uno:0, dos:0, tres:0, cuatro:0, cinco:0};\n   //const arreglos = [];\n    const pilas = {stack:0, heap:0};\n    const stack = [], heap=[];\n   let functionDeclaration=\"\", funcionesTraducidas=[];\n   printedTable.erEj=salida.ErrArr;\n   const tsGlobal = new TS([], printedTable);\n   const FuncionesC3D = [];\n   try {\n       consola.value=\"\";\n        setSalida(salida.Errores);       \n        scanForTypes(salida.AST, tsGlobal); \n        scanForFunctions(salida.AST, tsGlobal, \"Global\");\n        consola.value=\"\";\n        procesarBloque(salida.AST, tsGlobal, \"Global\");\n        let mainContent = consola.value;\n        FuncionesC3D.push({id:\"main\", c3d:mainContent});\n        mainContent=\"void main()\\n{\\n\"+ mainContent;\n        consola.value=\"\";\n        //importFunctions(salida.AST, tsGlobal, \"Global\");\n        importFunctions();\n        consola.value=\"#include <stdio.h> //Importar para el uso de Printf\\n#include <math.h>//Importa fmod\\ndouble heap[10000000]; //Estructura para heap\\ndouble stack[16394]; //Estructura para stack\\ndouble p; //Puntero P\\ndouble h; //Puntero H\\ndouble \"+printTemporales()+funcionesNativas()+functionDeclaration+ mainContent+\"\\nreturn;\\n}\\n\";\n        //traduccion.setValue(output);\n        console.log(tsGlobal._simbolos);\n        //console.log(FuncionesC3D)\n        sendTable(tsGlobal);\n    } catch (e) {\n        console.error(e);\n        return;\n    }\n    function procesarBloque(instrucciones, tablaDeSimbolos, ambito, inicio, falso, retorno){\n        for(let instruccion of instrucciones){\n            if (instruccion.sentencia === SENTENCIAS.DECLARACION) {\n                try{\n                    procesarDeclaracion(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.ASIGNACION) {\n                try{\n                    procesarAsigacion(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia === SENTENCIAS.IMPRIMIR){\n                try{\n                    procesarImpresion(instruccion.valor, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia === SENTENCIAS.ACCESO){\n                try{\n                    procesarAccID(instruccion.id, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia === SENTENCIAS.IF){                \n                try{\n                    let returnedAcction = procesarIf(instruccion, tablaDeSimbolos, ambito, inicio, falso, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.FOR) {\n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarFor(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.FOR_OF) {\n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarForOF(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.FOR_IN) {\n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarForIn(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.WHILE) {\n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarWhile(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.DO_WHILE) {\n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarDoWhile(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                        console.error(e);\n                    }\n            }else if(instruccion.sentencia === SENTENCIAS.LLAMADA){ \n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);               \n                    procesarLlamada(instruccion, tsFor, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.INCREMENTO){\n                try{\n                    procesarUnicambios(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.DECREMENTO  ){\n                try{\n                    procesarUnicambios(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.ASIGNACION_SUMA  ){\n                try{\n                    procesarUnicambios(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.ASIGNACION_RESTA  ){\n                try{\n                    procesarUnicambios(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia === SENTENCIAS.SWITCH){ \n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);               \n                    let returnedAcction =  procesarSwitch(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.BREAK){\n                if(falso==undefined){\n                    printedTable.erEj.push({descripcion:'break fuera de ciclo.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                    throw 'break fuera de ciclo.';         \n                }\n                consola.value+=(\"goto \"+falso+\";\\n\");\n            }else if(instruccion.sentencia===SENTENCIAS.CONTINUE){\n                if(inicio==undefined){\n                    printedTable.erEj.push({descripcion:'continue fuera de ciclo.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                    throw 'continue fuera de ciclo.';         \n                }\n                consola.value+=(\"goto \"+inicio+\";\\n\");\n            }else if(instruccion.sentencia===SENTENCIAS.RETURN){\n                try{\n                    if(ambito==\"Global\"){\n                        printedTable.erEj.push({descripcion:'Return fuera de función.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                        throw '>ERROR: Return fuera de función.'; \n                    }\n                    if(instruccion.valor==\"Epsilon\"){\n                        //no devuelvo nada porque es un return sin valor\n                        //consola.value+=\"stack[(int)p]=0;\";\n                        consola.value+=\"goto \"+retorno+\";\\n\";\n                    }else{\n                        let valor=procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos, ambito);\n                        consola.value+=\"stack[(int)p]=\"+valor.valor+\";\\n\";\n                        consola.value+=\"goto \"+retorno+\";\\n\";\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.GRAFICAR_TS){\n                try{\n                    const tsFor = new TS(JSON.parse(JSON.stringify(tablaDeSimbolos.simbolos)), printedTable);  \n                    graficar_Ts(tsFor, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }\n        }\n    }\n    function setSalida(Errores){\n        if(Errores.length>0){\n        consola.value+=\"ALERTA:\\nExisten errores, consulta la tabla de errores para localizarlos.\\nNota: Si son errores sintácticos intenta ver las línea superiores para hallar el causante.\\n\\n\";\n        return;\n        }\n        for(let error of Errores){\n            consola.value+=\"> \"+error+\"\\n\";\n        }\n    }\n    function sendTable(tablaDeSimbolos){\n        printedTable.tsEj=tablaDeSimbolos;\n    }\n    function scanForFunctions(instrucciones, tablaDeSimbolos, ambito){\n        for(let instruccion of instrucciones){\n                if(instruccion.sentencia==SENTENCIAS.FUNCION){\n                    if(ambito==\"Global\"){ \n                            if(tablaDeSimbolos.existe(instruccion.id, ambito, \"funcion\")){\n                                consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+'\\n>ERROR: No se soporta la sobrecarga de funciones, id repetido :'+instruccion.id;  \n                                throw '>ERROR: No se soporta la sobrecarga de funciones, id repetido :'+instruccion.id;\n                            }  \n                            let dataType = procesarDataType(instruccion.tipo);\n                            if(tablaDeSimbolos.existe(dataType.split(\"[]\")[0], undefined, \"type\")==false && dataType.split(\"[]\")[0]!=\"number\" && dataType.split(\"[]\")[0]!=\"string\"&& dataType.split(\"[]\")[0]!=\"void\" && dataType.split(\"[]\")[0]!=\"boolean\"){\n                                consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+'\\n>ERROR: Type '+dataType.split(\"[]\")[0]+' no ha sido definido y es el tipo de retorno de la función:'+instruccion.id;  \n                                throw '>ERROR: Type '+dataType.split(\"[]\")[0]+' no ha sido definido y es el tipo de retorno de la función:'+instruccion.id;  \n                            }\n                            tablaDeSimbolos.agregarFuncion(instruccion.id, procesarDataType(instruccion.tipo), procesarParametros(instruccion.parametros), instruccion.accion, ambito, instruccion.fila, instruccion.columna);\n                            //traducirFunciones(instruccion.id,new TS(JSON.parse(JSON.stringify(tablaDeSimbolos._simbolos)), consola), ambito);\n                            scanForFunctions(instruccion.accion, tablaDeSimbolos, instruccion.id);\n                    }else{      \n                        consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+'\\n>ERROR: Funciones anidadas en la función:'+ambito;  \n                        throw '>ERROR: Funciones anidadas en la función:'+ambito;\n                    } \n                }  \n        }    \n    }\n    function scanForTypes(instrucciones, tablaDeSimbolos){\n        for(let instruccion of instrucciones){\n            if(instruccion.sentencia==SENTENCIAS.TYPE_DECLARATION){\n                tablaDeSimbolos.agregarType(instruccion.id, procesarAtributos(instruccion.atributos), instruccion.fila, instruccion.columna);\n            }\n        }\n    }\n    function procesarAtributos(atributos){\n        let tempAtributos = [];\n        let temp = atributos;\n        while(temp!=\"Epsilon\"){\n            tempAtributos.push({id:temp.id, tipo: procesarDataType(temp.data_type)});\n            temp=temp.next;\n        }\n        return tempAtributos;\n    }\n    function procesarDataType(data_description){\n        let dimension =\"\";\n        let temp=data_description.isArray;\n        while(temp!=false){\n            dimension+=\"[]\";\n            temp=temp.next_dimension;\n        }\n        return data_description.tipo.toLowerCase()+dimension;\n    }\n    function primitive_Data(tipo){\n        if (tipo === TIPO_DATO.NUMBER) {\n            return \"number\";\n        }else if (tipo === TIPO_DATO.BOOLEAN) {\n            return \"boolean\";\n        }else if (tipo === TIPO_DATO.STRING) {\n            return \"string\";\n        }else if (tipo === TIPO_DATO.VOID) {    \n            return \"void\";\n        }else{\n            return tipo.toLowerCase();\n        }\n    }\n    function procesarParametros(parametros){\n        let temporal=[];\n        let temp = parametros;\n        while(temp!=\"Epsilon\"){\n            temporal.push({id:temp.id, tipo: procesarDataType(temp.tipo)});\n            temp=temp.siguiente;\n        }\n        return temporal;\n    }\n    function procesarDeclaracion(instruccion, tablaDeSimbolos, ambito){\n        let temp= instruccion;\n        while(temp!=\"Epsilon\"){\n            crearSimbolo(instruccion.variable_type, temp.id, {tipo:primitive_Data(temp.data_type), isArray:temp.isArray}, temp.expresion, ambito, tablaDeSimbolos, temp.fila, temp.columna);\n            temp=temp.next_declaration;\n        }\n    }\n    function procesarAsigacion(instruccion, tablaDeSimbolos, ambito){\n        let principalValue = tablaDeSimbolos.getSimbol(instruccion.id.id, SplitAmbitos(ambito), instruccion.fila, instruccion.columna);\n        if(principalValue.var_type==TIPO_VARIABLE.CONST && instruccion.id.acc==\"Epsilon\"){\n            consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\n>ERROR: No se puede asignar a ' + instruccion.id.id+' porque es una constante.\\n';  \n            throw '>ERROR:  No se puede asignar a ' + instruccion.id.id+' porque es una constante.\\n';   \n        }\n        let assignedValue = procesarExpresionNumerica(instruccion.expresion, tablaDeSimbolos, ambito, principalValue.tipo);\n        let temp = instruccion.id.acc, tipo =principalValue.tipo, direcciones=principalValue.direcciones, pila;\n        if(ambito==\"Global\"||principalValue.ambito==\"Global\"&&principalValue.tipo==\"number\"||principalValue.ambito==\"Global\"&&principalValue.tipo==\"boolean\"){\n            pila=\"heap\";\n        }else{\n            pila=\"stack\";\n        }\n        if(pila==\"stack\" && temp !=\"Epsilon\" && tipo!=\"number\" && tipo!=\"boolean\"){\n            let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n            consola.value+=temporal+\"=stack[(int)\"+direcciones+\"];\\n\";//dirección en el heap\n            //consola.value+=temporal2+\"=heap[(int)\"+temporal+\"];\\n\";\n            direcciones=temporal;\n        }\n        while(temp!=\"Epsilon\"){\n            pila=\"heap\";//se direcciona a el heap porque procede de un objeto o un array\n            if(temp.acc_type==TIPO_ACCESO.ATRIBUTO){//B\n                //comprobar que exista la propiedad\n                let value = ExistingAttribute(principalValue.tipo, temp.atributo, tablaDeSimbolos);\n                //comprobar que el valor sea del mismo tipo del atributo o null\n                if(value == false){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No existe el atributo '+temp.atributo+'\\n';  \n                    printedTable.erEj.push({descripcion:' No existe el atributo '+temp.atributo,tipo:\"semántico\", linea:temp.fila, columna:temp.columna}); \n                    throw '>ERROR: No existe el atributo '+temp.atributo+'\\n';\n                }\n                /*for(let attribute of principalValue.direcciones){\n                    if(attribute.id==temp.atributo){\n                        principalValue=attribute;\n                        tipo = value.valor.tipo;\n                        direcciones=attribute.direcciones;\n                    }\n                }*/\n                let temporal1=nuevoTemporal(); \n                consola.value+=temporal1+\"=\"+principalValue.direcciones+\"+\"+(value.posicion)+\";\\n\";\n                direcciones=temporal1;\n                tipo=value.valor.tipo;\n            }else if(temp.acc_type==TIPO_ACCESO.POSICION){//B\n                //comprobar que sea un array\n                if(principalValue.tipo.split(\"[]\")==1){\n                    //onsola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: Intento de acceso a posición de array inexistente\\n';  \n                    printedTable.erEj.push({descripcion:'Intento de acceso a posición de array inexistente',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                    throw '>ERROR: Intento de acceso a posición de array inexistente\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.index, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"number\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se reconoce la expresion '+valor.valor+' como un index.\\n';\n                    printedTable.erEj.push({descripcion:'No se reconoce la expresion '+valor.valor+' como un index',tipo:\"semántico\", linea:temp.fila, columna:temp.columna});\n                    throw '>ERROR:No se reconoce la expresion '+valor.valor+' como un index.\\n';                      \n                }\n                let tempTipo=\"\";\n                for(let e =0;e<tipo.split(\"[]\").length-1;e++){\n                    if(e==0)tempTipo+=tipo.split(\"[]\")[e];\n                    else tempTipo+=\"[]\";\n                }\n                tipo=tempTipo;\n                let suma = nuevoTemporal(), temporal = nuevoTemporal();\n                consola.value+=suma+\"=\"+valor.valor+\"+1;\\n\";\n                consola.value+=temporal+\"=\"+direcciones+\"+\"+suma+\";\\n\";\n                direcciones=temporal; \n                if(temp.next_acc!=\"Epsilon\"){\n                    let temporal2 = nuevoTemporal();\n                    consola.value+=temporal2+\"= heap[(int)\"+temporal+\"];\\n\";\n                    direcciones=temporal2;\n                }\n            }else {\n                //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede asignar esta accion en esta asignación: '+temp+'\\n'; \n                printedTable.erEj.push({descripcion:'No se puede asignar esta accion en esta asignación: '+temp,tipo:\"semántico\", linea:temp.fila, columna:temp.columna}); \n                throw '>ERROR: No se puede asignar esta accion en esta asignación: '+temp+'\\n';\n            }\n            temp=temp.next_acc;\n            \n        }\n        if(assignedValue.tipo.split(\"_\")[0]==\"newArray\"){\n            assignedValue.tipo=tipo;\n        }\n        if(tipo==assignedValue.tipo || tipo.split(\"[]\").length==assignedValue.tipo.split(\"[]\").length && assignedValue.tipo.split(\"[]\")[0]==\"undefined\"){\n            //la segunda condición es para ver si se le asigno un [] vacío\n            if(tipo==\"number\"||tipo==\"boolean\"){\n                //let temporal = nuevoTemporal();\n                //consola.value+=temporal+\"=heap[(int)\"+principalValue.valor+\"];\\n\";\n                consola.value+=pila+\"[(int)\"+direcciones+\"]=\"+assignedValue.valor+\";\\n\";\n            }else{\n                if(principalValue.tipo==assignedValue.tipo){\n                    if(tipo==\"string\"){\n                        if(principalValue.ambito!=\"Global\"){\n                            consola.value+=\"stack[(int)\"+principalValue.direcciones+\"]=\"+assignedValue.valor+\";\\n\";\n                        }else{\n                            consola.value+=principalValue.direcciones+\"=\"+assignedValue.valor+\";\\n\";\n                        }\n                    }else{\n                        principalValue.direcciones=assignedValue.valor;\n                    }\n                }else{\n                    consola.value+=\"heap[(int)\"+direcciones+\"]=\"+assignedValue.valor+\";\\n\";\n                }\n            }\n        }else{\n               // principalValue.valor=assignedValue.valor;}else\n                //consola.value+='>f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: Incompatibilidad de tipos: ' + assignedValue.tipo + ' no se puede convertir en ' + principalValue.tipo+'\\n';  \n                printedTable.erEj.push({descripcion:'Incompatibilidad de tipos: ' + assignedValue.tipo + ' no se puede convertir en ' + principalValue,tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna}); \n                throw '>ERROR: Incompatibilidad de tipos: ' + assignedValue.tipo + ' no se puede convertir en ' + principalValue.tipo+'\\n';                \n        }\n    }\n    function procesarImpresion(expresion, tablaDeSimbolos, ambito){\n        const valores = procesarTexto(expresion, tablaDeSimbolos, ambito);\n        consola.value+=toString(valores);\n        consola.value+=\"printf(\\\"\\\\n\\\");\\n\";\n    }\n    function procesarTexto(expresion, tablaDeSimbolos, ambito){\n        if (expresion.sentencia === SENTENCIAS.LLAMADA) {\n            const valor = procesarLlamada(expresion, tablaDeSimbolos, ambito);\n            if(valor.tipo==\"void\"){\n                //consola.value+='>f:'+expresion.fila+', c:'+expresion.columna+', ambito:'+ambito+'\\nERROR: Función de tipo void como expresión.\\n';  \n                printedTable.erEj.push({descripcion:' Función de tipo void como expresión.',tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: Función de tipo void como expresión.'; \n            }\n            //let temporal = nuevoTemporal();\n            //consola.value+=temporal+\"=\"+valor.valor+\";\\n\";\n            return {valor:[{valor:valor.valor,tipo:valor.tipo}], tipo:valor.tipo};\n        } else if (expresion.tipo === TIPO_OPERACION.NEGATIVO) {\n            const valor = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            \n            if(valor.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=-\"+valor.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"number\"}],tipo:\"number\", direcciones:temporal};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de resta unitaria con el tipo '+valor.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de resta unitaria con el tipo.'; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.SUMA) {\n            //si valIzq es string devuleve string else number\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"+\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal, tipo:\"number\"}],tipo:\"number\"};\n            }else if(valorIzq.tipo==\"number\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"+\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal, tipo:\"number\"}],tipo:\"number\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"number\"){\n                //let temporal = nuevoTemporal();\n                //consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:[valorIzq, valorDer],tipo:\"string\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"+\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal, tipo:\"number\"}],tipo:\"number\"};\n            }else if(valorIzq.tipo==\"number\" && valorDer.tipo==\"string\"){\n                //let temporal = nuevoTemporal();\n                //consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:[valorIzq, valorDer],tipo:\"string\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                //let temporal = nuevoTemporal();\n                //consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:[valorIzq, valorDer],tipo:\"string\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"boolean\"){\n             //   let temporal = nuevoTemporal();\n              //  consola.value+=temporal+\"=h;\\n\";\n              //  consola.value+=\"t1=\"+valorIzq.valor[0].valor+\";\\n\";\n              //  consola.value+=\"t3=\"+valorDer.valor[0].valor+\";\\n\";\n               // consola.value+=\"conStrBool();\\n\";\n                return {valor:[{valor:[valorIzq, valorDer], tipo:\"string\"}],tipo:\"string\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"string\"){\n               // let temporal = nuevoTemporal();\n               // consola.value+=temporal+\"=h;\\n\";\n              //  consola.value+=\"t1=\"+valorDer.valor[0].valor+\";\\n\";\n               // consola.value+=\"t3=\"+valorIzq.valor[0].valor+\";\\n\";\n               // consola.value+=\"conBoolStr();\\n\";\n                return {valor:[{valor:[valorIzq, valorDer], tipo:\"string\"}],tipo:\"string\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de suma con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de suma con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.RESTA) {\n                const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n                const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"-\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"number\"}],tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de resta con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de resta con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MULTIPLICACION) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"*\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"number\"}],tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de multiplicación con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de multiplicación con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.DIVISION) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                if (valorDer.valor[0].valor == 0){\n                    printedTable.erEj.push({descripcion:' división entre 0 no está definida',tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                    throw 'Error: división entre 0 no está definida.';\n                }             \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"/\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"number\"}],tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de división con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de división con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.POTENCIA) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=\"t0=\"+valorIzq.valor[0].valor+\";\\n\";\n                consola.value+=\"t3=\"+valorIzq.valor[0].valor+\";\\n\";\n                consola.value+=\"t1=\"+valorDer.valor[0].valor+\";\\n\";\n                consola.value+=\"potencia();\\n\";\n                consola.value+=temporal+\"=t0;\\n\";\n                return {valor:[{valor:temporal, tipo:\"number\"}],tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de potencia con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de potencia con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MODULO) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=fmod(\"+valorIzq.valor[0].valor+\",\"+valorDer.valor[0].valor+\");\\n\";\n                return {valor:[{valor:temporal,tipo:\"number\"}],tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de módulo con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de módulo con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\">\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de mayor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de mayor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR_IGUAL) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\">=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de mayor o igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de mayor o igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"<\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de menor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de menor que  con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR_IGUAL) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"<=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de menor igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de menor igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.IGUAL_IGUAL) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            \n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=\"t0=\"+valorIzq.valor[0].valor+\";\\nt1=\"+valorDer.valor[0].valor+\";\\n\";\n                consola.value+=\"compareStrs();\\n\";\n                consola.value+=temporal+\"=t2;\\n\"\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\")){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1 && valorDer.tipo.split(\"[]\").length>1){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && valorDer.valor[0].valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if( valorIzq.valor[0].valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\") ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1  && valorDer.valor[0].valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if( valorIzq.valor[0].valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo.split(\"[]\").length>1 ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\"  && valorDer.valor[0].valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if( valorIzq.valor[0].valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo==\"string\" ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if( valorIzq.valor[0].valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */  && valorDer.valor[0].valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"==\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.DISTINTO) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            \n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\")){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1 && valorDer.tipo.split(\"[]\").length>1){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && valorDer.valor[0].valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if( valorIzq.valor[0].valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\") ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1  && valorDer.valor[0].valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if( valorIzq.valor[0].valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo.split(\"[]\").length>1 ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\"  && valorDer.valor[0].valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if( valorIzq.valor[0].valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo==\"string\" ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else if( valorIzq.valor[0].valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */  && valorDer.valor[0].valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"!=\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal,tipo:\"boolean\"}],tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.AND) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"&&\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de AND con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de AND con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.OR) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"||\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de OR con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de OR con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.NOT) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=!\"+valorIzq.valor[0].valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de NOT con el tipos:'+valorIzq.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de NOT con el tipos:'+valorIzq.tipo; \n            }\n        }else if(expresion.tipo ==  TIPO_OPERACION.CONCATENACION){\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            return {valor:[valorIzq, valorDer], tipo:\"concatenacion\"};\n        } else if (expresion.tipo === TIPO_VALOR.NUMERO) {\n            return {valor:[{valor:expresion.valor, tipo:\"number\"}], tipo:\"number\"};\n        } else if (expresion.tipo === TIPO_VALOR.DECIMAL) {\n            return {valor:[{valor:expresion.valor, tipo:\"number\"}], tipo:\"number\"};\n        }else if (expresion.tipo === TIPO_VALOR.TRUE) {\n            return {valor:[{valor:\"1\", tipo:\"boolean\"}], tipo:\"boolean\"};\n        } else if (expresion.tipo === TIPO_VALOR.FALSE) {\n            return {valor:[{valor:\"0\", tipo:\"boolean\"}], tipo:\"boolean\"};\n        } else if (expresion.tipo === TIPO_VALOR.NULL) {\n            return { valor: [{ valor: \"0\", tipo: undefined}], tipo: undefined};\n        } else if (expresion.tipo === TIPO_VALOR.IDENTIFICADOR) {\n            const valIzq=procesarAccID(expresion.valor, tablaDeSimbolos, ambito);\n            return  {valor:[valIzq], tipo:valIzq.tipo};\n        }else if (expresion.tipo === TIPO_VALOR.CADENA) {\n            let initial = nuevoTemporal();\n            let direcciones = pilas.heap;\n            consola.value+=initial+\"=h;\\n\";\n            let cadenaUpdated =  sustituirEscapes(expresion);\n            for(let i =0;i<cadenaUpdated.length;i++){\n                consola.value+=\"heap[(int)h]=\"+ cadenaUpdated.charCodeAt(i)+\";\\nh=h+1;\\n\";\n                heapPush();\n            }\n            consola.value+=\"heap[(int)h]=-1;\\nh=h+1;\\n\";\n            heapPush();\n            let principalValue = {valor:initial, tipo: \"string\", direcciones:initial};\n            strMethods(principalValue, expresion.next_acc, tablaDeSimbolos, ambito);\n            return {valor:[{valor:principalValue.valor, tipo: principalValue.tipo, direcciones:principalValue.valor}], tipo: principalValue.tipo, direcciones:principalValue.valor};\n        } else if (expresion.tipo === TIPO_VALOR.CADENA_CHARS) {\n            let initial = nuevoTemporal();\n            let direcciones = pilas.heap;\n            consola.value+=initial+\"=h;\\n\";\n            let cadenaUpdated =  sustituirEscapes(expresion);\n            for(let i =0;i<cadenaUpdated.length;i++){\n                consola.value+=\"heap[(int)h]=\"+ cadenaUpdated.charCodeAt(i)+\";\\nh=h+1;\\n\";\n                heapPush();\n            }\n            consola.value+=\"heap[(int)h]=-1;\\nh=h+1;\\n\";\n            heapPush();\n            let principalValue = {valor:initial, tipo: \"string\", direcciones:initial};\n            strMethods(principalValue, expresion.next_acc, tablaDeSimbolos, ambito);\n            return {valor:[{valor:principalValue.valor, tipo: principalValue.tipo, direcciones:principalValue.valor}], tipo: principalValue.tipo, direcciones:principalValue.valor};\n        } else if(expresion.tipo===TIPO_DATO.OPERADOR_TERNARIO){\n            let logica =  procesarTexto(expresion.logica, tablaDeSimbolos, ambito);\n            if(logica.tipo==\"boolean\"){\n                let temporal = nuevoTemporal(), verdadero=nuevaEtiqueta(), falso=nuevaEtiqueta(), final=nuevaEtiqueta();\n                consola.value+=\"if(\"+logica.valor[0].valor+\") goto \"+verdadero+\";\\n\";\n                consola.value+=\"goto \"+falso+\";\\n\";\n                consola.value+=verdadero+\":\\n\";\n                let valorVerdadero=procesarTexto(expresion.result1, tablaDeSimbolos, ambito);\n                consola.value+=temporal+\"=\"+valorVerdadero.valor[0].valor+\";\\n\";\n                consola.value+=\"goto \"+final+\";\\n\";\n                consola.value+=falso+\":\\n\";\n                let valorFalso =procesarTexto(expresion.result2, tablaDeSimbolos, ambito);\n                consola.value+=temporal+\"=\"+valorFalso.valor[0].valor+\";\\n\";\n                consola.value+=final+\":\\n\";\n                if(valorVerdadero.tipo.toLowerCase() != valorFalso.tipo.toLowerCase()){\n                    printedTable.erEj.push({descripcion:'Ambos resultados del ternario deben ser del mismo tipo:'+valorVerdadero.tipo+','+valorFalso.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                    throw '>ERROR:Ambos resultados del ternario deben ser del mismo tipo:'+valorVerdadero.tipo+','+valorFalso.tipo; \n                }\n                return {valor:[{valor:temporal, tipo:valorVerdadero.tipo}], tipo:valorVerdadero.tipo};\n            }\n        } else {\n            printedTable.erEj.push({descripcion:'expresión no válida: ' + expresion.valor[0].valor,ambito:ambito,tipo:\"semántico\", linea:\"temp\", columna:\"temp\"});\n            throw 'ERROR: expresión no válida: ' + expresion.valor[0].valor;\n        }\n    }\n    function toString(cadena, tablaDeSimbolos, ambito){\n        let text= \"\";\n        if(Array.isArray(cadena.valor)){\n            text+=toString(cadena.valor, tablaDeSimbolos, ambito);\n        }else{\n                for(let elem of cadena){\n                if(Array.isArray(elem.valor)){\n                    text+=toString(elem.valor, tablaDeSimbolos, ambito);\n                }else if(elem.tipo==\"number\"){\n                    if(typeof elem.valor === 'number'){\n                        if(elem.valor%1===0){\n                            text+=\"printf(\\\"%d\\\", (int)\"+elem.valor+\");\\n\"; \n                        }else{\n                           text+=\"printf(\\\"%f\\\", (double)\"+elem.valor+\");\\n\"; \n                        }\n                    }else {\n                        text+=\"printf(\\\"%f\\\", \"+elem.valor+\");\\n\";\n                    }              \n                }else if(elem.tipo==\"boolean\"){\n                    text+=\"t3=\"+elem.valor+\";\\nboolToStr();\\n\";\n                }else if(elem.tipo==\"string\"){\n                    text+=\"t0=\"+elem.valor+\";\\nimprimir();\\n\";\n                }\n            } \n        }   \n        return text;\n    }\n    function sustituirEscapes(cadena){\n        cadena.valor=String(cadena.valor).replace(/\\\\n/g,'\\n')\n        cadena.valor=String(cadena.valor).replace(/\\\\t/g,'\\t')\n        cadena.valor=String(cadena.valor).replace(/\\\\r/g,'\\r')\n        cadena.valor=String(cadena.valor).replace(/\\\\\"/g,'\\\"')\n        cadena.valor=String(cadena.valor).replace(/\\\\\\\\\"/g,'\\\\')\n        return cadena.valor;\n    }\n    function crearSimbolo(var_type, id, data_type, valor, ambito, tablaDeSimbolos, fila, columna){\n        consola.value+=\"//comienza declaracion de variable \"+id+\"\\n\";\n        //Verificar que exista el tipo de dato de la variable\n        data_type=procesarDataType(data_type);  //establece el tipo de la variable que es obligatorio declarar\n        if(!tablaDeSimbolos.existe(data_type.split(\"[]\")[0], undefined, \"type\") && data_type.split(\"[]\")[0]!=\"number\" && data_type.split(\"[]\")[0]!=\"string\" && data_type.split(\"[]\")[0]!=\"boolean\"){\n            //consola.value+='>f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: No existe el tipo de dato:'+data_type.split(\"[]\")[0]+'.\\n';  \n            printedTable.erEj.push({descripcion:'No existe el tipo de dato:'+data_type.split(\"[]\")[0]+'.',tipo:\"semántico\", linea:fila, columna:columna,ambito:ambito});\n            throw '>ERROR: No existe el tipo de dato:'+data_type.split(\"[]\")[0]+'.'; \n        }\n        //Verificar que no exista en el mismo ámbito\n        if(tablaDeSimbolos.existe(id, ambito, \"variable\")){\n            //consola.value+='>f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: El identificador:\\\"'+id+'\\\" ya ha sido declarado en este ámbito.\\n';  \n            printedTable.erEj.push({descripcion:'El identificador:\\\"'+id+'\\\" ya ha sido declarado en este ámbito',tipo:\"semántico\", linea:fila, columna:columna,ambito:ambito});\n            throw '>ERROR: El identificador:\\\"'+id+'\\\" ya ha sido declarado en este ámbito'; \n        }\n        //Ver que el tipo de símbolo sea el correcto con el del valor o undefined\n        if(var_type==TIPO_VARIABLE.CONST && valor == \"undefined\"){\n            //consola.value+='>f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: La delcaracion de la constante '+id+' debe ser inicializada.\\n';  \n            printedTable.erEj.push({descripcion:'La delcaracion de  la constante '+id+' debe ser inicializada.\\n',tipo:\"semántico\", linea:fila, columna:columna,ambito:ambito});\n            throw '>ERROR:La delcaracion de  la constante '+id+' debe ser inicializada.\\n';             \n        }\n        //let heapInit = pilas.heap;\n        if(valor!=\"undefined\"){\n            valor=procesarExpresionNumerica(valor, tablaDeSimbolos, ambito, data_type);\n            if(valor.tipo.split(\"_\")[0]==\"newArray\" && data_type.split(\"[]\").length>1){\n                valor.tipo=data_type;\n            }\n            if(valor.tipo==\"number\"||valor.tipo==\"boolean\"){\n                //valor.direcciones=pilas.heap;\n                let pila = (ambito==\"Global\")?\"heap\":\"stack\", puntero=(ambito==\"Global\")?\"h\":\"p\";\n            //    if(valor.reference==true){\n                    //let temp = nuevoTemporal();\n                    /*valor.direcciones=nuevoTemporal();\n                    consola.value+=valor.direcciones+\"=h;\\nh=h+1;\\n\";\n                    consola.value+=temp+\"=heap[(int)\"+valor.valor+\"];\\nheap[(int)\"+valor.direcciones+\"]=\"+temp+\";\\n\";*/\n                    valor.direcciones=nuevoTemporal();\n                    consola.value+=valor.direcciones+\"=\"+puntero+\";\\n\";\n                    consola.value+=puntero+\"=\"+puntero+\"+1;\\n\";\n                    //consola.value+=temp+\"=\"+valor.valor+\";\\n\";\n                    //consola.value+=valor.direcciones+\"=h;\\n\";\n                    consola.value+=pila+\"[(int)\"+valor.direcciones+\"]=\"+valor.valor+\";\\n\";\n              /*  }else{\n                    valor.direcciones=nuevoTemporal();\n                    consola.value+=valor.direcciones+\"=h;\\n\";\n                    consola.value+=\"heap[(int)\"+valor.direcciones+\"]=\"+valor.valor+\";\\nh=h+1;\\n\";\n                }\n                heapPush();*/\n            }\n            if(valor.reference && valor.tipo!=\"number\" && valor.tipo !=\"boolean\"){\n                //heapInit=valor.valor;\n                valor.direcciones=valor.valor;\n                if(valor.tipo==\"string\"){\n                    let temporal = nuevoTemporal();\n                    consola.value+=temporal+\"=\"+valor.valor+\";\\n\";\n                    valor.valor=temporal;\n                }\n            }\n        }else{\n            let pila = (ambito==\"Global\")?\"heap\":\"stack\", puntero=(ambito==\"Global\")?\"h\":\"p\";\n            if(data_type==\"number\"){\n                let temporal = nuevoTemporal();\n                valor={tipo:\"number\", direcciones:temporal, valor:temporal};\n                consola.value+=valor.direcciones+\"=\"+puntero+\";\\n\"\n                consola.value+=pila+\"[(int)\"+valor.direcciones+\"]=0;\\n\"+puntero+\"=\"+puntero+\"+1;\";\n            }else if(data_type==\"boolean\"){\n                let temporal = nuevoTemporal();\n                valor={tipo:\"boolean\", direcciones:temporal, valor:temporal};\n                consola.value+=valor.direcciones+\"=\"+puntero+\";\\n\"\n                consola.value+=pila+\"[(int)\"+valor.direcciones+\"]=0;\\n\"+puntero+\"=\"+puntero+\"+1;\";\n            }else{\n                let temporal = nuevoTemporal();\n                valor={tipo:data_type, direcciones:temporal, valor:temporal};\n                consola.value+=valor.direcciones+\"=h;\\n\"\n                consola.value+=\"heap[(int)\"+valor.direcciones+\"]=0;\\nh=h+1;\";\n            }\n        }\n        if(data_type!=valor.tipo){  //se descarta la inferencia de tipos\n            //consola.value+='f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + data_type+\".\\n\";\n            printedTable.erEj.push({descripcion:'Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + data_type,ambito:ambito,tipo:\"semántico\", linea:fila, columna:columna});\n            throw 'ERROR: Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + data_type;\n        }\n        //Crear simbolo\n        if(valor.tipo.split(\"[]\").length>1 || tablaDeSimbolos.existe(valor.tipo.split(\"[]\")[0], undefined, \"type\") || ambito==\"Global\" || valor.tipo==\"string\"){\n            //se va  al heap            \n            if(valor.tipo==\"string\"){\n                if(ambito!=\"Global\"){//para guardar la referencia en el stack\n                    let temporal = nuevoTemporal();\n                    consola.value+=temporal+\"=p;\\np=p+1;\\n\";\n                    consola.value+=\"stack[(int)\"+temporal+\"]=\"+valor.valor+\";\\n\";\n                    valor.valor=temporal;\n                }\n                tablaDeSimbolos.agregar(var_type, id, data_type, ambito, fila, columna, valor.valor);\n            }else if(valor.tipo.split(\"[]\").length>1){\n                if(ambito!=\"Global\"){\n                   let temporal = nuevoTemporal();\n                    consola.value+=temporal+\"=p;\\np=p+1;\\n\";\n                    consola.value+=\"stack[(int)\"+temporal+\"]=\"+valor.valor+\";\\n\";\n                    valor.valor=temporal; \n                }                \n                tablaDeSimbolos.agregar(var_type, id, data_type, ambito, fila, columna, valor.valor);\n            }else{\n                //consola.value+=\"heap[(int)h]=\"+ valor.valor+\";\\nh=h+1;\\n\";\n                tablaDeSimbolos.agregar(var_type, id, data_type, ambito, fila, columna, valor.direcciones);\n            }\n        }else{\n            //se va al stack\n            //consola.value+=\"stack[(int)p]=\"+ valor.valor+\";\\np=p+1;\\n\";\n            tablaDeSimbolos.agregar(var_type, id, data_type, ambito, fila, columna, valor.direcciones);\n        }\n        consola.value+=\"//termina declaracion de variable \"+id+\"\\n\";\n    }\n    function procesarExpresionNumerica(expresion, tablaDeSimbolos, ambito, userType) {\n        if (expresion.sentencia === SENTENCIAS.LLAMADA) {\n            const valor = procesarLlamada(expresion, tablaDeSimbolos, ambito);\n            if(valor.tipo==\"void\"){\n                //consola.value+='>f:'+expresion.fila+', c:'+expresion.columna+', ambito:'+ambito+'\\nERROR: Función de tipo void como expresión.\\n';  \n                printedTable.erEj.push({descripcion:' Función de tipo void como expresión.',tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: Función de tipo void como expresión.'; \n            }\n            //let temporal = nuevoTemporal();\n            //consola.value+=temporal+\"=\"+valor.valor+\";\\n\";\n            return {valor:valor.valor,tipo:valor.tipo};\n        } else if (expresion.tipo === TIPO_OPERACION.NEGATIVO) {\n            const valor = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            if(valor.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=-\"+valor.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};  \n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de resta unitaria con el tipo '+valor.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de resta unitaria con el tipo.'; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.SUMA) {\n            //si valIzq es string devuleve string else number\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else if(valorIzq.tipo==\"number\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"conStrNum();\\n\";\n                return {valor:temporal,tipo:\"string\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else if(valorIzq.tipo==\"number\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"conNumStr();\\n\";\n                return {valor:temporal,tipo:\"string\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"concatenar();\\n\";\n                return {valor:temporal,tipo:\"string\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"conStrBool();\\n\";\n                return {valor:temporal,tipo:\"string\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"conBoolStr();\\n\";\n                return {valor:temporal,tipo:\"string\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de suma con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de suma con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.RESTA) {\n                const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n                const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"-\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de resta con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de resta con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MULTIPLICACION) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"*\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de multiplicación con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de multiplicación con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.DIVISION) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                if (valorDer.valor == 0){\n                    printedTable.erEj.push({descripcion:' división entre 0 no está definida.',tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                    throw 'Error: división entre 0 no está definida.';\n                }                \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"/\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de división con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de división con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.POTENCIA) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){                \n                let temporal = nuevoTemporal();\n                consola.value+=\"t0=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t1=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"potencia();\\n\";\n                consola.value+=temporal+\"=t0;\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de potencia con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de potencia con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MODULO) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=fmod(\"+valorIzq.valor+\",\"+valorDer.valor+\");\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de módulo con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de módulo con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\">\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de mayor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de mayor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\">=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de mayor o igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de mayor o igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"<\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de menor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de menor que  con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"<=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de menor igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de menor igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.IGUAL_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            \n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=\"t0=\"+valorIzq.valor+\";\\nt1=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"compareStrs();\\n\";\n                consola.value+=temporal+\"=t2;\\n\"\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\")){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1 && valorDer.tipo.split(\"[]\").length>1){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\") ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo.split(\"[]\").length>1 ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\"  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo==\"string\" ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.DISTINTO) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            \n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\")){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1 && valorDer.tipo.split(\"[]\").length>1){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\") ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo.split(\"[]\").length>1 ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\"  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo==\"string\" ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.AND) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"&&\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de AND con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de AND con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.OR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"||\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de OR con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de OR con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.NOT) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=!\"+valorIzq.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de NOT con el tipos:'+valorIzq.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de NOT con el tipos:'+valorIzq.tipo; \n            }\n        } else if (expresion.tipo === TIPO_VALOR.NUMERO) {\n            return {valor:expresion.valor, tipo:\"number\"};\n        } else if (expresion.tipo === TIPO_VALOR.DECIMAL) {\n            return {valor:expresion.valor, tipo:\"number\"};\n        }else if (expresion.tipo === TIPO_VALOR.TRUE) {\n            return {valor:\"1\", tipo:\"boolean\"};\n        } else if (expresion.tipo === TIPO_VALOR.FALSE) {\n            return {valor:\"0\", tipo:\"boolean\"};\n        } else if (expresion.tipo === TIPO_VALOR.IDENTIFICADOR) {\n            const valIzq=procesarAccID(expresion.valor, tablaDeSimbolos, ambito);\n            if(valIzq.tipo==\"number\"||valIzq.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valIzq.valor+\";\\n\";\n                valIzq.valor=temporal;\n            }\n            return  valIzq;\n        } else if (expresion.tipo === TIPO_VALOR.NULL) {\n            return { valor: \"0\", tipo: userType , tamanio:1};\n        } else if (expresion.data_type === TIPO_DATO.ARRAY) {\n            return procesarArray(expresion, tablaDeSimbolos, ambito, userType);\n        } else if (expresion.tipo.split(\"[]\").length>1){\n            return procesarArray(expresion, tablaDeSimbolos, ambito, userType);\n        } else if (expresion.tipo === TIPO_DATO.OBJETO) {\n            return procesarObjeto(expresion, tablaDeSimbolos, ambito, userType);\n        } else if (expresion.tipo === TIPO_VALOR.CADENA) {\n            let initial = nuevoTemporal();\n            let direcciones = pilas.heap;\n            consola.value+=initial+\"=h;\\n\";\n            let cadenaUpdated =  sustituirEscapes(expresion);\n            for(let i =0;i<cadenaUpdated.length;i++){\n                consola.value+=\"heap[(int)h]=\"+ cadenaUpdated.charCodeAt(i)+\";\\nh=h+1;\\n\";\n                heapPush();\n            }\n            consola.value+=\"heap[(int)h]=-1;\\nh=h+1;\\n\";\n            let principalValue = {valor:initial, tipo: \"string\", direcciones:initial};\n            strMethods(principalValue, expresion.next_acc, tablaDeSimbolos, ambito);\n            return {valor:principalValue.valor, tipo: principalValue.tipo, direcciones:principalValue.valor};\n        } else if (expresion.tipo === TIPO_VALOR.CADENA_CHARS) {\n            let initial = nuevoTemporal();\n            let direcciones = pilas.heap;\n            consola.value+=initial+\"=h;\\n\";\n            let cadenaUpdated =  sustituirEscapes(expresion);\n            for(let i =0;i<cadenaUpdated.length;i++){\n                consola.value+=\"heap[(int)h]=\"+ cadenaUpdated.charCodeAt(i)+\";\\nh=h+1;\\n\";\n                heapPush();\n            }\n            consola.value+=\"heap[(int)h]=-1;\\nh=h+1;\\n\";\n            let principalValue = {valor:initial, tipo: \"string\", direcciones:initial};\n            strMethods(principalValue, expresion.next_acc, tablaDeSimbolos, ambito);\n            return {valor:principalValue.valor, tipo: principalValue.tipo, direcciones:principalValue.valor};\n        } else if(expresion.tipo===TIPO_DATO.OPERADOR_TERNARIO){\n            let logica =  procesarExpresionNumerica(expresion.logica, tablaDeSimbolos, ambito);\n            if(logica.tipo==\"boolean\"){\n                let temporal = nuevoTemporal(), verdadero=nuevaEtiqueta(), falso=nuevaEtiqueta(), final=nuevaEtiqueta();\n                consola.value+=\"if(\"+logica.valor+\") goto \"+verdadero+\";\\n\";\n                consola.value+=\"goto \"+falso+\";\\n\";\n                consola.value+=verdadero+\":\\n\";\n                let valorVerdadero=procesarExpresionNumerica(expresion.result1, tablaDeSimbolos, ambito);\n                consola.value+=temporal+\"=\"+valorVerdadero.valor+\";\\n\";\n                consola.value+=\"goto \"+final+\";\\n\";\n                consola.value+=falso+\":\\n\";\n                let valorFalso =procesarExpresionNumerica(expresion.result2, tablaDeSimbolos, ambito);\n                consola.value+=temporal+\"=\"+valorFalso.valor+\";\\n\";\n                consola.value+=final+\":\\n\";\n                if(valorVerdadero.tipo.toLowerCase() != valorFalso.tipo.toLowerCase()){\n                    printedTable.erEj.push({descripcion:'Ambos resultados del ternario deben ser del mismo tipo:'+valorVerdadero.tipo+','+valorFalso.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                    throw '>ERROR:Ambos resultados del ternario deben ser del mismo tipo:'+valorVerdadero.tipo+','+valorFalso.tipo; \n                }\n                return {valor:temporal, tipo:valorVerdadero.tipo};\n            }\n        } else if (expresion.tipo===TIPO_DATO.NEW_ARRAY){\n            let valor = procesarNewArray(expresion.expresion, tablaDeSimbolos, ambito, userType);\n            return valor;\n        } else {\n            printedTable.erEj.push({descripcion:'expresión no válida: ' + expresion.valor[0].valor,ambito:ambito,tipo:\"semántico\", linea:\"temp\", columna:\"temp\"});\n            throw 'ERROR: expresión no válida: ' + expresion.valor;\n        }\n    }\n    function procesarArray(arreglo, tablaDeSimbolos, ambito, userType){\n        consola.value+=\"//comienza arreglo \\n\";\n        let temporal = [], tipo=\"\";\n        let temp = arreglo.dimension;\n        let tamanio=0, direcciones=[],temporales=[],arrayHead=contadores.temporales+1;\n        temporales.push(nuevoTemporal());\n        consola.value+=temporales[tamanio]+\"=h;\\n\";\n        consola.value+=\"h=h+1;\\n\"\n        tamanio++;\n        while(temp!=\"Epsilon\"){\n            temporales.push(nuevoTemporal());\n            consola.value+=temporales[tamanio]+\"=h;\\n\";\n            consola.value+=\"h=h+1;\\n\";\n            tamanio++;\n            temp=temp.next_data;\n        }\n        consola.value+=\"heap[(int)\"+temporales[0]+\"]=\"+(tamanio-1)+\";\\n\";\n        tamanio=1;\n        temp = arreglo.dimension;\n        while(temp!=\"Epsilon\"){\n            let valor = procesarExpresionNumerica(temp.dato, tablaDeSimbolos, ambito, userType);\n            consola.value+=\"heap[(int)\"+temporales[tamanio]+\"]=\"+valor.valor+\";\\n\";\n            temporal.push(valor);\n            tamanio++;\n            temp=temp.next_data;\n        }\n        checkForMultyType(JSON.parse(JSON.stringify(temporal)), tablaDeSimbolos, ambito);\n        return {tipo:getType(temporal)+calcularDimensiones(temporal), valor:\"t\"+arrayHead, direcciones:temporales[0]};\n    }\n    function checkForMultyType(arreglo, tablaDeSimbolos, ambito){\n        arreglo = JSON.parse(JSON.stringify(arreglo));\n        if(arreglo.length>1){\n            let temp = arreglo.pop();\n            for(let temporal of arreglo){\n                if(temp.tipo!=temporal.tipo){\n                    if(temp.tipo.split(\"[]\")[0]==\"undefined\" && temporal.tipo.split(\"[]\")[0]==\"undefined\"){\n                        //no es error solo están vacíos\n                        arreglo.push(temp);\n                    }else if(temp.tipo.split(\"[]\")[0]==\"undefined\"){\n                        temp.tipo=temporal.tipo;\n                        arreglo.push(temp);\n                    }else if(temporal.tipo.split(\"[]\")[0]==\"undefined\"){\n                        temporal.tipo=temp.tipo;\n                        arreglo.push(temp);\n                    }else{         \n                        arreglo.push(temp);               \n                        consola.value+='>ERROR: No se permiten los arreglos multitype->'+toString({valor:arreglo, tipo:TIPO_DATO.ARRAY}, tablaDeSimbolos, ambito);  \n                        throw '>ERROR: No se permiten los arreglos multitype'+toString({valor:arreglo, tipo:TIPO_DATO.ARRAY}, tablaDeSimbolos, ambito);\n                    }\n                }\n            }\n        }\n    }\n    function getType(valor){\n        while(Array.isArray(valor)){\n            valor=valor[0];\n        }\n        if(valor==undefined) return \"undefined\";\n        return valor.tipo;\n    }\n    function calcularDimensiones(valor){\n        let contador=\"\";\n        while(Array.isArray(valor)){\n            contador+=\"[]\";\n            valor=valor[0];\n        }\n        return contador;\n    }\n    function procesarObjeto(instruccion, tablaDeSimbolos, ambito, userType){\n        userType=userType.split(\"[]\")[0];\n        if(!tablaDeSimbolos.existe(userType, undefined, \"type\")){\n            printedTable.erEj.push({descripcion:'No existe el type:'+userType+'.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n            throw '>ERROR: No existe el type:'+userType+'.\\n';                       \n        }  \n        let attb =[], tamanio=0;\n        let temp = instruccion.atributos;\n        while(temp!=\"Epsilon\"){\n            attb.push(nuevoTemporal());\n            consola.value+=attb[tamanio]+\"=h;\\n\";\n            consola.value+=\"h=h+1;\\n\";\n            tamanio++;\n            temp=temp.next;\n        }\n        let tipo = tablaDeSimbolos.obtenerType(userType);\n        if(tipo.atributos.length!=attb.length){\n            printedTable.erEj.push({descripcion:'Se deben inicializar todos los atributos del type.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n            throw '>ERROR: Se deben inicializar todos los atributos del type.\\n'; \n        }\n        temp = instruccion.atributos;\n        let count =0;\n        let direcciones = [];\n        while(temp!=\"Epsilon\"){\n            //consola.value+=nuevoTemporal()+\"=\"+\"h;\\nh=h+1;\\n\";\n            /*let temporalHeap = pilas.heap, temporalInit=contadores.temporales+1, dir;\n            let valor = procesarExpresionNumerica(temp.valor, tablaDeSimbolos, ambito, userType);\n            if(valor.tipo==\"number\"||valor.tipo==\"boolean\"){\n                dir = nuevoTemporal();\n                consola.value+=dir+\"=h;\\n\";\n                consola.value+=\"heap[(int)\"+dir+\"]=\"+valor.valor+\";\\nh=h+1;\\n\";\n                heapPush();\n                valor.direcciones=dir;\n            }*/\n\n            let valor = procesarExpresionNumerica(temp.valor, tablaDeSimbolos, ambito, userType);\n            consola.value+=\"heap[(int)\"+attb[count]+\"]=\"+valor.valor+\";\\n\";\n            //temporal.push(valor);\n            //heapPush();\n            if(tablaDeSimbolos.existe(tipo.atributos[count].tipo.split(\"[]\")[0], undefined, \"type\")&&valor.valor==\"0\"){\n                if(valor.tipo!=tipo.atributos[count].tipo){\n                    printedTable.erEj.push({descripcion:'No coincide el tipo del atributo '+tipo.atributos[count].id+'.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                    throw '>ERROR: No coincide el tipo del atributo '+tipo.atributos[count].id+'.\\n'; \n                }\n            }\n            //direcciones[count]={id:attb[count].id,direcciones:valor.direcciones};\n            //consola.value+=\"heap[(int)t\"+temporalInit+\"]=\"+valor.valor+\";\\n\";\n            temp=temp.next;\n            //temporalInit++;\n            count++;\n            /**/\n        }      \n        consola.value+=\"//termina declaracion de objeto de tipo \"+userType+\" \\n\";\n        return { tipo:userType, direcciones:attb[0], valor:attb[0]};\n    }\n    function ExistingAttribute(typeID, attributeID, tablaDeSimbolos){\n        let type = tablaDeSimbolos.obtenerType(typeID);\n        let contador = 0;\n        for(let attribute of type.atributos){\n            if(attribute.id==attributeID){\n                return {valor:attribute, posicion:contador};\n            }\n            contador++;\n        }\n        return false;\n    }\n    function procesarAccID(instruccion, tablaDeSimbolos, ambito){\n        let principalValue = tablaDeSimbolos.obtenerSimbolo(instruccion.id, SplitAmbitos(ambito), instruccion.fila, instruccion.columna);\n        //determinar si se busca en el stack o en el heap\n        let pila = \"\";\n        if(/*principalValue.tipo.split(\"[]\").length>1 || tablaDeSimbolos.existe(principalValue.tipo.split(\"[]\")[0], undefined, \"type\")|| principalValue.tipo==\"string\" ||*/ ambito==\"Global\" ||principalValue.ambito==\"Global\"){\n            pila=\"heap\";\n        }else{\n            pila=\"stack\";\n        }        \n        let temp = instruccion.acc;\n        //se lo cambio a esta parte porque si es un number o boolean no tiene por qué tener acceso a una posición o atributo o método\n        if(principalValue.tipo ==\"number\" || principalValue.tipo==\"boolean\"){\n            let temporal = nuevoTemporal();\n            consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n            principalValue.valor=temporal;\n        }else if(pila==\"stack\"){\n            let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n            consola.value+=temporal+\"=stack[(int)\"+principalValue.valor+\"];\\n\";//dirección en el heap\n            //consola.value+=temporal2+\"=heap[(int)\"+temporal+\"];\\n\";\n            principalValue.valor=temporal;\n        }\n        while(temp!=\"Epsilon\"){\n            if(temp.acc_type==TIPO_ACCESO.ATRIBUTO){//B\n                //comprobar que exista la propiedad\n                let value = ExistingAttribute(principalValue.tipo, temp.atributo, tablaDeSimbolos);\n                //comprobar que el valor sea del mismo tipo del atributo o null\n                if(value == false){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No existe el atributo '+temp.atributo+'\\n';  \n                    printedTable.erEj.push({descripcion:'No existe el atributo '+temp.atributo,tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No existe el atributo '+temp.atributo+'\\n';\n                }\n                //para cuando sean atributos nulos\n                if(principalValue.valor==null && tablaDeSimbolos.existe(principalValue.tipo, undefined, \"type\")){\n                    break;\n                }\n              //  consola.value+=finalDirection+\"=\"+finalDirection+\"+\"+value.posicion+\";\\n\";\n             //   if(value.valor.tipo==\"number\"||value.valor.tipo==\"boolean\"){\n                    let temporal1=nuevoTemporal(),temporal2=nuevoTemporal(); \n                    consola.value+=temporal1+\"=\"+principalValue.valor+\"+\"+(value.posicion)+\";\\n\";\n                    consola.value+=temporal2+\"= heap[(int)\"+temporal1+\"];\\n\";\n                    principalValue.valor=temporal2;\n                    principalValue.tipo=value.valor.tipo;\n                    //no sé por qué había separado los tipos tengo que ver \n              /*  }else{\n                    let temporal1=nuevoTemporal();\n                    consola.value+=temporal1+\"=\"+principalValue.valor+\"+\"+value.posicion+\";\\n\";\n                    principalValue.valor=temporal1;\n                    principalValue.tipo=value.valor.tipo;\n                }*/\n            }else if(temp.acc_type==TIPO_ACCESO.POSICION){//B\n                //comprobar que sea un array\n                if(principalValue.tipo.split(\"[]\")==1){\n                    printedTable.erEj.push({descripcion:'Intento de acceso a posición de array inexistente',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: Intento de acceso a posición de array inexistente\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.index, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"number\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se reconoce la expresion '+valor.valor+' como un index.\\n';  \n                    printedTable.erEj.push({descripcion:'No se reconoce la expresion '+valor.valor+' como un index.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR:No se reconoce la expresion '+valor.valor+' como un index.\\n';                      \n                }\n                //no sabemos el valor de la posición del array \n                let tipo =\"\";\n                for(let e =0;e<principalValue.tipo.split(\"[]\").length-1;e++){\n                    if(e==0)tipo+=principalValue.tipo.split(\"[]\")[e];\n                    else tipo+=\"[]\";\n                }\n                principalValue.tipo=tipo;\n              //  if(principalValue.tipo==\"number\" || principalValue.tipo==\"boolean\" || principalValue.tipo.split(\"[]\").length>1){\n                    let temporal1=nuevoTemporal(),temporal2=nuevoTemporal(),temporal3=nuevoTemporal();\n                    consola.value+=temporal1+\"=\"+valor.valor+\"+1;\\n\";\n                    consola.value+=temporal2+\"=\"+principalValue.valor+\"+\"+temporal1+\";\\n\";\n                    consola.value+=temporal3+\"= heap[(int)\"+temporal2+\"];\\n\";\n                    principalValue.valor=temporal3;\n             /*   }else{\n                    let suma = nuevoTemporal();\n                    consola.vlaue+=suma+\"=\"+valor.valor+\"+1;\\n\";\n                    principalValue.valor=principalValue.valor+\"[\"+suma+\"]\";\n                }*/\n            }else if(temp.sentencia==SENTENCIAS.LENGTH){//R\n                if(principalValue.tipo.split(\"[]\").length>1 || principalValue.tipo ==\"string\"){\n                    if(principalValue.tipo ==\"string\"){\n                        consola.value+=\"t4=\"+principalValue.valor+\";\\n\";\n                        let temporal = nuevoTemporal(), posicion = nuevoTemporal();\n                        consola.value+=\"strLength();\\n\"\n                        consola.value+=temporal+\"= t4-\"+principalValue.valor+\";\\n\";\n                        //consola.value+=posicion+\"=h;\\n\"+pila+\"[(int)\"+posicion+\"]=\"+temporal+\";\\n\";\n                        principalValue.valor= temporal;\n                        principalValue.tipo=\"number\";\n                    }else{\n                        let temporal = nuevoTemporal();\n                        consola.value+=\"//en la posición 0 está el size\\n\";\n                        consola.value+=temporal+\"=heap[(int)\"+principalValue.valor+\"];\\n\";\n                        principalValue.valor=temporal;\n                        principalValue.tipo=\"number\";\n                    }            \n                }else{\n                    // if(principalValue.tipo!=TIPO_DATO.ARRAY){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: Intento de Length a un array inexistente.\\n';  \n                    printedTable.erEj.push({descripcion:'Intento de Length a un array inexistente.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: Intento de Length a un array inexistente.\\n';     \n                }                \n                //principalValue={valor:principalValue.valor.length, tipo:\"number\"};\n                break;\n            }else if(temp.sentencia==SENTENCIAS.CHAR_AT){\n                if(principalValue.tipo!=\"string\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede obtener un CharAt en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede obtener un CharAt en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede obtener un CharAt en '+principalValue.tipo+'.\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.valor, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"number\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: '+valor.tipo+' no se puede usar como un índice en CharAt.\\n';  \n                    printedTable.erEj.push({descripcion:''+valor.tipo+' no se puede usar como un índice en CharAt',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: '+valor.tipo+' no se puede usar como un índice en CharAt.\\n';                    \n                }\n                let temporal1= nuevoTemporal(),temporal2 = nuevoTemporal(), temporal3=nuevoTemporal();\n                consola.value+=temporal1+\"=\"+principalValue.valor+\"+\"+valor.valor+\";\\n\";\n                consola.value+=temporal3+\"=heap[(int)\"+temporal1+\"];\\n\";\n                consola.value+=temporal2+\"=h;\\nheap[(int)\"+temporal2+\"]=\"+temporal3+\";\\nh=h+1;\\nheap[(int)h]=-1;\\nh=h+1;\\n\"\n                principalValue.valor=temporal2;\n            }else if(temp.sentencia==SENTENCIAS.TO_LOWER_CASE){\n                if(principalValue.tipo!=\"string\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede realizar un toLowerCase en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede realizar un toLowerCase en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede realizar un toLowerCase en '+principalValue.tipo+'.\\n';                    \n                }\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\nt0=\"+principalValue.valor+\";\\n\";\n                consola.value+=\"toLowerCase();\\n\";\n                principalValue.valor=temporal;\n            }else if(temp.sentencia==SENTENCIAS.TO_UPPER_CASE){\n                if(principalValue.tipo!=\"string\"){\n                   // consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede realizar un toLowerCase en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede realizar un toUpperCase en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede realizar un toUpperCase en '+principalValue.tipo+'.\\n';                    \n                }\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\nt0=\"+principalValue.valor+\";\\n\";\n                consola.value+=\"toUpperCase();\\n\";\n                principalValue.valor=temporal;\n            }else if(temp.sentencia==SENTENCIAS.CONCAT){\n                if(principalValue.tipo!=\"string\"){\n                   // consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede realizar un toUpperCase en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede realizar un toUpperCase en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede realizar un toUpperCase en '+principalValue.tipo+'.\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.valor, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"string\"){\n                   // consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede concatenar '+valor.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede concatenar '+valor.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede concatenar '+valor.tipo+'.\\n';                    \n                }\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+principalValue.valor+\";\\n\";\n                consola.value+=\"t3=\"+valor.valor+\";\\n\";\n                consola.value+=\"concatenar();\\n\";   \n                principalValue.valor=temporal;\n            }\n            temp=temp.next_acc;\n        }\n        return {valor: principalValue.valor, tipo:principalValue.tipo, reference:true};   \n    }\n    function SplitAmbitos(name){\n        let ar = name.split(\"_\");\n        let er =[];\n        for(let i =ar.length-1;i>=0;i--){\n          let x=\"\";\n          for(let e =0;e<=i;e++){\n            if(e==0){\n              x+=ar[e];\n            }else{\n              x+=\"_\"+ar[e];\n            }    \n          }\n          er.push(x);\n        }\n        er.push(\"Global\");\n        return er;\n    }\n    function procesarLlamada(instruccion, tablaDeSimbolos, ambito){\n        let funcion = tablaDeSimbolos.obtenerFuncion(instruccion.id, instruccion.fila, instruccion.columna, ambito);\n        if(ambito==GetAmbito(instruccion.id) || instruccion.id.split(\"_\").length==1 || instruccion.id==ambito){ //la tercera condición es para que acepte las llamadas recursivas de funciones desasinadas\n            if (funcion.parametros.length != 0 && instruccion.parametros == \"Epsilon\") {\n                //consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.';\n                printedTable.erEj.push({descripcion:'La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                throw 'ERROR: La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.';\n            } else if (funcion.parametros.length == 0 && instruccion.parametros != \"Epsilon\") {\n                //consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.';\n                printedTable.erEj.push({descripcion:'La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                throw 'ERROR:La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.';\n            }else{\n                let argumentos = [];\n                let temp = instruccion.parametros;\n                while(temp!=\"Epsilon\"){\n                    argumentos.push(procesarExpresionNumerica(temp.expresion, tablaDeSimbolos, ambito));\n                    temp=temp.siguiente;\n                }\n                const tsFuncion = new TS(tsGlobal.simbolos.slice(), printedTable);\n                const tsTemp = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                consola.value+=\"//insertar parámetrso en el stack\\n\";\n                let apuntador = nuevoTemporal();\n                consola.value+=apuntador+\"=p;\\n\";\n                for(let i = 0; i < funcion.parametros.length;i++){\n                    if(funcion.parametros[i].tipo==argumentos[i].tipo){\n                        //se acepta el argumento para ser usado por los parámetros\n                       // tsTemp.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, argumentos[i].tipo, argumentos[i].valor, instruccion.id, \"temp\", \"temp\");\n                       // tsFuncion.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, argumentos[i].tipo, argumentos[i].valor, instruccion.id, \"temp\", \"temp\");\n                       let temporal = nuevoTemporal();\n                       consola.value+=temporal+\"=\"+apuntador+\"+\"+(i+1)+\";\\n\";\n                       consola.value+=\"stack[(int)\"+temporal+\"]=\"+argumentos[i].valor+\";\\n\";\n                    }else if(tablaDeSimbolos.existe(funcion.parametros[i].tipo, undefined, \"type\") && argumentos[i].valor==\"0\"){\n                        //para que acepte los nulls    \n                        tsTemp.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, funcion.parametros[i].tipo, argumentos[i].valor, instruccion.id, \"temp\", \"temp\");\n                        tsFuncion.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, funcion.parametros[i].tipo, argumentos[i].valor, instruccion.id, \"temp\", \"temp\");\n                    }else{\n                        consola.value+='ERROR:f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\n La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados, error de tipos.';\n                        printedTable.erEj.push({descripcion:'La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados, error de tipos.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                        throw 'ERROR:La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados, error de tipos.';\n                    }\n                }      \n                    consola.value+=instruccion.id+\"();\\n\";\n                    if(funcion.tipo!=\"void\"){\n                        let temporal=nuevoTemporal();\n                        consola.value+=temporal+\"=stack[(int)p];\\np=\"+apuntador+\"+1;\\n\";\n                        return {valor:temporal, tipo:funcion.tipo};\n                    }else{\n                        consola.value+=\"p=\"+apuntador+\";\\n\";\n                    }\n                //declarar parámetros con los valores de los argumentos\n            }\n        }else{\n            consola.value+='>ERROR:f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\n No se puede ejecutar '+instruccion.id+' desde el ámbito '+ambito+'.\\n';  \n            throw '>ERROR: No se puede ejecutar '+instruccion.id+' desde el ámbito '+ambito+'.\\n'; \n        }        \n    }\n    function GetAmbito(ambito){\n        let text=\"\";\n        if(ambito!=\"Global\"){\n            let temp = ambito.split(\"_\");\n            for(let i =0; i<temp.length-1;i++){\n                if(i==0){\n                    text+=ambito.split(\"_\")[i];\n                }else{\n                    text+=\"_\"+ambito.split(\"_\")[i];\n                }\n            }\n        }\n        return text;\n    }\n    function getArguments(instruccion, tablaDeSimbolos, ambito){\n        let argumentos = [];\n        let temp = instruccion;\n        while(temp!=\"Epsilon\"){\n            argumentos.push(procesarExpresionNumerica(temp.expresion, tablaDeSimbolos, ambito));\n            temp=temp.siguiente;\n        }\n        return argumentos;\n    }\n    function procesarUnicambios(instruccion, tablaDeSimbolos, ambito){\n        let principalValue = tablaDeSimbolos.obtenerSimbolo(instruccion.id.id, SplitAmbitos(ambito), instruccion.fila, instruccion.columna);\n        //determinar si se busca en el stack o en el heap\n        let pila = \"\";\n        if(principalValue.tipo.split(\"[]\").length>1 || tablaDeSimbolos.existe(principalValue.tipo.split(\"[]\")[0], undefined, \"type\") || ambito==\"Global\" || principalValue.tipo==\"string\"||principalValue.ambito==\"Global\"){\n            pila=\"heap\";\n        }else{\n            pila=\"stack\";\n        }        \n        let temp = instruccion.id.acc;\n        //se lo cambio a esta parte porque si es un number o boolean no tiene por qué tener acceso a una posición o atributo o método\n        if(principalValue.tipo ==\"number\" || principalValue.tipo==\"boolean\"){\n            /*let temporal = nuevoTemporal();\n            consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n            principalValue.valor=temporal;*/\n        }else if(pila==\"stack\"){\n            let temporal = nuevoTemporal();\n            consola.value+=temporal+\"=stack[(int)\"+principalValue.valor+\"];\\n\";//dirección en el heap\n            //consola.value+=temporal2+\"=heap[(int)\"+temporal+\"];\\n\";\n            //principalValue.valor=temporal2;\n            principalValue.valor=temporal;\n        }\n        while(temp!=\"Epsilon\"){\n            if(temp.acc_type==TIPO_ACCESO.ATRIBUTO){//B\n                //comprobar que exista la propiedad\n                let value = ExistingAttribute(principalValue.tipo, temp.atributo, tablaDeSimbolos);\n                //comprobar que el valor sea del mismo tipo del atributo o null\n                if(value == false){\n                   printedTable.erEj.push({descripcion:'No existe el atributo '+temp.atributo,tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No existe el atributo '+temp.atributo+'\\n';\n                }\n                let temporal1=nuevoTemporal(); \n                consola.value+=temporal1+\"=\"+principalValue.valor+\"+\"+(value.posicion)+\";\\n\";\n                //consola.value+=temporal2+\"= heap[(int)\"+temporal1+\"];\\n\";\n                //principalValue.valor=temporal2;\n                principalValue.valor=temporal1;\n                principalValue.tipo=value.valor.tipo;\n            }else if(temp.acc_type==TIPO_ACCESO.POSICION){\n                if(principalValue.tipo.split(\"[]\")==1){\n                    printedTable.erEj.push({descripcion:'Intento de acceso a posición de array inexistente',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: Intento de acceso a posición de array inexistente\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.index, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"number\"){\n                    printedTable.erEj.push({descripcion:'No se reconoce la expresion '+valor.valor+' como un index.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR:No se reconoce la expresion '+valor.valor+' como un index.\\n';                      \n                }\n                let tipo =\"\";\n                for(let e =0;e<principalValue.tipo.split(\"[]\").length-1;e++){\n                    if(e==0)tipo+=principalValue.tipo.split(\"[]\")[e];\n                    else tipo+=\"[]\";\n                }\n                principalValue.tipo=tipo;\n                let temporal1=nuevoTemporal(),temporal2=nuevoTemporal();\n                consola.value+=temporal1+\"=\"+valor.valor+\"+1;\\n\";\n                consola.value+=temporal2+\"=\"+principalValue.valor+\"+\"+temporal1+\";\\n\";\n                //consola.value+=temporal3+\"= heap[(int)\"+temporal2+\"];\\n\";\n                principalValue.valor=temporal2;\n            }\n            temp=temp.next_acc;\n        }\n        if(principalValue.tipo==\"number\" || principalValue.tipo==\"string\"){\n            if(instruccion.sentencia==SENTENCIAS.INCREMENTO){\n                let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n                consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n                consola.value+=temporal2+\"=\"+temporal+\"+\"+1+\";\\n\";\n                consola.value+=pila+\"[(int)\"+principalValue.valor+\"]=\"+temporal2+\";\\n\";\n            }else if(instruccion.sentencia==SENTENCIAS.DECREMENTO){\n                let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n                consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n                consola.value+=temporal2+\"=\"+temporal+\"-\"+1+\";\\n\";\n                consola.value+=pila+\"[(int)\"+principalValue.valor+\"]=\"+temporal2+\";\\n\";\n            }else if(instruccion.sentencia==SENTENCIAS.ASIGNACION_SUMA){\n                let valor = procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos, ambito);\n                if(valor.tipo == \"number\" ||valor.tipo == \"boolean\"){\n                    //principalValue.valor+=valor.valor;\n                    let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n                    consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n                    consola.value+=temporal2+\"=\"+temporal+\"+\"+valor.valor+\";\\n\";\n                    consola.value+=pila+\"[(int)\"+principalValue.valor+\"]=\"+temporal2+\";\\n\";\n                }else if(valor.tipo == \"string\" ){\n                    if(valor.tipo==\"string\"){\n                        let temporal = nuevoTemporal();\n                        consola.value+=temporal+\"=h;\\n\";\n                        consola.value+=\"t1=heap[(int)\"+principalValue.valor+\"];\\n\";\n                        consola.value+=\"t3=\"+valor.valor+\";\\n\";\n                        consola.value+=\"concatenar();\\n\";\n                        consola.value+=\"heap[(int)\"+principalValue.valor+\"]=\"+temporal+\";\\n\";\n                    }else  if(valor.tipo==\"number\"){\n                        let temporal = nuevoTemporal();\n                        consola.value+=temporal+\"=h;\\n\";\n                        consola.value+=\"t1=heap[(int)\"+principalValue.valor+\"];\\n\";\n                        consola.value+=\"t3=\"+valor.valor+\";\\n\";\n                        consola.value+=\"conStrNum();\\n\";\n                        consola.value+=\"heap[(int)\"+principalValue.valor+\"]=\"+temporal+\";\\n\";\n                    }else{//boolean\n                        let temporal = nuevoTemporal();\n                        consola.value+=temporal+\"=h;\\n\";\n                        consola.value+=\"t1=heap[(int)\"+principalValue.valor+\"];\\n\";\n                        consola.value+=\"t3=\"+valor.valor+\";\\n\";\n                        consola.value+=\"conStrBool();\\n\";\n                        consola.value+=\"heap[(int)\"+principalValue.valor+\"]=\"+temporal+\";\\n\";\n                    }\n                }else{\n                    //consola.value+='>f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: No se puede hacer una adicción del tipo ' + valor.tipo+'\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede hacer una adicción del tipo ' + valor.tipo,tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna}); \n                    throw '>ERROR: No se puede hacer una adicción del tipo ' + valor.tipo+'\\n';                    \n                }\n            }else if(instruccion.sentencia==SENTENCIAS.ASIGNACION_RESTA){\n                let valor = procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos, ambito);\n                if(valor.tipo == \"number\" ||valor.tipo == \"boolean\"){\n                    let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n                    consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n                    consola.value+=temporal2+\"=\"+temporal+\"-\"+valor.valor+\";\\n\";\n                    consola.value+=pila+\"[(int)\"+principalValue.valor+\"]=\"+temporal2+\";\\n\";\n                }else{\n                //  consola.value+='>f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: No se puede hacer una adicción del tipo ' + valor.tipo+'\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede hacer una adicción del tipo ' + valor.tipo,tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna}); \n                    throw '>ERROR: No se puede hacer una adicción del tipo ' + valor.tipo+'\\n';                    \n                }        \n            }\n        }else{\n            //consola.value+='>f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: No se puede usar el operador += con el tipo de dato: ' + principalValue.tipo+'\\n';  \n            printedTable.erEj.push({descripcion:'No se puede usar el operador += con el tipo de dato: ' + principalValue.tipo,tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna}); \n            throw '>ERROR: Incompatibilidad de tipos: No se puede usar el operador += con el tipo de dato: ' + principalValue.tipo+'\\n'; \n        }\n        \n    }\n    //SENTENCIAS DE CONTROL \n    function procesarIf(instruccion, tablaDeSimbolos, ambito, inicio, falsoC, retorno) {\n        consola.value+=\"//comienza el if\\n\";\n        let verdadero = nuevaEtiqueta(), falso = nuevaEtiqueta(), final=nuevaEtiqueta();\n        const logica = procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos, ambito);\n        consola.value+=\"if(\"+logica.valor+\")goto \"+verdadero+\";\\ngoto \"+falso+\";\\n\";\n        consola.value+=verdadero+\":\\n\";\n            const tsIf = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n            let returnedAcction = procesarBloque(instruccion.accion, tsIf, ambito, inicio, falsoC, retorno);\n            if(returnedAcction!=undefined){\n                return returnedAcction;\n            }\n        consola.value+=\"goto \"+final+\";\\n\";\n        consola.value+=falso+\":\\n\";\n        if (instruccion.else != \"Epsilon\") {\n                if (instruccion.else.sentencia === SENTENCIAS.ELSE_IF) {\n                    const tsElIf = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarIf(instruccion.else, tsElIf, ambito, inicio, falsoC);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } else {\n                    const tsElse = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarBloque(instruccion.else.accion, tsElse, ambito, inicio, falsoC, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                }\n        }\n        consola.value+=final+\":\\n\";    \n    }\n    function procesarFor(instruccion, tablaDeSimbolos, ambito, retorno) {\n        let inicio =nuevaEtiqueta(), actualizar=nuevaEtiqueta(), verdadero= nuevaEtiqueta(), falso = nuevaEtiqueta(), temporalID =  nuevoTemporal();\n        procesarBloque([instruccion.inicial], tablaDeSimbolos, ambito);\n        let instruccionID = instruccion.inicial.sentencia==SENTENCIAS.ASIGNACION?instruccion.inicial.id.id:instruccion.inicial.id;\n        //asignarle el valor del ID al temporal de control\n        const valor = procesarExpresionNumerica(instruccion.inicial.expresion, tablaDeSimbolos, ambito);\n        tablaDeSimbolos.actualizar(instruccionID, valor);//, SplitAmbitos(ambito)\n        if (instruccion.paso.paso == \"++\") {\n            consola.value+=inicio+\":\\n\";\n            let condicion = procesarExpresionNumerica(instruccion.final, tablaDeSimbolos, ambito).valor;\n            consola.value+=\"if(\"+condicion+\") goto \"+verdadero+\";\\ngoto \"+falso+\";\\n\";\n            consola.value+=actualizar+\":\\n\";\n            let identificador = tablaDeSimbolos.getSimbol(instruccionID,SplitAmbitos(ambito), \"inFor\", \"inFor\");\n            let pila=(identificador.ambito==\"Global\")?\"heap\":\"stack\";\n            consola.value+=temporalID+\"=\"+pila+\"[(int)\"+identificador.direcciones+\"]+1;\\n\"+pila+\"[(int)\"+identificador.direcciones+\"]=\"+temporalID+\";\\n\";\n            consola.value+=\"goto \"+inicio+\";\\n\";\n            consola.value+=verdadero+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            procesarBloque(instruccion.accion, tsFor, ambito, actualizar, falso, retorno);\n            //incremento\n            consola.value+=\"goto \"+actualizar+\";\\n\"; \n            consola.value+=falso+\":\\n\";\n        } else if (instruccion.paso.paso == \"--\") {\n            consola.value+=inicio+\":\\n\";\n            let condicion = procesarExpresionNumerica(instruccion.final, tablaDeSimbolos, ambito).valor;\n            consola.value+=\"if(\"+condicion+\") goto \"+verdadero+\";\\ngoto \"+falso+\";\\n\";\n            consola.value+=actualizar+\":\\n\";\n            let identificador = tablaDeSimbolos.getSimbol(instruccionID,SplitAmbitos(ambito), \"inFor\", \"inFor\");\n            let pila=(identificador.ambito==\"Global\")?\"heap\":\"stack\";\n            consola.value+=temporalID+\"=\"+pila+\"[(int)\"+identificador.direcciones+\"]-1;\\n\"+pila+\"[(int)\"+identificador.direcciones+\"]=\"+temporalID+\";\\n\";\n            consola.value+=\"goto \"+inicio+\";\\n\";\n            consola.value+=verdadero+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            procesarBloque(instruccion.accion, tsFor, ambito, actualizar, falso, retorno);\n            //incremento\n            consola.value+=\"goto \"+actualizar+\";\\n\"; \n            consola.value+=falso+\":\\n\";\n        } else {\n            consola.value+=inicio+\":\\n\";\n            let condicion = procesarExpresionNumerica(instruccion.final, tablaDeSimbolos, ambito).valor;\n            consola.value+=\"if(\"+condicion+\") goto \"+verdadero+\";\\ngoto \"+falso+\";\\n\";\n            consola.value+=actualizar+\":\\n\";\n            let identificador = tablaDeSimbolos.getSimbol(instruccionID,SplitAmbitos(ambito), \"inFor\", \"inFor\");\n            let pila=(identificador.ambito==\"Global\")?\"heap\":\"stack\";\n            let valor = procesarExpresionNumerica(instruccion.paso.paso, tablaDeSimbolos, ambito);\n            consola.value+=temporalID+\"=\"+valor.valor+\";\\n\"+pila+\"[(int)\"+identificador.direcciones+\"]=\"+temporalID+\";\\n\";\n            consola.value+=\"goto \"+inicio+\";\\n\";\n            consola.value+=verdadero+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            procesarBloque(instruccion.accion, tsFor, ambito, actualizar, falso, retorno);\n            //incremento\n            consola.value+=\"goto \"+actualizar+\";\\n\"; \n            consola.value+=falso+\":\\n\";    \n        }\n    \n    }\n    function procesarForOF(instruccion, tablaDeSimbolos, ambito, retorno){\n        let conjunto = procesarExpresionNumerica(instruccion.conjunto, tablaDeSimbolos, ambito);\n        if(conjunto.tipo.split(\"[]\").length==1){\n            consola.value+='>ERROR: '+conjunto.id+' no es un array.\\n';  \n            throw '>ERROR: '+conjunto.id+' no es un array.\\n';               \n        }\n        let temporal1 = nuevoTemporal(), size=nuevoTemporal(), temporal2=nuevoTemporal(), temporal3= nuevoTemporal(),inicio = nuevaEtiqueta(), actualizacion =  nuevaEtiqueta(), ejecucion = nuevaEtiqueta(), final = nuevaEtiqueta();\n        consola.value+=\"//comienza For Of\\n\";\n        consola.value+=temporal1+\"=-1;\\n\";\n        consola.value+=size+\"=heap[(int)\"+conjunto.valor+\"];\\n\";\n        consola.value+=\"goto \"+actualizacion+\";\\n\";\n        consola.value+=inicio+\":\\n\";        \n        consola.value+=\"if(\"+temporal1+\"<\"+size+\") goto \"+ejecucion+\";\\n\";\n        consola.value+=\"goto \"+final+\";\\n\";\n        consola.value+=actualizacion+\":\\n\";\n        consola.value+=temporal1+\"=\"+temporal1+\"+1;\\n\";\n        consola.value+=temporal2+\"=\"+conjunto.valor+\"+1;\\n\";\n        consola.value+=temporal3+\"=\"+temporal1+\"+\"+temporal2+\";\\n\";  \n        let tipo =\"\";\n       /* for(let i = 0; i<conjunto.tipo.split(\"[]\").length-1;i++){\n            if(i==0)tipo+=conjunto.tipo.split(\"[]\")[i];\n            else tipo+=\"[]\";\n        }   */ \n        tipo=procesarDataType(instruccion.tipo);  \n        if(tipo.split(\"[]\").length>1){\n            let temporal4 = nuevoTemporal();\n            consola.value+=temporal4+\"=heap[(int)\"+temporal3+\"];\\n\";\n            tablaDeSimbolos.agregar(TIPO_VARIABLE.LET, instruccion.variable, tipo, \"Global\", \"temp\", \"temp\", temporal4);\n        }else{\n            if(tipo.toLowerCase()==\"number\" || tipo.toLowerCase()==\"boolean\"){\n                tablaDeSimbolos.agregar(TIPO_VARIABLE.LET, instruccion.variable, tipo, \"Global\", \"temp\", \"temp\", temporal3);\n            }else{\n                let temporal4 = nuevoTemporal();\n                consola.value+=temporal4+\"=heap[(int)\"+temporal3+\"];\\n\";\n                tablaDeSimbolos.agregar(TIPO_VARIABLE.LET, instruccion.variable, tipo, \"Global\", \"temp\", \"temp\", temporal4);\n            }\n        }\n        consola.value+=\"goto \"+inicio+\";\\n\";\n        //se pasa el ámbito como global para que si son number/bollean los busque en el hea\n        consola.value+=ejecucion+\":\\n\";\n        const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n        procesarBloque(instruccion.accion, tsFor, ambito, actualizacion, final, retorno);\n        consola.value+=\"goto \"+actualizacion+\";\\n\";\n        consola.value+=final+\":\\n\";\n    }\n    function procesarForIn(instruccion, tablaDeSimbolos, ambito, retorno){\n        let conjunto = procesarExpresionNumerica(instruccion.conjunto, tablaDeSimbolos, ambito);\n        if(conjunto.tipo.split(\"[]\").length==1){\n            consola.value+='>ERROR: '+conjunto.id+' no es un array.\\n';  \n            throw '>ERROR: '+conjunto.id+' no es un array.\\n';               \n        }\n        let temporal2=nuevoTemporal(),temporal3=nuevoTemporal(),temporal4=nuevoTemporal(), size=nuevoTemporal(),inicio = nuevaEtiqueta(), actualizacion =  nuevaEtiqueta(), ejecucion = nuevaEtiqueta(), final = nuevaEtiqueta();\n        consola.value+=\"//comienza For In\\n\";\n        consola.value+=temporal2+\"=h;\\n\";\n        consola.value+=\"heap[(int)\"+temporal2+\"]=-1;\\nh=h+1;\";\n        consola.value+=size+\"=heap[(int)\"+conjunto.valor+\"];\\n\";\n        consola.value+=\"goto \"+actualizacion+\";\\n\";\n        consola.value+=inicio+\":\\n\";\n        consola.value+=temporal4+\"=heap[(int)\"+temporal2+\"];\\n\";        \n        consola.value+=\"if(\"+temporal4+\"<\"+size+\") goto \"+ejecucion+\";\\n\";\n        consola.value+=\"goto \"+final+\";\\n\";\n        consola.value+=actualizacion+\":\\n\";\n        consola.value+=temporal3+\"=heap[(int)\"+temporal2+\"];\\n\";\n        consola.value+=\"heap[(int)\"+temporal2+\"]=\"+temporal3+\"+1;\\n\";\n        tablaDeSimbolos.agregar(TIPO_VARIABLE.LET, instruccion.variable, \"number\", \"Global\", \"temp\", \"temp\", temporal2);\n        consola.value+=\"goto \"+inicio+\";\\n\";\n        //se pasa el ámbito como global para que si son number/bollean los busque en el hea\n        consola.value+=ejecucion+\":\\n\";\n        const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n        procesarBloque(instruccion.accion, tsFor, ambito, actualizacion, final, retorno);\n        consola.value+=\"goto \"+actualizacion+\";\\n\";\n        consola.value+=final+\":\\n\";\n    }\n    function procesarWhile(instruccion ,tablaDeSimbolos, ambito, retorno){\n        let inicio = nuevaEtiqueta(), verdadero=nuevaEtiqueta(), falso= nuevaEtiqueta();\n        consola.value+=inicio+\": \\n\";\n        let valor = procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos, ambito);\n        consola.value+=\"if(\"+valor.valor+\") goto \"+verdadero+\";\\n\";\n        consola.value+=\"goto \"+falso+\";\\n\";\n        consola.value+=verdadero+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            let returnedAcction = procesarBloque(instruccion.accion, tsFor, ambito, inicio, falso, retorno);\n            if(returnedAcction!=undefined){\n                if(returnedAcction.sentencia==SENTENCIAS.BREAK){\n                   // break;\n                   consola.value+=\"goto \"+falso+\";\\n\";\n                }else if(returnedAcction.sentencia==SENTENCIAS.CONTINUE){\n                   // continue;\n                   consola.value+=\"goto \"+inicio+\";\\n\";\n                }else{\n                    return returnedAcction;  \n                }\n            }\n        consola.value+=\"goto \"+inicio+\";\\n\";\n        consola.value+=falso+\":\\n\";        \n    }\n    function procesarDoWhile(instruccion ,tablaDeSimbolos, ambito, retorno){\n        let inicio = nuevaEtiqueta(), falso = nuevaEtiqueta();\n        consola.value+=inicio+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            let returnedAcction = procesarBloque(instruccion.accion, tsFor, ambito, inicio, falso, retorno);\n            if(returnedAcction!=undefined){\n                if(returnedAcction.sentencia==SENTENCIAS.BREAK){\n                  //  break;\n                  consola.value+=\"goto \"+falso+\";\\n\";\n                }else if(returnedAcction.sentencia==SENTENCIAS.CONTINUE){\n                   // continue;\n                   consola.value+=\"goto \"+inicio+\";\\n\";\n                }else{\n                    return returnedAcction;\n                } \n            }\n        let valor = procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos, ambito);\n        consola.value+=\"if(\"+valor.valor+\") goto \"+inicio+\";\\n\";\n        consola.value+=\"goto \"+falso+\";\\n\"+falso+\":\\n\";\n    }\n    function procesarSwitch(instruccion, tablaDeSimbolos, ambito, retorno){\n        let original = procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos, ambito);\n        let inicio = nuevaEtiqueta(), casos=nuevaEtiqueta(), final = nuevaEtiqueta(), temp = instruccion.cases, comparacion=nuevoTemporal(), etiquetas = [];\n        consola.value+=\"goto \"+inicio+\";\\n\";\n        while(temp!=\"Epsilon\"){       \n            let caso =nuevaEtiqueta();   \n            etiquetas.push(caso);         \n            consola.value+=caso+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            procesarBloque(temp.accion, tsFor, ambito, undefined, final, retorno);            \n            if(temp.logica==\"default\"){\n                break;\n            }\n            temp=temp.next_case;\n        }\n        consola.value+=\"goto \"+final+\";\\n\";\n        temp = instruccion.cases;\n        consola.value+=inicio+\":\\n\";\n        for(let i =0; i < etiquetas.length;i++){\n            if(temp.logica!=\"default\"){\n            let logica = procesarExpresionNumerica(temp.logica, tablaDeSimbolos, ambito); \n            consola.value+=comparacion+\"=\"+original.valor+\"==\"+logica.valor+\";\\n\";\n                consola.value+=\"if(\"+comparacion+\") goto \"+etiquetas[i]+\";\\n\";\n            }else{\n                consola.value+=\"goto \"+etiquetas[i]+\";\\n\";\n            }\n            temp=temp.next_case;\n        } \n        consola.value+=final+\":\\n\";\n    }\n    function getCases(cases){\n        let arreglo = [];\n        let temp=cases;\n        while(temp!=\"Epsilon\"){\n            arreglo.push(temp);\n            temp=temp.next_case;\n            if(temp.logica==\"default\"){\n                arreglo.push(temp);\n                break;\n            }\n        }\n        return arreglo;\n    }\n    //Graficar TS\n    function graficar_Ts(tablaDeSimbolos, ambito){\n        let tabla = document.createElement(\"table\");\n        tabla.bgColor= '#bbe1fa';\n        tabla.align=\"center\";\n        tabla.width=\"80%\";\n        tabla.border=\"1px solid black\";\n        var row0 =  tabla.insertRow( tabla.rows.length);\n        var celda01 = row0.insertCell(0);\n        var celda02 = row0.insertCell(1);\n        var celda03 = row0.insertCell(2);\n        var celda04 = row0.insertCell(3);\n        var celda05 = row0.insertCell(4);\n        var celda06 = row0.insertCell(5);\n        var celda07 = row0.insertCell(6);\n        var celda08 = row0.insertCell(7);\n        celda01.innerHTML = \"No.\";\n        celda01.bgColor=\"#40a8c4\";\n        celda02.innerHTML = \"Sentencia\";\n        celda02.bgColor=\"#40a8c4\";\n        celda03.innerHTML = \"ID\";\n        celda03.bgColor=\"#40a8c4\";\n        celda04.innerHTML = \"Tipo\";\n        celda04.bgColor=\"#40a8c4\";\n        celda05.innerHTML = \"Valor\";\n        celda05.bgColor=\"#40a8c4\";\n        celda06.innerHTML = \"Fila\";\n        celda06.bgColor=\"#40a8c4\";\n        celda07.innerHTML = \"Columna\";\n        celda07.bgColor=\"#40a8c4\";\n        celda08.innerHTML = \"Ambito\";\n        celda08.bgColor=\"#40a8c4\";\n      if(tablaDeSimbolos._simbolos.length!=0){\n        let i=0;\n        for(let simbolo of tablaDeSimbolos._simbolos) {\n        if(simbolo.si==\"variable\"){\n        i++;\n          var row = tabla.insertRow( tabla.rows.length);\n          var celda1 = row.insertCell(0);\n          var celda2 = row.insertCell(1);\n          var celda3 = row.insertCell(2);\n          var celda4 = row.insertCell(3);\n          var celda5 = row.insertCell(4);\n          var celda6 = row.insertCell(5);\n          var celda7 = row.insertCell(6);\n          var celda8 = row.insertCell(7);\n          celda1.innerHTML = i;\n          celda2.innerHTML = simbolo.si;\n          celda3.innerHTML = simbolo.id;\n          celda4.innerHTML = simbolo.tipo;\n          celda5.innerHTML = toString({valor:simbolo.valor,tipo:simbolo.tipo}, tablaDeSimbolos, ambito);\n          celda6.innerHTML = simbolo.fila;\n          celda7.innerHTML = simbolo.columna;\n          celda8.innerHTML = simbolo.ambito;\n        }\n        }\n      }\n      tablero.appendChild(tabla);\n    }\n    function nuevoTemporal(){\n        contadores.temporales++;\n        return \"t\"+contadores.temporales;\n    }\n    function nuevaEtiqueta(){\n        contadores.etiquetas++;\n        return \"L\"+contadores.etiquetas;\n    }\n    function nuevoArreglo(dimension){\n        switch(dimension){\n            case 1:\n                arreglos.uno++;\n                return \"arrayOne\"+arreglos.uno;\n            case 2:\n                arreglos.dos++;\n                return \"arrayTwo\"+arreglos.dos;\n            case 3:\n                arreglos.tres++;\n                return \"arrayThree\"+arreglos.tres;\n            case 4:\n                arreglos.cuatro++;\n                return \"arrayFour\"+arreglos.cuatro;\n            case 5:\n                arreglos.cinco++;\n                return \"arrayFive\"+arreglos.cinco;\n        }\n    }\n    function stackPush(){\n        pilas.stack++;\n        return pilas.stack-1;\n    }\n    function heapPush(){\n        pilas.heap++;\n        return pilas.heap-1;\n    }\n    function printTemporales(){\n        let txt =\"\";\n        for(let i = 0;i<=contadores.temporales;i++){\n            txt+=\"t\"+i;\n            txt+=(i<contadores.temporales)?\",\":\"\";\n        }\n        for(let i =0;i<arreglos.uno;i++){\n            txt+= \",*arrayOne\"+(i+1);\n        }\n        for(let i =0;i<arreglos.dos;i++){\n            txt+= \",**arrayTwo\"+(i+1);\n        }\n        for(let i =0;i<arreglos.tres;i++){\n            txt+= \",***arrayThree\"+(i+1);\n        }\n        for(let i =0;i<arreglos.cuatro;i++){\n            txt+= \",****arrayFour\"+(i+1);\n        }\n        for(let i =0;i<arreglos.cinco;i++){\n            txt+= \",*****arrayFive\"+(i+1);\n        }\n        return txt+\";\\n\";\n    }\n    function funcionesNativas(){\n        //funcion para imprimir strings\n        let text = \"void imprimir(){\\nL0: if(heap[(int)t0]!=-1) goto L1;\\ngoto L4;\\nL1: if(heap[(int)t0]>=299) goto L2;\\nif(heap[(int)t0]<-1) goto L3;\\nprintf(\\\"%c\\\", (char)heap[(int)t0]);\\nt0=t0+1;\\ngoto L0;\\nL2:\\nt1= heap[(int)t0];\\nt2=t1-300;\\nprintf(\\\"%f\\\",t2);\\nt0=t0+1;\\ngoto L0;\\nL3:\\nt1= heap[(int)t0];\\nprintf(\\\"%f\\\",t1);\\nt0=t0+1;\\ngoto L0;\\nL4:\\nreturn;\\n}\";\n        //función para concatenar 2 strings\n        text+=\"//t1 y t3 son el inicio de las cadenas\\nvoid concatenar(){\\nL0:\\nif(heap[(int)t1]!=-1) goto L1;\\ngoto L2;\\nL1:\\nt2=heap[(int)t1];\\nheap[(int)h]=t2;\\nh=h+1;\\nt1=t1+1;\\ngoto L0;\\nL2: if(heap[(int)t3]!=-1) goto L3;\\ngoto L4;\\n\";\n        text+=\"L3:\\nt2=heap[(int)t3];\\nheap[(int)h]=t2;\\nh=h+1;\\nt3=t3+1;\\ngoto L2;\\nL4:\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\\n\";\n        //funcion para calcular el length de strings\n        text+=\"//t4 es la cadena \\nvoid strLength(){\\nL0:\\nif(heap[(int)t4]!=-1) goto L1;\\ngoto L2;\\nL1:\\nt4=t4+1;\\ngoto L0;\\nL2:\\n return;\\n}\\n\";\n        //funcion para concatenar una string y un numero \n        text+=\"//t1=Cadena,t2,t3=numero\\nvoid conStrNum(){\\nL0:\\nif(heap[(int)t1]!=-1) goto L1;\\ngoto L2;\\nL1:\\nt2=heap[(int)t1];\\nheap[(int)h]=t2;\\nh=h+1;\\nt1=t1+1;\\ngoto L0;\\nL2:\\nif(t3<-1) goto L3;\\ngoto L4;\\nL3:\\nheap[(int)h]=t3;\\nh=h+1;\\ngoto L5;\\nL4:\\nheap[(int)h]=t3+300;\\nh=h+1;\\ngoto L5;\\nL5:\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\";\n        //funcion para concatenar un número y string\n        text+=\"//t1=Cadena,t2,t3=numero\\nvoid conNumStr(){\\nL0:\\nif(t3<-1) goto L1;\\ngoto L2;\\nL1:\\nheap[(int)h]=t3;\\nh=h+1;\\ngoto L3;\\nL2:\\nheap[(int)h]=t3+300;\\nh=h+1;\\ngoto L3;\\nL3: if(heap[(int)t1]!=-1) goto L4;\\ngoto L5;\\nL4:\\nt2=heap[(int)t1];\\nheap[(int)h]=t2;\\nh=h+1;\\nt1=t1+1;\\ngoto L1;\\nL5:\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\";\n        //funcion toLowerCase\n        text+=\"//t0=inicio de cadena, t1=cambio de letra\\nvoid toLowerCase(){\\nL0:\\nif(heap[(int)t0]!=-1) goto L1;\\ngoto L5;\\nL1:\\nif(heap[(int)t0]>=65) goto L2;\\ngoto L3;\\nL2:\\nif(heap[(int)t0]<=90) goto L4;\\nL3: \\nt1=heap[(int)t0];\\nheap[(int)h]=t1;\\nh=h+1;\\nt0=t0+1;\\ngoto L0;\\nL4:\\nt1=heap[(int)t0];\\nt1=t1+32;\\nheap[(int)h]=t1;\\nh=h+1;\\nt0=t0+1;\\ngoto L0;\\nL5:\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\\n\";\n        //funcion toUpperCase\n        text+=\"//t0=inicio de cadena, t1=cambio de letra\\nvoid toUpperCase(){\\nL0:\\nif(heap[(int)t0]!=-1) goto L1;\\ngoto L5;\\nL1:\\nif(heap[(int)t0]>=97) goto L2;\\ngoto L3;\\nL2:\\nif(heap[(int)t0]<=122) goto L4;\\nL3: \\nt1=heap[(int)t0];\\nheap[(int)h]=t1;\\nh=h+1;\\nt0=t0+1;\\ngoto L0;\\nL4:\\nt1=heap[(int)t0];\\nt1=t1-32;\\nheap[(int)h]=t1;\\nh=h+1;\\nt0=t0+1;\\ngoto L0;\\nL5:\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\\n\";\n        //funcion para concatenar string y boolean\n        text+=\"//t1=Cadena,t2,t3=boolean;\\nvoid conStrBool(){\\nL0:\\nif(heap[(int)t1]!=-1) goto L1;\\ngoto L2;\\nL1: \\nt2=heap[(int)t1];\\nheap[(int)h]=t2;\\nh=h+1;\\nt1=t1+1;\\ngoto L0;\\nL2: \\nif(t3==1) goto L3;\\ngoto L4;\\nL3:\\nheap[(int)h]=116;h=h+1;\\nheap[(int)h]=114;\\nh=h+1;\\nheap[(int)h]=117;\\nh=h+1;\\nheap[(int)h]=101;\\nh=h+1;\\nheap[(int)h]=-1;\\nh=h+1;\\ngoto L5;\\nL4:\\nheap[(int)h]=102;\\nh=h+1;\\nheap[(int)h]=97;\\nh=h+1;\\nheap[(int)h]=108;h=h+1;\\nheap[(int)h]=115;\\nh=h+1;\\nheap[(int)h]=101;\\nh=h+1;\\nheap[(int)h]=-1;\\nh=h+1;\\nL5:\\nreturn;\\n}\\n\";\n        //funcion para concatenar boolean y string\n        text+=\"//t1=Cadena,t2,t3=boolean;\\nvoid conBoolStr(){\\nL0:\\nif(t3==1) goto L1;\\ngoto L2;\\nL1:\\nheap[(int)h]=116;\\nh=h+1;\\nheap[(int)h]=114;\\nh=h+1;\\nheap[(int)h]=117;\\nh=h+1;\\nheap[(int)h]=101;\\nh=h+1;\\ngoto L3;\\nL2:\\nheap[(int)h]=102;\\nh=h+1;\\nheap[(int)h]=97;\\nh=h+1;\\nheap[(int)h]=108;\\nh=h+1;\\nheap[(int)h]=115;\\nh=h+1;\\nheap[(int)h]=101;\\nh=h+1;\\nL3: if(heap[(int)t1]!=-1) goto L4;\\ngoto L5;\\nL4: t2=heap[(int)t1];\\nheap[(int)h]=t2;\\nh=h+1;\\nt1=t1+1;\\ngoto L0; \\nL5:\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\\n\";\n        //funcion bool to String\n        text+=\"//t3=boolean\\nvoid boolToStr(){\\nL0:\\nif(t3==1) goto L1;\\ngoto L2;\\nL1:\\nprintf(\\\"%c\\\", (char)116);\\nprintf(\\\"%c\\\", (char)114);\\nprintf(\\\"%c\\\", (char)117);\\nprintf(\\\"%c\\\", (char)101);\\ngoto L3;\\nL2:\\nprintf(\\\"%c\\\", (char)102);\\nprintf(\\\"%c\\\", (char)97);\\nprintf(\\\"%c\\\", (char)108);\\nprintf(\\\"%c\\\", (char)115);\\nprintf(\\\"%c\\\", (char)101);\\nL3:\\nreturn;\\n}\\n\";\n        //potencia\n        text+=\"//t0=resultado, t1=exponente, t2=iterador, t3=base\\nvoid potencia(){\\nt2=1;\\nL0:if(t2<t1) goto L1;\\ngoto L2;\\nL1:\\nt0=t3*t0;\\nt2=t2+1;\\ngoto L0;\\nL2:\\nreturn;\\n}\\n\";\n        //comparar strings\n        text+=\"//t0=cadena1, t1=cadena2, t2=resultado\\nvoid compareStrs(){\\nL0:\\nif(heap[(int)t0]!=-1) goto L1;\\ngoto L2;\\nL1:\\nif(heap[(int)t1]!=-1) goto L3;\\ngoto L4;\\nL2:\\nif(heap[(int)t1]==-1) goto L5;\\ngoto L4;\\nL3:\\nif(heap[(int)t0]!=heap[(int)t1]) goto L4;\\nt0=t0+1;\\nt1=t1+1;\\ngoto L0;\\nL4:\\nt2=0;\\ngoto L6;\\nL5:\\nt2=1;\\nL6:\\nreturn;\\n}\";\n        return text;\n    }\n    function declararArregloC3D(arreglo){\n        let tipo =\"\", arrayName=\"\";\n        for(let i =0; i<arreglo.tipo.split(\"[]\").length-1;i++){\n            tipo+=arreglo.tipo.split(\"[]\")[i];\n        }\n        switch(arreglo.tipo.split(\"[]\").length){\n            case 1: \n                return;\n            case 2:\n                arrayName = nuevoArreglo(1);\n                consola.value+=arrayName+\"=\"+\"(double *)malloc(\"+(arreglo.direcciones.length+1)+\"*sizeof(double));\\n\";\n                for(let i =0;i<arreglo.direcciones.length+1;i++){\n                    if(i==0){\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones.length+\";\\n\";\n                    }else{\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones[i-1]+\";\\n\";\n                    }\n                    \n                }\n                //declarar los arreglos con los elemntos de la dimensión\n                arreglo.direcciones=arrayName;\n                return arrayName;\n            case 3:\n                arrayName = nuevoArreglo(2);\n                consola.value+=arrayName+\"=\"+\"(double *)malloc(\"+(arreglo.direcciones.length+1)+\"*sizeof(double));\\n\";\n                for(let i =0;i<arreglo.direcciones.length+1;i++){\n                    if(i==0){\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones.length+\";\\n\";\n                    }else{\n                        declararArregloC3D({direcciones:arreglo.direcciones[i], tipo:tipo});\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones[i-1]+\";\\n\";\n                    }                    \n                }\n                //declarar los arreglos con los elemntos de la dimensión\n                return arrayName;\n            case 4:\n                arrayName = nuevoArreglo(3);\n                consola.value+=arrayName+\"=\"+\"(double *)malloc(\"+(arreglo.direcciones.length+1)+\"*sizeof(double));\\n\";\n                for(let i =0;i<arreglo.direcciones.length+1;i++){\n                    if(i==0){\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones.length+\";\\n\";\n                    }else{\n                        declararArregloC3D({direcciones:arreglo.direcciones[i], tipo:tipo});\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones[i-1]+\";\\n\";\n                    }\n                }\n                //declarar los arreglos con los elemntos de la dimensión\n                return arrayName;\n            case 5:\n                arrayName = nuevoArreglo(4);\n                consola.value+=arrayName+\"=\"+\"(double *)malloc(\"+(arreglo.direcciones.length+1)+\"*sizeof(double));\\n\";        \n                for(let i =0;i<arreglo.direcciones.length+1;i++){\n                    if(i==0){\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones.length+\";\\n\";\n                    }else{\n                        declararArregloC3D({direcciones:arreglo.direcciones[i], tipo:tipo});\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones[i-1]+\";\\n\";\n                    }\n                }\n                //declarar los arreglos con los elemntos de la dimensión\n                return arrayName;\n        }\n    }\n    function traducirFunciones(id, tablaDeSimbolos){\n        let tamanio =0, funcion = tsGlobal.obtenerFuncion(id, 0, 0, \"Global\"), puntero=nuevoTemporal(),label = nuevaEtiqueta();\n        consola.value+=\"//Comienza a declarar los parámetros\\n\";\n        consola.value+=puntero+\"=p;\\n\";\n        for(let i =0;i<funcion.parametros.length;i++){\n            let temporal =nuevoTemporal(), temporal2=nuevoTemporal();\n            consola.value+=temporal+\"=\"+puntero+\"+\"+(i+1)+\";\\n\";\n            consola.value+=\"p=p+1;\\n\"\n            //consola.value+=temporal2+\"=stack[(int)\"+temporal+\"];\\n\";\n            tablaDeSimbolos.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, funcion.parametros[i].tipo, id, \"temp\", \"temp\", temporal);\n        }\n        if(funcion.parametros.length!=0){\n            consola.value+=\"p=p+1;\\n\";\n            consola.value+=\"//se adelanta el puntero para las variables del entorno\\n\";\n        }\n        consola.value+=\"//termina de declarar los parámetros\\n\";\n        tamanio+=countDeclarations(funcion.accion);\n        procesarBloque(funcion.accion, tablaDeSimbolos,id, undefined, undefined, label);\n       // printedTable.erEj=[];\n        consola.value+=label+\":\\nreturn;\";\n        FuncionesC3D.push({id:id, c3d:consola.value});\n        functionDeclaration=\"void \"+id+\"(){\\n\"+consola.value+\"\\n}\\n\"+functionDeclaration;\n        consola.value=\"\";\n    }\n    function countDeclarations(instrucciones){\n        let contador = 0;\n        for(let instruccion of instrucciones){\n            if (instruccion.sentencia === SENTENCIAS.DECLARACION) {\n                contador++;\n            }\n        }\n        return contador;\n    }\n    function procesarNewArray(largo, tablaDeSimbolos, ambito, userType){\n\n        consola.value+=\"//comienza arreglo newArray\\n\";\n        let valor = procesarExpresionNumerica(largo, tablaDeSimbolos, ambito, userType);\n        let tamanio=0,temporales=[],arrayHead=contadores.temporales+1;\n        temporales.push(nuevoTemporal());\n        consola.value+=temporales[tamanio]+\"=h;\\n\";\n        consola.value+=\"h=h+1;\\n\"\n        tamanio++;\n        for(let i =0;i<valor.valor;i++){\n            temporales.push(nuevoTemporal());\n            consola.value+=temporales[tamanio]+\"=h;\\n\";\n            consola.value+=\"h=h+1;\\n\";\n            tamanio++;\n        }\n        consola.value+=\"heap[(int)\"+temporales[0]+\"]=\"+(tamanio-1)+\";\\n\";\n        tamanio=1;\n        for(let i =0;i<valor.valor;i++){\n            consola.value+=\"heap[(int)\"+temporales[tamanio]+\"]=0;\\n\";\n            tamanio++;\n        }\n        return {tipo:\"newArray_\"+userType, valor:\"t\"+arrayHead, direcciones:temporales[0]};\n    }\n    function importFunctions(){\n        funcionesTraducidas = []\n        for(let funcion of tsGlobal._simbolos){\n            if(funcion.si==\"funcion\"){\n                let tsFuncion = (funcion.id.split(\"_\").length==1)?new TS(JSON.parse(JSON.stringify(tsGlobal._simbolos)), printedTable):Nested(funcion.id);\n                traducirFunciones(funcion.id,tsFuncion);\n                funcionesTraducidas.push({id:funcion.id, ts:tsFuncion}); \n            }            \n        } \n    }\n    function Nested(id){\n        let padre = \"\";\n        for(let i =0;i<id.split(\"_\").length-1;i++){\n            if(i!=0) padre+=\"_\";\n            padre+=id.split(\"_\")[i];\n        }\n        for(let tablas of funcionesTraducidas){\n            if(tablas.id.toLowerCase()==padre.toLowerCase()){\n                return tablas.ts;\n            }\n        }\n    }\n    function strMethods(principalValue, acc, tablaDeSimbolos, ambito){\n        let temp = acc;\n        while(temp!=\"Epsilon\"){\n            if(temp.sentencia==SENTENCIAS.LENGTH){//R\n                if(principalValue.tipo.split(\"[]\").length>1 || principalValue.tipo ==\"string\"){\n                    if(principalValue.tipo ==\"string\"){\n                        consola.value+=\"t4=\"+principalValue.valor+\";\\n\";\n                        let temporal = nuevoTemporal(), posicion = nuevoTemporal();\n                        consola.value+=\"strLength();\\n\"\n                        consola.value+=temporal+\"= t4-\"+principalValue.valor+\";\\n\";\n                        //consola.value+=posicion+\"=h;\\n\"+pila+\"[(int)\"+posicion+\"]=\"+temporal+\";\\n\";\n                        principalValue.valor= temporal;\n                        principalValue.tipo=\"number\";\n                    }else{\n                        let temporal = nuevoTemporal();\n                        consola.value+=\"//en la posición 0 está el size\\n\";\n                        consola.value+=temporal+\"=heap[(int)\"+principalValue.valor+\"];\\n\";\n                        principalValue.valor=temporal;\n                        principalValue.tipo=\"number\";\n                    }            \n                }else{\n                    // if(principalValue.tipo!=TIPO_DATO.ARRAY){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: Intento de Length a un array inexistente.\\n';  \n                    printedTable.erEj.push({descripcion:'Intento de Length a un array inexistente.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: Intento de Length a un array inexistente.\\n';     \n                }                \n                //principalValue={valor:principalValue.valor.length, tipo:\"number\"};\n                break;\n            }else if(temp.sentencia==SENTENCIAS.CHAR_AT){\n                if(principalValue.tipo!=\"string\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede obtener un CharAt en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede obtener un CharAt en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede obtener un CharAt en '+principalValue.tipo+'.\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.valor, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"number\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: '+valor.tipo+' no se puede usar como un índice en CharAt.\\n';  \n                    printedTable.erEj.push({descripcion:''+valor.tipo+' no se puede usar como un índice en CharAt',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: '+valor.tipo+' no se puede usar como un índice en CharAt.\\n';                    \n                }\n                let temporal1= nuevoTemporal(),temporal2 = nuevoTemporal(), temporal3=nuevoTemporal();\n                consola.value+=temporal1+\"=\"+principalValue.valor+\"+\"+valor.valor+\";\\n\";\n                consola.value+=temporal3+\"=heap[(int)\"+temporal1+\"];\\n\";\n                consola.value+=temporal2+\"=h;\\nheap[(int)\"+temporal2+\"]=\"+temporal3+\";\\nh=h+1;\\nheap[(int)h]=-1;\\nh=h+1;\\n\"\n                principalValue.valor=temporal2;\n            }else if(temp.sentencia==SENTENCIAS.TO_LOWER_CASE){\n                if(principalValue.tipo!=\"string\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede realizar un toLowerCase en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede realizar un toLowerCase en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede realizar un toLowerCase en '+principalValue.tipo+'.\\n';                    \n                }\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\nt0=\"+principalValue.valor+\";\\n\";\n                consola.value+=\"toLowerCase();\\n\";\n                principalValue.valor=temporal;\n            }else if(temp.sentencia==SENTENCIAS.TO_UPPER_CASE){\n                if(principalValue.tipo!=\"string\"){\n                   // consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede realizar un toLowerCase en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede realizar un toUpperCase en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede realizar un toUpperCase en '+principalValue.tipo+'.\\n';                    \n                }\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\nt0=\"+principalValue.valor+\";\\n\";\n                consola.value+=\"toUpperCase();\\n\";\n                principalValue.valor=temporal;\n            }else if(temp.sentencia==SENTENCIAS.CONCAT){\n                if(principalValue.tipo!=\"string\"){\n                   // consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede realizar un toUpperCase en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede realizar un toUpperCase en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede realizar un toUpperCase en '+principalValue.tipo+'.\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.valor, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"string\"){\n                   // consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede concatenar '+valor.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede concatenar '+valor.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede concatenar '+valor.tipo+'.\\n';                    \n                }\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+principalValue.valor+\";\\n\";\n                consola.value+=\"t3=\"+valor.valor+\";\\n\";\n                consola.value+=\"concatenar();\\n\";   \n                principalValue.valor=temporal;\n            }\n            temp=temp.next_acc;\n        }\n        return {valor: principalValue.valor, tipo:principalValue.tipo, reference:true};   \n    }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';/*  */\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport WebIcon from '@material-ui/icons/Web';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/mbo.css';\nimport 'codemirror/theme/cobalt.css';\nimport parser from './gramatica';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Desanidar from './desanidar';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport Traducir from './traductor';\nimport Tree from 'react-d3-tree';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(55),\n    right: theme.spacing(50),\n  },absolute2: {\n    position: 'absolute',\n    bottom: theme.spacing(50),\n    right: theme.spacing(45),\n  },\n  absolute3: {\n    position: 'absolute',\n    bottom: theme.spacing(45),\n    right: theme.spacing(40),\n  },absolute4: {\n    position: 'absolute',\n    bottom: theme.spacing(40),\n    right: theme.spacing(35),\n  },\n  absolute5: {\n    position: 'absolute',\n    bottom: theme.spacing(35),\n    right: theme.spacing(30),\n  },absolute6: {\n    position: 'absolute',\n    bottom: theme.spacing(30),\n    right: theme.spacing(25),\n  }, appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },button: {\n    margin: theme.spacing(1),\n  },\n  p:{\n    backgroundColor:'#2c2c2c',\n    color:'#FFFF',\n    marginTop:'0%',\n  }\n}));\nconst reports = {tsTr:[], erTr:[], tsEj:[], erEj:[]};\nconst intros = {AST:[], entrada:\"\", salida:\"\", desanidado:\"\"};\nconst tablero = document.createElement(\"div\");\nvar data;\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nexport default function UI() {\n  function analizar(entry) {\n    document.getElementById('consola').value=\"\";\n    let AST;\n    try {\n        AST = parser.parse(entry);\n        console.log(JSON.stringify(AST, null, 2));\n        document.getElementById('consola').value=JSON.stringify(AST, null, 2);\n        intros.AST=AST;\n        return AST;\n    } catch (error) {\n        console.log(error);\n        return error;\n    }\n  } \n  function Translate(){\n  }\n  function Interpretar(){\n    Desanidar(analizar(intros.entrada), document.getElementById('consola'), intros.salida, reports);\n    tablero.innerHTML=document.createElement(\"div\").innerHTML;\n    Traducir(analizar(intros.desanidado), document.getElementById('consola'), intros.salida, reports,  tablero);\n  }\n  function prs(AST){\n    let temp = {attributes:{} , children:[]};\n    for(let sentencia in AST){\n        if(typeof AST[sentencia] === 'object' && AST[sentencia] !== null){\n          let atb = prs(AST[sentencia]);\n          temp.children.push({name:sentencia,attributes: atb.attributes, children:atb.children});\n          \n        }else{\n          temp.attributes[sentencia]=AST[sentencia];\n        }\n      }\n      return temp;\n  }\n  function translationConsole(editor){\n    intros.salida=editor;\n  }\n  function CursosLocation(editor){\n    document.getElementById('posicion').innerHTML=\"Línea:\"+(editor.getCursor().line+1)+\" Columna:\"+editor.getCursor().ch;\n  }\n  function EntryValue(value, index){\n    switch(index){\n      case 1:\n        intros.entrada=value;\n        break;\n      case 2:\n        intros.desanidado=value;\n    }\n  }\n  function populateTableTsTr(tablaDeSimbolos){\n      var row0 =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n      var celda01 = row0.insertCell(0);\n      var celda02 = row0.insertCell(1);\n      var celda03 = row0.insertCell(2);\n      var celda05 = row0.insertCell(3);\n      var celda06 = row0.insertCell(4);\n      var celda07 = row0.insertCell(5);\n      celda01.innerHTML = \"No.\";\n      celda01.bgColor=\"#40a8c4\";\n      celda02.innerHTML = \"Sentencia\";\n      celda02.bgColor=\"#40a8c4\";\n      celda03.innerHTML = \"ID\";\n      celda03.bgColor=\"#40a8c4\";\n      celda05.innerHTML = \"Fila\";\n      celda05.bgColor=\"#40a8c4\";\n      celda06.innerHTML = \"Columna\";\n      celda06.bgColor=\"#40a8c4\";\n      celda07.innerHTML = \"Ambito\";\n      celda07.bgColor=\"#40a8c4\";\n    if(tablaDeSimbolos.length!=0){\n      let i=1;\n      for(let simbolo of tablaDeSimbolos._simbolos) {\n      i++;\n      if(simbolo.si!=\"type\"){\n        var row =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n        var celda1 = row.insertCell(0);\n        var celda2 = row.insertCell(1);\n        var celda3 = row.insertCell(2);\n        var celda5 = row.insertCell(3);\n        var celda6 = row.insertCell(4);\n        var celda7 = row.insertCell(5);\n        celda1.innerHTML = i;\n        celda2.innerHTML = simbolo.si;\n        celda3.innerHTML = simbolo.id;\n        celda5.innerHTML = simbolo.fila;\n        celda6.innerHTML = simbolo.columna;\n        celda7.innerHTML = simbolo.ambito;\n      }else{\n        var row =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n        var celda1 = row.insertCell(0);\n        var celda2 = row.insertCell(1);\n        var celda3 = row.insertCell(2);\n        var celda4 = row.insertCell(3);\n        var celda6 = row.insertCell(4);\n        var celda7 = row.insertCell(5);\n        celda1.innerHTML = i;\n        celda2.innerHTML = simbolo.si;\n        celda3.innerHTML = simbolo.id;\n        celda5.innerHTML = simbolo.fila;\n        celda6.innerHTML = simbolo.columna;\n      }\n      }\n    }\n  } \n  function populateTableErTr(Errores_Array){    \n    if(Errores_Array.length!=0){\n      var row0 =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n      var celda01 = row0.insertCell(0);\n      var celda02 = row0.insertCell(1);\n      var celda03 = row0.insertCell(2);\n      var celda04 = row0.insertCell(3);\n      var celda05 = row0.insertCell(4);\n      var celda06 = row0.insertCell(5);\n      celda01.innerHTML = \"No.\";\n      celda02.innerHTML = \"Tipo\";\n      celda03.innerHTML = \"Fila\";\n      celda04.innerHTML = \"Columna\";\n      celda05.innerHTML = \"Símbolo/Descripcion\";\n      celda06.innerHTML = \"Ambito\";\n      let i=1;  \n      for(let err of Errores_Array){\n        var row =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n        var celda1 = row.insertCell(0);\n        var celda2 = row.insertCell(1);\n        var celda3 = row.insertCell(2);\n        var celda4 = row.insertCell(3);\n        var celda5 = row.insertCell(4);\n        celda1.innerHTML = i;\n        celda2.innerHTML = err.tipo;\n        celda3.innerHTML = err.linea;\n        celda4.innerHTML = err.columna;\n        celda5.innerHTML = err.descripcion;\n        i++;\n      }\n    }else{\n      var row0 =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n      var celda01 = row0.insertCell(0);\n      celda01.innerHTML = \"No se detectaron herrores en la traducción.\";\n    }\n  }  \n  function toString(simbolo){\n    let text=\"\";\n    if(Array.isArray(simbolo.direcciones)){\n      text+=\"{\";\n      for(let i = 0;i<simbolo.direcciones.length;i++){\n        if(simbolo.direcciones[i]!=null){\n          text+=simbolo.direcciones[i].id+\":\";\n          if(Array.isArray(simbolo.direcciones[i].direcciones)){\n            text+=toString({direcciones:simbolo.direcciones[i].direcciones});\n          }else{\n            text+=simbolo.direcciones[i].direcciones;\n          }\n        }else{\n          text+=simbolo.direcciones[i].id+\":null\";\n        }\n        if(i!=simbolo.direcciones.length-1){\n          text+=\", \";\n        }\n      }\n      text+=\"}\";\n    }else if(simbolo.tipo.split(\"[]\").length>1){\n      /*text+=\"[\";\n      for(let i = 0;i<simbolo.direcciones.length;i++){\n        if(Array.isArray(simbolo.direcciones[i])){\n          let tipo =\"\";\n          for(let e =0;e<simbolo.tipo.split(\"[]\").length-1;e++){\n            if(e==0)tipo+=simbolo.tipo.split(\"[]\")[i];\n            else tipo+=\"[]\";\n          }\n          text+=toString({direcciones:simbolo.direcciones[i],tipo:tipo});\n        }else{\n          text+=simbolo.direcciones[i];\n        }\n          if(i!=simbolo.direcciones.length-1){\n              text+=\", \";\n          }\n      }\n      text+=\"]\";*/\n      text+=simbolo.direcciones;\n    } else{\n      text+= simbolo.direcciones;\n    }\n    return text;\n  }\n  function populateTableTsEj(tablaDeSimbolos){\n    let tabla = document.createElement(\"table\");\n    tabla.bgColor= '#bbe1fa';\n    tabla.align=\"center\";\n    tabla.width=\"80%\";\n    tabla.border=\"1px solid black\";\n    {/*\"width'80%' style= border='1' align='center'\";*/}\n    var row1 =  tabla.insertRow( tabla.rows.length);\n    var celda11 = row1.insertCell(0);\n    celda11.innerHTML=\"Tabla de Símbolos FINAL\";\n    celda11.bgColor=\"#40a8c4\";\n    celda11.align=\"center\";\n    celda11.colSpan=8;\n    var row0 =  tabla.insertRow( tabla.rows.length);\n    var celda01 = row0.insertCell(0);\n    var celda02 = row0.insertCell(1);\n    var celda03 = row0.insertCell(2);\n    var celda04 = row0.insertCell(3);\n    var celda05 = row0.insertCell(4);\n    var celda06 = row0.insertCell(5);\n    var celda07 = row0.insertCell(6);\n    var celda08 = row0.insertCell(7);\n    celda01.innerHTML = \"No.\";\n    celda01.bgColor=\"#40a8c4\";\n    celda02.innerHTML = \"Sentencia\";\n    celda02.bgColor=\"#40a8c4\";\n    celda03.innerHTML = \"ID\";\n    celda03.bgColor=\"#40a8c4\";\n    celda04.innerHTML = \"Tipo\";\n    celda04.bgColor=\"#40a8c4\";\n    celda05.innerHTML = \"Dirección\";\n    celda05.bgColor=\"#40a8c4\";\n    celda06.innerHTML = \"Fila\";\n    celda06.bgColor=\"#40a8c4\";\n    celda07.innerHTML = \"Columna\";\n    celda07.bgColor=\"#40a8c4\";\n    celda08.innerHTML = \"Ambito\";\n    celda08.bgColor=\"#40a8c4\";\n  if(tablaDeSimbolos.length!=0){\n    let i=0;\n    for(let simbolo of tablaDeSimbolos._simbolos) {\n    i++;\n    if(simbolo.si==\"variable\"){\n      var row = tabla.insertRow( tabla.rows.length);\n      var celda1 = row.insertCell(0);\n      var celda2 = row.insertCell(1);\n      var celda3 = row.insertCell(2);\n      var celda4 = row.insertCell(3);\n      var celda5 = row.insertCell(4);\n      var celda6 = row.insertCell(5);\n      var celda7 = row.insertCell(6);\n      var celda8 = row.insertCell(7);\n      celda1.innerHTML = i;\n      celda2.innerHTML = simbolo.si;\n      celda3.innerHTML = simbolo.id;\n      celda4.innerHTML = simbolo.tipo;\n      celda5.innerHTML = toString(simbolo);\n      celda6.innerHTML = simbolo.fila;\n      celda7.innerHTML = simbolo.columna;\n      celda8.innerHTML = simbolo.ambito;\n    }else if(simbolo.si==\"funcion\"){\n      var row =  tabla.insertRow( tabla.rows.length);\n      var celda1 = row.insertCell(0);\n      var celda2 = row.insertCell(1);\n      var celda3 = row.insertCell(2);\n      var celda4 = row.insertCell(3);\n      var celda5 = row.insertCell(4);\n      var celda6 = row.insertCell(5);\n      var celda7 = row.insertCell(6);\n      var celda8 = row.insertCell(7);\n      celda1.innerHTML = i;\n      celda2.innerHTML = simbolo.si;\n      celda3.innerHTML = simbolo.id;\n      celda4.innerHTML = simbolo.tipo;\n      celda6.innerHTML = simbolo.fila;\n      celda7.innerHTML = simbolo.columna;\n      celda8.innerHTML = simbolo.ambito;\n    }else{\n      var row =  tabla.insertRow( tabla.rows.length);\n      var celda1 = row.insertCell(0);\n      var celda2 = row.insertCell(1);\n      var celda3 = row.insertCell(2);\n      var celda4 = row.insertCell(3);\n      var celda5 = row.insertCell(4);\n      var celda6 = row.insertCell(5);\n      var celda7 = row.insertCell(6);\n      var celda8 = row.insertCell(7);\n      celda1.innerHTML = i;\n      celda2.innerHTML = simbolo.si;\n      celda3.innerHTML = simbolo.id;\n      celda6.innerHTML = simbolo.fila;\n      celda7.innerHTML = simbolo.columna;\n    }\n    }\n  }\n  return tabla;\n}\n  function populateTableErEj(Errores_Array){    \n    if(Errores_Array.length!=0){\n      var row0 =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n      var celda01 = row0.insertCell(0);\n      var celda02 = row0.insertCell(1);\n      var celda03 = row0.insertCell(2);\n      var celda04 = row0.insertCell(3);\n      var celda05 = row0.insertCell(4);\n      var celda06 = row0.insertCell(5);\n      celda01.innerHTML = \"No.\";\n      celda02.innerHTML = \"Tipo\";\n      celda03.innerHTML = \"Fila\";\n      celda04.innerHTML = \"Columna\";\n      celda05.innerHTML = \"Descripcion\";\n      celda06.innerHTML = \"Ambito\";\n      let i=1;\n      for(let err of Errores_Array){\n        var row =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n        var celda1 = row.insertCell(0);\n        var celda2 = row.insertCell(1);\n        var celda3 = row.insertCell(2);\n        var celda4 = row.insertCell(3);\n        var celda5 = row.insertCell(4);\n        celda1.innerHTML = i;\n        celda2.innerHTML = err.tipo;\n        celda3.innerHTML = err.linea;\n        celda4.innerHTML = err.columna;\n        celda5.innerHTML = err.descripcion;\n        i++;\n      }\n    }else{\n      var row0 =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n      var celda01 = row0.insertCell(0);\n      celda01.innerHTML = \"No se detectaron herrores en la Ejecución.\";\n    }\n  }\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  /* antigua funcion\n  const handleClickOpen = () => {\n    setOpen(true);\n    populateTable(reports.tsTr);\n   };*/\n   async function handleClickOpenTsTr (){\n    data={};\n    setOpen(true);\n    await setTimeout(null, 300);\n    document.getElementById('AST_FRAME').style.display=\"none\";\n    populateTableTsTr(reports.tsTr);\n   };\n   async function handleClickOpenErTr (){\n    data={};\n    setOpen(true);\n    await setTimeout(null, 300);\n    document.getElementById('AST_FRAME').style.display=\"none\";\n    populateTableErTr(reports.erTr);\n   };\n   async function handleClickOpenTsEj (){\n    data={};\n    setOpen(true);\n    await setTimeout(null, 300);\n    document.getElementById('AST_FRAME').style.display=\"none\";\n    document.getElementById('tablero').innerHTML=tablero.innerHTML;\n    document.getElementById('tablero').appendChild(populateTableTsEj(reports.tsEj));\n   };\n   async function handleClickOpenErEj (){\n    data={};\n    setOpen(true);\n    await setTimeout(null, 300);\n    document.getElementById('AST_FRAME').style.display=\"none\";\n    populateTableErEj(reports.erEj);\n   };\n   async function handleClickOpenAST (){\n    data={name:\"AST\",children:prs(intros.AST.AST).children};\n    setOpen(true);\n    await setTimeout(null, 300);\n    document.getElementById('AST_FRAME').style.display=\"block\";\n   };\n  const handleClose = () => {\n    data={};\n    setOpen(false);\n    document.getElementById('AST_FRAME').style.display=\"none\";\n   };\n   const copyToClipboard = str => {\n    const el = document.createElement('textarea');  // Create a <textarea> element\n    el.value = document.getElementById('consola').value;                                 // Set its value to the string that you want copied\n    el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\n    el.style.position = 'absolute';                 \n    el.style.left = '-9999px';                      // Move outside the screen to make it invisible\n    document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\n    const selected =            \n      document.getSelection().rangeCount > 0        // Check if there is any content selected previously\n        ? document.getSelection().getRangeAt(0)     // Store selection if found\n        : false;                                    // Mark as false to know no selection existed before\n    el.select();                                    // Select the <textarea> content\n    document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\n    document.body.removeChild(el);                  // Remove the <textarea> element\n    if (selected) {                                 // If a selection existed before copying\n      document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\n      document.getSelection().addRange(selected);   // Restore the original selection\n    }\n  };\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n         <CssBaseline />\n          <Paper className={classes.paper}>IDE </Paper>\n          <CodeMirror value=''\n              options={{\n                  mode: 'javascript',\n                  theme: 'mbo',\n                  lineNumbers: true\n              }}\n              onChange={(editor, data, value) => {EntryValue(value, 1)}}\n              onCursorActivity={(editor, data, value)=>{CursosLocation(editor)}}\n          />\n          <p id=\"posicion\" className={classes.p}>Línea:- Columna:-</p>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>Traducción\n\n          </Paper>\n          <CodeMirror  className={classes.cdm} \n            value=''\n            options={{\n                mode: 'javascript',\n                theme: 'cobalt',\n                lineNumbers: true,\n                readOnly: true,\n                indentAutoShift:true\n            }}\n            onChange={(editor, data, value) => {EntryValue(value, 2)}}\n            editorDidMount={(editor)=>translationConsole(editor)}\n        />\n        </Grid>\n        </Grid>\n      <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>CONSOLA<Button startIcon={<FileCopyIcon/>} style={{marginRight:0}} onClick={copyToClipboard}></Button></Paper>\n            <textarea disabled id=\"consola\" style={{width:\"100%\", height:\"50vh\", resize: \"none\", backgroundColor:\"#0f4c75\", color:\"#ffff\"}} ></textarea>\n\n          </Grid> \n          <Grid item xs={6}>\n              <div style={{height:'30%', marginTop:'10%', float:'inline-start', alignContent:'stretch'}}><Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          startIcon={<PlayArrowIcon />}\n          onClick={()=>{Interpretar(intros.entrada)}}\n        >\n          Traducir a C3D\n        </Button>\n        <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              startIcon={<WebIcon />}\n              onClick={handleClickOpenTsEj}\n            >\n              Tabla de símbolos de traducción\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              startIcon={<ErrorOutlineIcon />}\n              onClick={handleClickOpenErEj}\n            >\n              Errores de traducción\n            </Button>\n        </div>\n              <div style={{height:'30%', float:'inline-start', alignContent:'stretch'}}>\n\n              <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          startIcon={<PlayArrowIcon />}\n          onClick={()=>{Interpretar(intros.entrada)}}\n        >\n          Optimizar C3D\n        </Button>\n              <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              startIcon={<AccountTreeIcon />}\n              onClick={()=>{handleClickOpenAST()}}\n            >\n              AST\n            </Button>\n              </div>\n              <div style={{height:'30%', float:'inline-start', alignContent:'stretch'}}>\n              {/* <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          className={classes.button}\n          startIcon={<TranslateIcon/>}\n          onClick={()=>{Translate()}}\n        >\n          Desanidar Programa\n        </Button> */}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.button}\n          startIcon={<TableChartIcon />}\n          onClick={handleClickOpenTsTr}\n        >\n          Tabla de Símbolos de Desanidación\n        </Button>\n              <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              startIcon={<WarningIcon />}\n              onClick={handleClickOpenErTr}\n            >\n              Errores de Desanidación\n            </Button>\n            \n            </div>\n       </Grid>\n      </Grid>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              REPORTES\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div id=\"AST_FRAME\" style={{width: '1920px', height: '1000px'}}>\n        <Tree data={data} zoomable={true} orientation={\"vertical\"} />\n        </div>\n        <div id=\"tablero\"></div>\n       <table id=\"tablaDeSalida\" width=\"80%\" style={{background:'#bbe1fa'}} border='1' align='center'> \n       </table>\n      </Dialog>\n     {/*  <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              AST\n            </Typography>\n          </Toolbar>\n        </AppBar>\n   //aca tiene que ir la etiqueta que tenga el grafo :p\n      </Dialog> */}\n    </div>\n  );\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from './App';\nimport UI from \"./backend/Menu\";\n\nReactDOM.render( <UI /> , document.getElementById(\"root\"))","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar gramatica = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,20],$V1=[1,6],$V2=[1,7],$V3=[1,8],$V4=[1,9],$V5=[1,13],$V6=[1,18],$V7=[1,10],$V8=[1,11],$V9=[1,12],$Va=[1,14],$Vb=[1,16],$Vc=[1,17],$Vd=[1,19],$Ve=[1,21],$Vf=[2,5,9,15,17,22,24,26,28,32,33,34,39,47,48,84,93],$Vg=[21,42,43,44,45,46],$Vh=[2,139],$Vi=[1,34],$Vj=[1,33],$Vk=[1,39],$Vl=[1,52],$Vm=[2,128],$Vn=[1,42],$Vo=[1,37],$Vp=[1,38],$Vq=[1,40],$Vr=[1,41],$Vs=[1,43],$Vt=[1,44],$Vu=[1,45],$Vv=[1,46],$Vw=[1,48],$Vx=[1,50],$Vy=[1,51],$Vz=[1,71],$VA=[1,76],$VB=[1,77],$VC=[1,78],$VD=[1,79],$VE=[1,82],$VF=[1,80],$VG=[1,81],$VH=[1,83],$VI=[1,85],$VJ=[1,86],$VK=[2,77],$VL=[12,15,21,36,42,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,75,76,81],$VM=[1,99],$VN=[1,98],$VO=[1,100],$VP=[1,101],$VQ=[1,102],$VR=[1,103],$VS=[1,104],$VT=[1,105],$VU=[1,106],$VV=[1,107],$VW=[1,108],$VX=[1,109],$VY=[1,110],$VZ=[1,111],$V_=[1,112],$V$=[12,15,21,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,75,76,81],$V01=[2,145],$V11=[1,118],$V21=[1,125],$V31=[1,132],$V41=[2,5,9,15,17,22,24,26,28,32,33,34,39,47,48,84,93,98,99],$V51=[2,9,15,17,22,24,26,28,32,33,39,47,48,84,98,99],$V61=[2,79],$V71=[1,164],$V81=[2,103],$V91=[1,195],$Va1=[21,81],$Vb1=[2,86],$Vc1=[1,203],$Vd1=[1,208],$Ve1=[1,205],$Vf1=[1,206],$Vg1=[1,207],$Vh1=[1,209],$Vi1=[1,216],$Vj1=[1,219],$Vk1=[1,214],$Vl1=[1,215],$Vm1=[1,217],$Vn1=[1,218],$Vo1=[1,220],$Vp1=[1,221],$Vq1=[1,222],$Vr1=[1,223],$Vs1=[1,225],$Vt1=[12,15,21,36,50,51,56,57,58,59,60,61,62,63,75,76,81],$Vu1=[12,15,21,36,50,51,52,53,56,57,58,59,60,61,62,63,75,76,81],$Vv1=[12,15,21,36,56,57,58,59,60,61,62,63,75,76,81],$Vw1=[12,15,21,36,60,61,62,63,75,76,81],$Vx1=[2,84],$Vy1=[1,265],$Vz1=[12,13,15,21,30,31,42,81],$VA1=[2,94],$VB1=[1,268],$VC1=[1,274],$VD1=[1,278],$VE1=[1,277],$VF1=[1,279],$VG1=[1,280],$VH1=[1,281],$VI1=[1,282],$VJ1=[1,283],$VK1=[1,284],$VL1=[1,285],$VM1=[1,286],$VN1=[1,287],$VO1=[1,288],$VP1=[1,289],$VQ1=[1,290],$VR1=[1,292],$VS1=[1,291],$VT1=[12,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,76,81],$VU1=[2,117],$VV1=[1,300],$VW1=[1,301],$VX1=[1,305],$VY1=[2,126],$VZ1=[1,322],$V_1=[1,369],$V$1=[1,367],$V02=[1,368],$V12=[10,13,26,50,64,65,66,67,68,69,71,73,77,78],$V22=[2,112],$V32=[1,399],$V42=[12,36,50,51,56,57,58,59,60,61,62,63,76,81],$V52=[12,36,50,51,52,53,56,57,58,59,60,61,62,63,76,81],$V62=[12,36,56,57,58,59,60,61,62,63,76,81],$V72=[12,36,60,61,62,63,76,81];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"ini\":3,\"instrucciones\":4,\"EOF\":5,\"instruccion\":6,\"declaracion\":7,\"type\":8,\"R_IF\":9,\"ABRIR_PARENTESIS\":10,\"expresion\":11,\"CERRAR_PARENTESIS\":12,\"ABRIR_LLAVE\":13,\"sentencias\":14,\"CERRAR_LLAVE\":15,\"elseIf\":16,\"R_CONSOLE\":17,\"PUNTO\":18,\"R_LOG\":19,\"impresion\":20,\"PUNTO_COMA\":21,\"R_SWITCH\":22,\"cases\":23,\"R_FOR\":24,\"for_init\":25,\"IDENTIFICADOR\":26,\"for_change\":27,\"R_LET\":28,\"definicion_tipo\":29,\"R_OF\":30,\"R_IN\":31,\"R_WHILE\":32,\"R_DO\":33,\"R_FUNCTION\":34,\"parametros\":35,\"DOS_PUNTOS\":36,\"tipo\":37,\"argumentos\":38,\"R_RETURN\":39,\"retorno\":40,\"id\":41,\"IGUAL\":42,\"INCREMENTO\":43,\"DECREMENTO\":44,\"ASIGNACION_SUMA\":45,\"ASIGNACION_RESTA\":46,\"R_BREAK\":47,\"R_CONTINUE\":48,\"sentencia\":49,\"MENOS\":50,\"MAS\":51,\"MULTIPLICACION\":52,\"DIVISION\":53,\"POTENCIA\":54,\"MODULO\":55,\"MAYOR\":56,\"MENOR\":57,\"MAYOR_IGUAL\":58,\"MENOR_IGUAL\":59,\"IGUALDAD\":60,\"DISTINTO\":61,\"AND\":62,\"OR\":63,\"NOT\":64,\"ENTERO\":65,\"DECIMAL\":66,\"R_TRUE\":67,\"R_FALSE\":68,\"CADENA\":69,\"str_method\":70,\"CADENA_CHARS\":71,\"objeto\":72,\"ABRIR_CORCHETE\":73,\"arrays\":74,\"CERRAR_CORCHETE\":75,\"OPERADOR_TERNARIO\":76,\"R_NULL\":77,\"R_NEW\":78,\"R_ARRAY\":79,\"argumentos_P\":80,\"COMA\":81,\"definicion\":82,\"listaID\":83,\"R_CONST\":84,\"R_NUMBER\":85,\"declarar_array\":86,\"R_STRING\":87,\"R_BOOLEAN\":88,\"R_VOID\":89,\"obj_atributos\":90,\"obj_atributos_pr\":91,\"arrays_pr\":92,\"R_TYPE\":93,\"type_atributos\":94,\"type_atributos_pr\":95,\"R_ELSE\":96,\"elseIf_P\":97,\"R_CASE\":98,\"R_DEFAULT\":99,\"parametros_pr\":100,\"array_position\":101,\"id_pr\":102,\"R_LENGTH\":103,\"R_CHARAT\":104,\"R_TOLOWERCASE\":105,\"R_TOUPPERCASE\":106,\"R_CONCAT\":107,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",9:\"R_IF\",10:\"ABRIR_PARENTESIS\",12:\"CERRAR_PARENTESIS\",13:\"ABRIR_LLAVE\",15:\"CERRAR_LLAVE\",17:\"R_CONSOLE\",18:\"PUNTO\",19:\"R_LOG\",21:\"PUNTO_COMA\",22:\"R_SWITCH\",24:\"R_FOR\",26:\"IDENTIFICADOR\",28:\"R_LET\",30:\"R_OF\",31:\"R_IN\",32:\"R_WHILE\",33:\"R_DO\",34:\"R_FUNCTION\",36:\"DOS_PUNTOS\",39:\"R_RETURN\",42:\"IGUAL\",43:\"INCREMENTO\",44:\"DECREMENTO\",45:\"ASIGNACION_SUMA\",46:\"ASIGNACION_RESTA\",47:\"R_BREAK\",48:\"R_CONTINUE\",50:\"MENOS\",51:\"MAS\",52:\"MULTIPLICACION\",53:\"DIVISION\",54:\"POTENCIA\",55:\"MODULO\",56:\"MAYOR\",57:\"MENOR\",58:\"MAYOR_IGUAL\",59:\"MENOR_IGUAL\",60:\"IGUALDAD\",61:\"DISTINTO\",62:\"AND\",63:\"OR\",64:\"NOT\",65:\"ENTERO\",66:\"DECIMAL\",67:\"R_TRUE\",68:\"R_FALSE\",69:\"CADENA\",71:\"CADENA_CHARS\",73:\"ABRIR_CORCHETE\",75:\"CERRAR_CORCHETE\",76:\"OPERADOR_TERNARIO\",77:\"R_NULL\",78:\"R_NEW\",79:\"R_ARRAY\",81:\"COMA\",84:\"R_CONST\",85:\"R_NUMBER\",87:\"R_STRING\",88:\"R_BOOLEAN\",89:\"R_VOID\",93:\"R_TYPE\",96:\"R_ELSE\",98:\"R_CASE\",99:\"R_DEFAULT\",103:\"R_LENGTH\",104:\"R_CHARAT\",105:\"R_TOLOWERCASE\",106:\"R_TOUPPERCASE\",107:\"R_CONCAT\"},\nproductions_: [0,[3,2],[4,2],[4,1],[6,1],[6,1],[6,8],[6,7],[6,7],[6,11],[6,11],[6,11],[6,7],[6,9],[6,10],[6,5],[6,3],[6,4],[6,3],[6,3],[6,4],[6,4],[6,2],[6,2],[6,2],[14,2],[14,1],[49,1],[49,8],[49,7],[49,7],[49,11],[49,11],[49,11],[49,7],[49,9],[49,5],[49,3],[49,4],[49,3],[49,3],[49,4],[49,4],[49,2],[49,2],[49,2],[11,2],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,2],[11,3],[11,1],[11,1],[11,4],[11,1],[11,1],[11,2],[11,2],[11,1],[11,3],[11,1],[11,5],[11,1],[11,5],[38,2],[38,0],[80,3],[80,0],[7,6],[7,6],[7,2],[83,5],[83,0],[82,2],[82,0],[29,2],[37,2],[37,2],[37,2],[37,2],[37,1],[86,3],[86,0],[72,3],[72,2],[90,4],[91,2],[91,0],[74,2],[74,0],[92,3],[92,0],[8,7],[94,3],[95,2],[95,2],[95,1],[95,1],[95,0],[16,2],[16,0],[97,8],[97,3],[23,5],[23,3],[23,0],[25,6],[25,4],[27,1],[27,1],[27,2],[35,3],[35,0],[100,4],[100,0],[40,1],[40,0],[101,4],[101,0],[41,2],[102,4],[102,3],[102,2],[102,6],[102,5],[102,5],[102,6],[102,0],[70,6],[70,5],[70,5],[70,6],[70,2],[70,0],[20,2],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,2],[20,3],[20,3],[20,1],[20,1],[20,4],[20,1],[20,1],[20,2],[20,2],[20,1],[20,1],[20,5]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n\t\t// cuado se haya reconocido la entrada completa retornamos el AST\n\t\tvar temporal = salida;\n\t\tsalida=[];\n\t\tvar tempAr = ArrayDeErrores;\n\t\tArrayDeErrores = [];\n\t\treturn {AST: $$[$0-1], Errores: temporal, ErrArr:tempAr};\n\t\nbreak;\ncase 2: case 25:\n $$[$0-1].push($$[$0]); this.$ = $$[$0-1]; \nbreak;\ncase 3:\nthis.$=[$$[$0]];\nbreak;\ncase 4: case 5: case 27: case 85: case 87: case 98: case 106: case 107: case 120: case 121: case 122: case 127:\nthis.$=$$[$0];\nbreak;\ncase 6: case 28:\n this.$ = instruccionesAPI.nuevoIf($$[$0-5], $$[$0-2], $$[$0]);\nbreak;\ncase 7: case 29:\nthis.$ = instruccionesAPI.nuevoImprimir($$[$0-2]);\nbreak;\ncase 8: case 30:\nthis.$=instruccionesAPI.nuevoSwitch($$[$0-4], $$[$0-1]);\nbreak;\ncase 9: case 31:\n this.$ = instruccionesAPI.nuevoFor($$[$0-8], $$[$0-7], {id:$$[$0-5], paso:$$[$0-4]}, $$[$0-1]);\nbreak;\ncase 10: case 32:\nthis.$=instruccionesAPI.nuevoForOF($$[$0-7],$$[$0-6],  $$[$0-4], $$[$0-1]);\nbreak;\ncase 11: case 33:\nthis.$=instruccionesAPI.nuevoForIn($$[$0-7], $$[$0-6], $$[$0-4], $$[$0-1]);\nbreak;\ncase 12: case 34:\nthis.$=instruccionesAPI.nuevoWhile($$[$0-4], $$[$0-1]);\nbreak;\ncase 13: case 35:\nthis.$=instruccionesAPI.nuevoDoWhile($$[$0-6], $$[$0-2]);\nbreak;\ncase 14:\n  this.$ = instruccionesAPI.nuevaFuncion($$[$0-3], $$[$0-8], $$[$0-6], $$[$0-1], _$[$0-8].first_line, _$[$0-8].first_column); \nbreak;\ncase 15: case 36:\nthis.$ = instruccionesAPI.nuevaLlamada($$[$0-4], $$[$0-2], _$[$0-4].first_column, _$[$0-4].first_line);\nbreak;\ncase 16: case 37:\nthis.$=instruccionesAPI.nuevoReturn($$[$0-1], _$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 17: case 38: case 119:\nthis.$ = instruccionesAPI.nuevaAsignacion($$[$0-3], $$[$0-1], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 18:\nthis.$=instruccionesAPI.nuevoIncremento($$[$0-2], _$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 19:\nthis.$=instruccionesAPI.nuevoDecremento($$[$0-2], _$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 20: case 41:\nthis.$=instruccionesAPI.nuevoAsignacioSuma($$[$0-3], $$[$0-1], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 21: case 42:\nthis.$=instruccionesAPI.nuevoAsignacioResta($$[$0-3], $$[$0-1], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 22:\nthis.$=instruccionesAPI.nuevoAcceso($$[$0-1]);\nbreak;\ncase 23: case 44:\nthis.$=instruccionesAPI.nuevoBreak(_$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 24: case 45:\nthis.$=instruccionesAPI.nuevoContinue(_$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 26:\n this.$ = [$$[$0]]; \nbreak;\ncase 39:\nthis.$=instruccionesAPI.nuevoIncremento($$[$0-2], $$[$0-1], _$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 40:\nthis.$=instruccionesAPI.nuevoDecremento($$[$0-2], $$[$0-1], _$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 43:\nthis.$=instruccionesAPI.nuevoAcceso($$[$0-1], _$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 46: case 146:\n this.$ = instruccionesAPI.nuevaOperacionUnaria($$[$0], TIPO_OPERACION.NEGATIVO); \nbreak;\ncase 47: case 147:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.SUMA); \nbreak;\ncase 48: case 148:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.RESTA); \nbreak;\ncase 49: case 149:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MULTIPLICACION); \nbreak;\ncase 50: case 150:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.DIVISION); \nbreak;\ncase 51: case 151:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.POTENCIA); \nbreak;\ncase 52: case 152:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MODULO); \nbreak;\ncase 53: case 153:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MAYOR); \nbreak;\ncase 54: case 154:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MENOR); \nbreak;\ncase 55: case 155:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MAYOR_IGUAL); \nbreak;\ncase 56: case 156:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MENOR_IGUAL); \nbreak;\ncase 57: case 157:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.IGUAL_IGUAL); \nbreak;\ncase 58: case 158:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.DISTINTO); \nbreak;\ncase 59: case 159:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.AND); \nbreak;\ncase 60: case 160:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.OR); \nbreak;\ncase 61: case 161:\nthis.$ =  instruccionesAPI.nuevaOperacionUnaria($$[$0], TIPO_OPERACION.NOT);\nbreak;\ncase 62: case 163:\n this.$ = $$[$0-1]; \nbreak;\ncase 63: case 164:\n this.$ = instruccionesAPI.nuevoValor(Number($$[$0]), TIPO_VALOR.NUMERO); \nbreak;\ncase 64: case 165:\n this.$ = instruccionesAPI.nuevoValor(Number($$[$0]), TIPO_VALOR.DECIMAL); \nbreak;\ncase 65: case 166:\n this.$ = instruccionesAPI.nuevaLlamada($$[$0-3], $$[$0-1], _$[$0-3].first_column, _$[$0-3].first_line); \nbreak;\ncase 66: case 167:\n this.$ = instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.TRUE); \nbreak;\ncase 67: case 168:\n this.$ = instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.FALSE); \nbreak;\ncase 68: case 169:\n this.$ = instruccionesAPI.nuevoStr($$[$0-1],$$[$0], TIPO_VALOR.CADENA); \nbreak;\ncase 69: case 170:\n this.$ = instruccionesAPI.nuevoStr($$[$0-1], $$[$0], TIPO_VALOR.CADENA_CHARS); \nbreak;\ncase 70:\n this.$ = instruccionesAPI.nuevoObjeto($$[$0], _$[$0].first_column, _$[$0].first_line); \nbreak;\ncase 71:\n this.$ = instruccionesAPI.nuevoArray($$[$0-1], _$[$0-1].first_column, _$[$0-1].first_line); \nbreak;\ncase 72: case 171:\nthis.$=instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.IDENTIFICADOR);\nbreak;\ncase 73: case 173:\nthis.$=instruccionesAPI.nuevoOperadorTernario($$[$0-4], $$[$0-2], $$[$0]);\nbreak;\ncase 74: case 172:\nthis.$ = instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.NULL);\nbreak;\ncase 75:\nthis.$=instruccionesAPI.nuevoNewArray($$[$0-1]);\nbreak;\ncase 76:\nthis.$ = instruccionesAPI.nuevoArgumento($$[$0-1], $$[$0], _$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 77:\nthis.$ = \"Epsilon\";\nbreak;\ncase 78:\nthis.$ = instruccionesAPI.nuevoArgumento($$[$0-1], $$[$0] , _$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 79:\nthis.$ =  \"Epsilon\";\nbreak;\ncase 80: case 81:\nthis.$ = instruccionesAPI.nuevaDeclaracion($$[$0-5], $$[$0-4], $$[$0-3], $$[$0-2], $$[$0-1], _$[$0-4].first_line, _$[$0-4].first_column);\nbreak;\ncase 82:\n console.error('Este es un error sintáctico: ' + yytext + ', en la linea: ' + this._$.first_line + ', en la columna: ' + this._$.first_column);\n\t\t\t\t\t\t  salida.push('Este es un error sintáctico: ' + yytext + ', en la linea: ' + this._$.first_line + ', en la columna: ' + this._$.first_column);\n\t\t\t\t\t\t  ArrayDeErrores.push({tipo:\"sintáctico\", linea:this._$.first_line, columna:this._$.first_column, descripcion: yytext});\nbreak;\ncase 83:\nthis.$=instruccionesAPI.nuevoID($$[$0-3],$$[$0-2], $$[$0-1],$$[$0], _$[$0-3].first_line, _$[$0-3].first_column);\nbreak;\ncase 84: case 96: case 99: case 101: case 103: case 108: case 109: case 110: case 117: case 124: case 126: case 128: case 139: case 145:\nthis.$=\"Epsilon\";\nbreak;\ncase 86:\nthis.$=\"undefined\";\nbreak;\ncase 88: case 89: case 90:\n this.$=instruccionesAPI.nuevoTipo($$[$0-1],$$[$0]); \nbreak;\ncase 91:\n this.$ = instruccionesAPI.nuevoTipo($$[$0-1], $$[$0]);\nbreak;\ncase 92:\nthis.$=instruccionesAPI.nuevoTipo($$[$0], false);\nbreak;\ncase 93:\nthis.$=instruccionesAPI.nuevaDimension($$[$0]);\nbreak;\ncase 94:\nthis.$=false;\nbreak;\ncase 95:\nthis.$=$$[$0-1];\nbreak;\ncase 97:\nthis.$=instruccionesAPI.nuevoObjAtributo($$[$0-3], $$[$0-1], $$[$0]);\nbreak;\ncase 100: case 102:\nthis.$=instruccionesAPI.nuevoDato($$[$0-1], $$[$0]);\nbreak;\ncase 104:\nthis.$=instruccionesAPI.nuevoType($$[$0-5],$$[$0-2], _$[$0-5].first_line, _$[$0-5].first_column);\nbreak;\ncase 105:\nthis.$=instruccionesAPI.nuevoTypeAtributo($$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 111:\n this.$ = $$[$0];\nbreak;\ncase 112:\n this.$ = \"Epsilon\"; \nbreak;\ncase 113:\nthis.$ = instruccionesAPI.nuevoElseIf($$[$0-5], $$[$0-2], $$[$0]);\nbreak;\ncase 114:\nthis.$ =  instruccionesAPI.nuevoElse($$[$0-1]);\nbreak;\ncase 115:\nthis.$=instruccionesAPI.nuevoCase($$[$0-3], $$[$0-1], $$[$0]);\nbreak;\ncase 116:\nthis.$=instruccionesAPI.nuevoDefault($$[$0]);\nbreak;\ncase 118:\nthis.$ = instruccionesAPI.nuevaDeclaracion($$[$0-5], $$[$0-4], $$[$0-3], $$[$0-1], \"Epsilon\", _$[$0-4].first_line, _$[$0-4].first_column);\nbreak;\ncase 123: case 125:\nthis.$=instruccionesAPI.nuevoParametro($$[$0-1], $$[$0-2], $$[$0]);\nbreak;\ncase 129:\nthis.$=instruccionesAPI.nuevoArrayIndex($$[$0-2], $$[$0]);\nbreak;\ncase 130:\nthis.$=\"false\";\nbreak;\ncase 131:\nthis.$=instruccionesAPI.nuevaReferencia($$[$0-1], $$[$0], _$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 132:\nthis.$=instruccionesAPI.nuevoAccPosicion($$[$0-2], $$[$0], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 133:\nthis.$=instruccionesAPI.nuevoAccAtributo($$[$0-1], $$[$0], _$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 134: case 144:\nthis.$=instruccionesAPI.nuevoLength(_$[$0].first_column, _$[$0].first_line);\nbreak;\ncase 135: case 140:\nthis.$=instruccionesAPI.nuevoCharAt($$[$0-2], $$[$0], _$[$0-4].first_column, _$[$0-4].first_line);\nbreak;\ncase 136: case 141:\nthis.$=instruccionesAPI.nuevoToLowerCase($$[$0], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 137: case 142:\nthis.$=instruccionesAPI.nuevoToUpperCase($$[$0], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 138: case 143:\nthis.$=instruccionesAPI.nuevoConcat($$[$0-2],$$[$0], _$[$0-4].first_column, _$[$0-4].first_line);\nbreak;\ncase 162:\nthis.$=instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.CONCATENACION);\nbreak;\n}\n},\ntable: [{2:$V0,3:1,4:2,6:3,7:4,8:5,9:$V1,17:$V2,22:$V3,24:$V4,26:$V5,28:$V6,32:$V7,33:$V8,34:$V9,39:$Va,41:15,47:$Vb,48:$Vc,84:$Vd,93:$Ve},{1:[3]},{2:$V0,5:[1,22],6:23,7:4,8:5,9:$V1,17:$V2,22:$V3,24:$V4,26:$V5,28:$V6,32:$V7,33:$V8,34:$V9,39:$Va,41:15,47:$Vb,48:$Vc,84:$Vd,93:$Ve},o($Vf,[2,3]),o($Vf,[2,4]),o($Vf,[2,5]),{10:[1,24]},{18:[1,25]},{10:[1,26]},{10:[1,27]},{10:[1,28]},{13:[1,29]},{26:[1,30]},o($Vg,$Vh,{102:32,10:[1,31],18:$Vi,73:$Vj}),{10:$Vk,11:36,13:$Vl,21:$Vm,26:$Vn,40:35,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{21:[1,58],42:[1,53],43:[1,54],44:[1,55],45:[1,56],46:[1,57]},{21:[1,59]},{21:[1,60]},{26:[1,61]},{26:[1,62]},{21:[1,63]},{26:[1,64]},{1:[2,1]},o($Vf,[2,2]),{10:$Vk,11:65,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{19:[1,66]},{10:$Vk,11:67,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{25:68,26:$Vz,28:[1,69],41:70},{10:$Vk,11:72,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{2:$V0,7:75,9:$VA,14:73,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{10:[1,87]},{10:$Vk,11:89,12:$VK,13:$Vl,26:$Vn,38:88,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($VL,[2,131]),{10:$Vk,11:90,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{26:[1,91],103:[1,92],104:[1,93],105:[1,94],106:[1,95],107:[1,96]},{21:[1,97]},{21:[2,127],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{10:$Vk,11:113,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:114,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:115,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($V$,[2,63]),o($V$,[2,64]),o($V$,$Vh,{102:32,10:[1,116],18:$Vi,73:$Vj}),o($V$,[2,66]),o($V$,[2,67]),o($V$,$V01,{70:117,18:$V11}),o($V$,$V01,{70:119,18:$V11}),o($V$,[2,70]),{10:$Vk,11:121,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,74:120,75:[2,101],77:$Vx,78:$Vy},o($V$,[2,72]),o($V$,[2,74]),{79:[1,122]},{15:[1,124],26:$V21,90:123},{10:$Vk,11:126,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{21:[1,127]},{21:[1,128]},{10:$Vk,11:129,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:130,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($Vf,[2,22]),o($Vf,[2,23]),o($Vf,[2,24]),{29:131,36:$V31},{29:133,36:$V31},o($V41,[2,82]),{42:[1,134]},{12:[1,135],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{10:[1,136]},{12:[1,137],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{10:$Vk,11:138,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{26:[1,139]},{42:[1,140]},{18:$Vi,42:$Vh,73:$Vj,102:32},{12:[1,141],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{2:$V0,7:75,9:$VA,15:[1,142],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},o($V51,[2,26]),o($V51,[2,27]),{10:[1,144]},{18:[1,145]},{10:[1,146]},{10:[1,147]},{10:[1,148]},{13:[1,149]},o($Vg,$Vh,{102:32,10:[1,150],18:$Vi,73:$Vj}),{10:$Vk,11:36,13:$Vl,21:$Vm,26:$Vn,40:151,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{21:[1,157],42:[1,152],43:[1,153],44:[1,154],45:[1,155],46:[1,156]},{21:[1,158]},{21:[1,159]},{12:[2,124],26:[1,161],35:160},{12:[1,162]},{12:$V61,50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_,80:163,81:$V71},{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,75:[1,165],76:$V_},o($VL,$Vh,{102:166,18:$Vi,73:$Vj}),o($VL,[2,134]),{10:[1,167]},{10:[1,168]},{10:[1,169]},{10:[1,170]},o($Vf,[2,16]),{10:$Vk,11:171,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:172,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:173,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:174,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:175,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:176,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:177,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:178,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:179,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:180,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:181,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:182,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:183,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:184,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:185,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($V$,[2,46]),o($V$,[2,61]),{12:[1,186],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{10:$Vk,11:89,12:$VK,13:$Vl,26:$Vn,38:187,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($V$,[2,68]),{103:[1,192],104:[1,188],105:[1,189],106:[1,190],107:[1,191]},o($V$,[2,69]),{75:[1,193]},{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,75:$V81,76:$V_,81:$V91,92:194},{10:[1,196]},{15:[1,197]},o($V$,[2,96]),{36:[1,198]},{21:[1,199],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},o($Vf,[2,18]),o($Vf,[2,19]),{21:[1,200],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{21:[1,201],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},o($Va1,$Vb1,{82:202,42:$Vc1}),{26:$Vd1,37:204,85:$Ve1,87:$Vf1,88:$Vg1,89:$Vh1},o($Va1,$Vb1,{82:210,42:$Vc1}),{13:[1,211]},{13:[1,212]},{10:$Vi1,20:213,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{13:[1,226]},{21:[1,227],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{29:228,36:$V31},{10:$Vk,11:229,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{13:[1,230]},{32:[1,231]},o($V51,[2,25]),{10:$Vk,11:232,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{19:[1,233]},{10:$Vk,11:234,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{25:235,26:$Vz,28:[1,236],41:70},{10:$Vk,11:237,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{2:$V0,7:75,9:$VA,14:238,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{10:$Vk,11:89,12:$VK,13:$Vl,26:$Vn,38:239,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{21:[1,240]},{10:$Vk,11:241,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{21:[1,242]},{21:[1,243]},{10:$Vk,11:244,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:245,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($V51,[2,43]),o($V51,[2,44]),o($V51,[2,45]),{12:[1,246]},{29:247,36:$V31},{21:[1,248]},{12:[2,76]},{10:$Vk,11:249,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($VL,$Vh,{102:250,18:$Vi,73:$Vj}),o($VL,[2,133]),{10:$Vk,11:251,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{12:[1,252]},{12:[1,253]},{10:$Vk,11:254,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($Vt1,[2,47],{52:$VO,53:$VP,54:$VQ,55:$VR}),o($Vt1,[2,48],{52:$VO,53:$VP,54:$VQ,55:$VR}),o($Vu1,[2,49],{54:$VQ,55:$VR}),o($Vu1,[2,50],{54:$VQ,55:$VR}),o($V$,[2,51]),o($V$,[2,52]),o($Vv1,[2,53],{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR}),o($Vv1,[2,54],{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR}),o($Vv1,[2,55],{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR}),o($Vv1,[2,56],{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR}),o($Vw1,[2,57],{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV}),o($Vw1,[2,58],{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV}),o([12,15,21,36,62,63,75,76,81],[2,59],{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX}),o([12,15,21,36,63,75,76,81],[2,60],{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY}),{36:[1,255],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},o($V$,[2,62]),{12:[1,256]},{10:[1,257]},{10:[1,258]},{10:[1,259]},{10:[1,260]},o($VL,[2,144]),o($V$,[2,71]),{75:[2,100]},{10:$Vk,11:261,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:262,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($V$,[2,95]),{10:$Vk,11:263,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($Vf,[2,17]),o($Vf,[2,20]),o($Vf,[2,21]),{21:$Vx1,81:$Vy1,83:264},{10:$Vk,11:266,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o([12,15,21,30,31,42,81],[2,87]),o($Vz1,$VA1,{86:267,73:$VB1}),o($Vz1,$VA1,{86:269,73:$VB1}),o($Vz1,$VA1,{86:270,73:$VB1}),o($Vz1,$VA1,{86:271,73:$VB1}),o($Vz1,[2,92]),{21:$Vx1,81:$Vy1,83:272},{26:$VC1,94:273},{2:$V0,7:75,9:$VA,14:275,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{12:[1,276],50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1,56:$VJ1,57:$VK1,58:$VL1,59:$VM1,60:$VN1,61:$VO1,62:$VP1,63:$VQ1,76:$VR1,81:$VS1},{10:$Vi1,20:293,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:294,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:295,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},o($VT1,[2,164]),o($VT1,[2,165]),o($VT1,$Vh,{102:32,10:[1,296],18:$Vi,73:$Vj}),o($VT1,[2,167]),o($VT1,[2,168]),o($VT1,$V01,{70:297,18:$V11}),o($VT1,$V01,{70:298,18:$V11}),o($VT1,[2,171]),o($VT1,[2,172]),{15:$VU1,23:299,98:$VV1,99:$VW1},{26:[1,302]},{30:[1,303],31:[1,304],42:$VX1},{21:[1,306],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{2:$V0,7:75,9:$VA,14:307,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{10:[1,308]},{12:[1,309],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{10:[1,310]},{12:[1,311],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{10:$Vk,11:312,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{26:[1,313]},{12:[1,314],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{2:$V0,7:75,9:$VA,15:[1,315],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{12:[1,316]},o($V51,[2,37]),{21:[1,317],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},o($V51,[2,39]),o($V51,[2,40]),{21:[1,318],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{21:[1,319],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{36:[1,320]},{12:$VY1,81:$VZ1,100:321},o($Vf,[2,15]),{12:$V61,50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_,80:323,81:$V71},o($VL,[2,132]),{12:[1,324],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},o($VL,$V01,{70:325,18:$V11}),o($VL,$V01,{70:326,18:$V11}),{12:[1,327],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{10:$Vk,11:328,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($V$,[2,65]),{10:$Vk,11:329,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{12:[1,330]},{12:[1,331]},{10:$Vk,11:332,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,75:$V81,76:$V_,81:$V91,92:333},{12:[1,334],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{15:[2,99],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_,81:[1,336],91:335},{21:[1,337]},{26:[1,338]},o($Va1,[2,85],{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_}),o($Vz1,[2,88]),{75:[1,339]},o($Vz1,[2,89]),o($Vz1,[2,90]),o($Vz1,[2,91]),{21:[1,340]},{15:[1,341]},{29:342,36:$V31},{2:$V0,7:75,9:$VA,15:[1,343],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{21:[1,344]},{10:$Vi1,20:345,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:346,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:347,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:348,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:349,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:350,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:351,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:352,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:353,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:354,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:355,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:356,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:357,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:358,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:359,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{10:$Vi1,20:360,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},o($VT1,[2,146]),o($VT1,[2,161]),{12:[1,361],50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1,56:$VJ1,57:$VK1,58:$VL1,59:$VM1,60:$VN1,61:$VO1,62:$VP1,63:$VQ1,76:$VR1,81:$VS1},{10:$Vk,11:89,12:$VK,13:$Vl,26:$Vn,38:362,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($VT1,[2,169]),o($VT1,[2,170]),{15:[1,363]},{10:$Vk,11:364,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{36:[1,365]},{27:366,42:$V_1,43:$V$1,44:$V02},{10:$Vk,11:370,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:371,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:372,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},o($V12,[2,119]),{2:$V0,7:75,9:$VA,15:[1,373],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{10:$Vk,11:374,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{13:[1,375]},{10:$Vi1,20:376,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},{13:[1,377]},{21:[1,378],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{29:379,36:$V31},{13:[1,380]},{32:[1,381]},{21:[1,382]},o($V51,[2,38]),o($V51,[2,41]),o($V51,[2,42]),{26:$Vd1,37:383,85:$Ve1,87:$Vf1,88:$Vg1,89:$Vh1},{12:[2,123]},{26:[1,384]},{12:[2,78]},o($VL,$V01,{70:385,18:$V11}),o($VL,[2,136]),o($VL,[2,137]),o($VL,$V01,{70:386,18:$V11}),o([12,15,21,36,75,76,81],[2,73],{50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ}),{12:[1,387],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},o($VL,$V01,{70:388,18:$V11}),o($VL,$V01,{70:389,18:$V11}),{12:[1,390],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{75:[2,102]},o($V$,[2,75]),{15:[2,97]},{26:$V21,90:391},o($V41,[2,80]),{29:392,36:$V31},o($Vz1,$VA1,{86:393,73:$VB1}),o($V41,[2,81]),{21:[1,394]},{15:[2,110],21:[1,397],81:[1,396],95:395},o($Vf,$V22,{16:398,96:$V32}),o($Vf,[2,7]),o($V42,[2,147],{52:$VF1,53:$VG1,54:$VH1,55:$VI1}),o($V42,[2,148],{52:$VF1,53:$VG1,54:$VH1,55:$VI1}),o($V52,[2,149],{54:$VH1,55:$VI1}),o($V52,[2,150],{54:$VH1,55:$VI1}),o($VT1,[2,151]),o($VT1,[2,152]),o($V62,[2,153],{50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1}),o($V62,[2,154],{50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1}),o($V62,[2,155],{50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1}),o($V62,[2,156],{50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1}),o($V72,[2,157],{50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1,56:$VJ1,57:$VK1,58:$VL1,59:$VM1}),o($V72,[2,158],{50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1,56:$VJ1,57:$VK1,58:$VL1,59:$VM1}),o([12,36,62,63,76,81],[2,159],{50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1,56:$VJ1,57:$VK1,58:$VL1,59:$VM1,60:$VN1,61:$VO1}),o([12,36,63,76,81],[2,160],{50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1,56:$VJ1,57:$VK1,58:$VL1,59:$VM1,60:$VN1,61:$VO1,62:$VP1}),o([12,36,81],[2,162],{50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1,56:$VJ1,57:$VK1,58:$VL1,59:$VM1,60:$VN1,61:$VO1,62:$VP1,63:$VQ1,76:$VR1}),{36:[1,400],50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1,56:$VJ1,57:$VK1,58:$VL1,59:$VM1,60:$VN1,61:$VO1,62:$VP1,63:$VQ1,76:$VR1,81:$VS1},o($VT1,[2,163]),{12:[1,401]},o($Vf,[2,8]),{36:[1,402],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{2:$V0,7:75,9:$VA,14:403,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{12:[1,404]},{12:[2,120]},{12:[2,121]},{10:$Vk,11:405,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{12:[1,406],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{12:[1,407],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{21:[1,408],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},o($Vf,[2,12]),{12:[1,409],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{2:$V0,7:75,9:$VA,14:410,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{12:[1,411],50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1,56:$VJ1,57:$VK1,58:$VL1,59:$VM1,60:$VN1,61:$VO1,62:$VP1,63:$VQ1,76:$VR1,81:$VS1},{15:$VU1,23:412,98:$VV1,99:$VW1},{26:[1,413]},{30:[1,414],31:[1,415],42:$VX1},{2:$V0,7:75,9:$VA,14:416,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{10:[1,417]},o($V51,[2,36]),{13:[1,418]},{29:419,36:$V31},o($VL,[2,135]),o($VL,[2,138]),o($VL,$V01,{70:420,18:$V11}),o($VL,[2,141]),o($VL,[2,142]),o($VL,$V01,{70:421,18:$V11}),{15:[2,98]},o($Va1,$Vb1,{82:422,42:$Vc1}),o($Vz1,[2,93]),o($Vf,[2,104]),{15:[2,105]},{15:[2,108],26:$VC1,94:423},{15:[2,109],26:$VC1,94:424},o($Vf,[2,6]),{9:[1,426],13:[1,427],97:425},{10:$Vi1,20:428,26:$Vj1,41:224,50:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1,71:$Vr1,77:$Vs1},o($VT1,[2,166]),{2:$V0,7:75,9:$VA,14:429,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{2:$V0,7:75,9:$VA,15:[2,116],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{13:[1,430]},{12:[2,122],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{13:[1,431]},{13:[1,432]},o($V12,[2,118]),{21:[1,433]},{2:$V0,7:75,9:$VA,15:[1,434],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{21:[1,435]},{15:[1,436]},{27:437,42:$V_1,43:$V$1,44:$V02},{10:$Vk,11:438,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{10:$Vk,11:439,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{2:$V0,7:75,9:$VA,15:[1,440],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{10:$Vk,11:441,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{2:$V0,4:442,6:3,7:4,8:5,9:$V1,17:$V2,22:$V3,24:$V4,26:$V5,28:$V6,32:$V7,33:$V8,34:$V9,39:$Va,41:15,47:$Vb,48:$Vc,84:$Vd,93:$Ve},{12:$VY1,81:$VZ1,100:443},o($VL,[2,140]),o($VL,[2,143]),{21:$Vx1,81:$Vy1,83:444},{15:[2,106]},{15:[2,107]},o($V41,[2,111]),{10:[1,445]},{2:$V0,7:75,9:$VA,14:446,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},o([12,36,76,81],[2,173],{50:$VD1,51:$VE1,52:$VF1,53:$VG1,54:$VH1,55:$VI1,56:$VJ1,57:$VK1,58:$VL1,59:$VM1,60:$VN1,61:$VO1,62:$VP1,63:$VQ1}),{2:$V0,7:75,9:$VA,15:$VU1,17:$VB,22:$VC,23:447,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd,98:$VV1,99:$VW1},{2:$V0,7:75,9:$VA,14:448,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{2:$V0,7:75,9:$VA,14:449,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{2:$V0,7:75,9:$VA,14:450,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},o($Vf,[2,13]),o($V51,$V22,{16:451,96:$V32}),o($V51,[2,29]),o($V51,[2,30]),{12:[1,452]},{12:[1,453],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{12:[1,454],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},o($V51,[2,34]),{12:[1,455],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},{2:$V0,6:23,7:4,8:5,9:$V1,15:[1,456],17:$V2,22:$V3,24:$V4,26:$V5,28:$V6,32:$V7,33:$V8,34:$V9,39:$Va,41:15,47:$Vb,48:$Vc,84:$Vd,93:$Ve},{12:[2,125]},{21:[2,83]},{10:$Vk,11:457,13:$Vl,26:$Vn,41:49,50:$Vo,64:$Vp,65:$Vq,66:$Vr,67:$Vs,68:$Vt,69:$Vu,71:$Vv,72:47,73:$Vw,77:$Vx,78:$Vy},{2:$V0,7:75,9:$VA,15:[1,458],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{15:[2,115]},{2:$V0,7:75,9:$VA,15:[1,459],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{2:$V0,7:75,9:$VA,15:[1,460],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{2:$V0,7:75,9:$VA,15:[1,461],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},o($V51,[2,28]),{13:[1,462]},{13:[1,463]},{13:[1,464]},{21:[1,465]},o($Vf,[2,14]),{12:[1,466],50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ,55:$VR,56:$VS,57:$VT,58:$VU,59:$VV,60:$VW,61:$VX,62:$VY,63:$VZ,76:$V_},o($V41,[2,114]),o($Vf,[2,9]),o($Vf,[2,10]),o($Vf,[2,11]),{2:$V0,7:75,9:$VA,14:467,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{2:$V0,7:75,9:$VA,14:468,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},{2:$V0,7:75,9:$VA,14:469,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},o($V51,[2,35]),{13:[1,470]},{2:$V0,7:75,9:$VA,15:[1,471],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{2:$V0,7:75,9:$VA,15:[1,472],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{2:$V0,7:75,9:$VA,15:[1,473],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},{2:$V0,7:75,9:$VA,14:474,17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:74,84:$Vd},o($V51,[2,31]),o($V51,[2,32]),o($V51,[2,33]),{2:$V0,7:75,9:$VA,15:[1,475],17:$VB,22:$VC,24:$VD,26:$VE,28:$V6,32:$VF,33:$VG,39:$VH,41:84,47:$VI,48:$VJ,49:143,84:$Vd},o($V41,$V22,{16:476,96:$V32}),o($V41,[2,113])],\ndefaultActions: {22:[2,1],163:[2,76],194:[2,100],321:[2,123],323:[2,78],333:[2,102],335:[2,97],367:[2,120],368:[2,121],391:[2,98],395:[2,105],423:[2,106],424:[2,107],443:[2,125],444:[2,83],447:[2,115]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\n\tconst TIPO_OPERACION\t= require('./instrucciones').TIPO_OPERACION;\n\tconst TIPO_VALOR \t\t= require('./instrucciones').TIPO_VALOR;\n\tconst instruccionesAPI\t= require('./instrucciones').instruccionesAPI;\n\tconst TIPO_DATO = require('./instrucciones').TIPO_DATO;\n\tconst TS = require('./instrucciones').TS;\n\tvar salida=[];\n\tvar ArrayDeErrores = [];\n\tvar currentType=\"\";\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 85;\nbreak;\ncase 1:return 88;\nbreak;\ncase 2:return 87;\nbreak;\ncase 3:return 28;\nbreak;\ncase 4:return 84;\nbreak;\ncase 5:return 17;\nbreak;\ncase 6:return 19;\nbreak;\ncase 7:return 68;\nbreak;\ncase 8:return 67;\nbreak;\ncase 9:return 9;\nbreak;\ncase 10:return 96;\nbreak;\ncase 11:return 22;\nbreak;\ncase 12:return 98;\nbreak;\ncase 13:return 99;\nbreak;\ncase 14:return 47;\nbreak;\ncase 15:return 48;\nbreak;\ncase 16:return 32;\nbreak;\ncase 17:return 33;\nbreak;\ncase 18:return 24;\nbreak;\ncase 19:return 89;\nbreak;\ncase 20:return 39;\nbreak;\ncase 21:return 'R_PUSH';\nbreak;\ncase 22:return 'R_POP';\nbreak;\ncase 23:return 103;\nbreak;\ncase 24:return 93;\nbreak;\ncase 25:return 30;\nbreak;\ncase 26:return 31;\nbreak;\ncase 27:return 34 ;\nbreak;\ncase 28:return 77;\nbreak;\ncase 29:return 'R_GRAFICAR_TS';\nbreak;\ncase 30:return 104;\nbreak;\ncase 31:return 105;\nbreak;\ncase 32:return 106;\nbreak;\ncase 33:return 107;\nbreak;\ncase 34:return 78;\nbreak;\ncase 35:return 79;\nbreak;\ncase 36: yy_.yytext = yy_.yytext.substr(1, yy_.yyleng-2); return 69;\nbreak;\ncase 37: yy_.yytext = yy_.yytext.substr(1, yy_.yyleng-2); return 71;\nbreak;\ncase 38: yy_.yytext = yy_.yytext.substr(1, yy_.yyleng-2); return 'CADENA_EJECUTABLE';\nbreak;\ncase 39:return 66;\nbreak;\ncase 40:return 65;\nbreak;\ncase 41:return 26;\nbreak;\ncase 42:\nbreak;\ncase 43:// comentario simple línea\nbreak;\ncase 44:// comentario multiple líneas\nbreak;\ncase 45:return 43;\nbreak;\ncase 46:return 44;\nbreak;\ncase 47:return 45;\nbreak;\ncase 48:return 51;\nbreak;\ncase 49:return 46;\nbreak;\ncase 50:return 50;\nbreak;\ncase 51:return 54;\nbreak;\ncase 52:return 52;\nbreak;\ncase 53:return 53;\nbreak;\ncase 54:return 55;\nbreak;\ncase 55:return 60;\nbreak;\ncase 56:return 61;\nbreak;\ncase 57:return 42;\nbreak;\ncase 58:return 58;\nbreak;\ncase 59:return 56;\nbreak;\ncase 60:return 59;\nbreak;\ncase 61:return 57;\nbreak;\ncase 62:return 62;\nbreak;\ncase 63:return 63;\nbreak;\ncase 64:return 64;\nbreak;\ncase 65:return 13;\nbreak;\ncase 66:return 15;\nbreak;\ncase 67:return 10;\nbreak;\ncase 68:return 12;\nbreak;\ncase 69:return 73;\nbreak;\ncase 70:return 75;\nbreak;\ncase 71:return 21;\nbreak;\ncase 72:return 36;\nbreak;\ncase 73:return 18;\nbreak;\ncase 74:return 81;\nbreak;\ncase 75:return 76;\nbreak;\ncase 76:return 5;\nbreak;\ncase 77: console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\n\t\t\t\t\t\t salida.push('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column); \n\t\t\t\t\t\t ArrayDeErrores.push({tipo:\"léxico\", linea:yy_.yylloc.first_line, columna:yy_.yylloc.first_column, descripcion: yy_.yytext});\nbreak;\n}\n},\nrules: [/^(?:number\\b)/i,/^(?:boolean\\b)/i,/^(?:string\\b)/i,/^(?:let\\b)/i,/^(?:const\\b)/i,/^(?:console\\b)/i,/^(?:log\\b)/i,/^(?:false\\b)/i,/^(?:true\\b)/i,/^(?:if\\b)/i,/^(?:else\\b)/i,/^(?:switch\\b)/i,/^(?:case\\b)/i,/^(?:default\\b)/i,/^(?:break\\b)/i,/^(?:continue\\b)/i,/^(?:while\\b)/i,/^(?:do\\b)/i,/^(?:for\\b)/i,/^(?:void\\b)/i,/^(?:return\\b)/i,/^(?:push\\b)/i,/^(?:pop\\b)/i,/^(?:length\\b)/i,/^(?:type\\b)/i,/^(?:of\\b)/i,/^(?:in\\b)/i,/^(?:function\\b)/i,/^(?:null\\b)/i,/^(?:graficar_ts\\b)/i,/^(?:CharAt\\b)/i,/^(?:toLowerCase\\b)/i,/^(?:toUpperCase\\b)/i,/^(?:Concat\\b)/i,/^(?:new\\b)/i,/^(?:Array\\b)/i,/^(?:\"(\\\\\"|\\\\n|\\\\t|\\\\r|\\\\\\\\|[^\\\"])*\")/i,/^(?:'(\\\\'|\\\\n|\\\\t|\\\\r|\\\\\\\\|[^\\'])*')/i,/^(?:`(\\\\\"|\\\\n|\\\\t|\\\\r|\\\\\\\\|[^\\`])*`)/i,/^(?:[0-9]+\\.([0-9]+)?\\b)/i,/^(?:[0-9]+\\b)/i,/^(?:([a-zA-Z])[a-zA-Z0-9_]*)/i,/^(?:\\s+)/i,/^(?:\\/\\/.*)/i,/^(?:[\\/][*][^*]*[*]+([^\\/*][^*]*[*]+)*[\\/])/i,/^(?:\\+\\+)/i,/^(?:--)/i,/^(?:\\+=)/i,/^(?:\\+)/i,/^(?:-=)/i,/^(?:-)/i,/^(?:\\*\\*)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:==)/i,/^(?:!=)/i,/^(?:=)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:<)/i,/^(?:&&)/i,/^(?:\\|\\|)/i,/^(?:!)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:;)/i,/^(?::)/i,/^(?:\\.)/i,/^(?:,)/i,/^(?:\\?)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = gramatica;\nexports.Parser = gramatica.Parser;\nexports.parse = function () { return gramatica.parse.apply(gramatica, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"],"sourceRoot":""}