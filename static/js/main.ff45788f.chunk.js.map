{"version":3,"sources":["backend/instrucciones.js","App.js","backend/desanidar.js","backend/traductor.js","backend/Menu.js","index.js","backend/gramatica.js"],"names":["TIPO_VALOR","NUMERO","DECIMAL","IDENTIFICADOR","CADENA","CARACTER","TRUE","FALSE","OBJETO","ANONYMOUS_FUNCTION","CADENA_EJECUTABLE","CADENA_CHARS","NULL","TIPO_OPERACION","SUMA","RESTA","MULTIPLICACION","DIVISION","NEGATIVO","POTENCIA","MODULO","MAYOR","MAYOR_IGUAL","MENOR","MENOR_IGUAL","CONCATENACION","IGUAL_IGUAL","DISTINTO","CONDICION","AND","OR","NOT","SENTENCIAS","CLASE","ASIGNACION","DECLARACION","IMPORT","IF","ELSE_IF","ELSE","SWITCH","WHILE","DO_WHILE","FOR","FUNCION","MAIN","RETURN","CONTINUE","BREAK","IMPRIMIR","COMENTARIO","PARAMETRO","VARIABLE","METODO","CASE","DEFAULT","LLAMADA","INCREMENTO","DECREMENTO","FOR_OF","FOR_IN","ACCESO_POSICION","TYPE_DECLARATION","PUSH","POP","LENGTH","ACCESO","GRAFICAR_TS","ASIGNACION_SUMA","ASIGNACION_RESTA","CHAR_AT","TO_LOWER_CASE","TO_UPPER_CASE","CONCAT","TIPO_DATO","NUMBER","BOOLEAN","STRING","VOID","ARRAY","TYPE","OPERADOR_TERNARIO","NEW_ARRAY","TIPO_ACCESO","ATRIBUTO","POSICION","TIPO_VARIABLE","LET","CONST","nuevaOperacion","operandoIzq","OperandoDer","tipo","operandoDer","Data_Type","_TIPO_OPERACION","_TIPO_VARIABLE","_SENTENCIAS","_TIPO_VALOR","_instruccionesAPI","nuevaOperacionBinaria","Izq","Der","nuevaOperacionUnaria","izq","undefined","nuevoValor","valor","nuevaDeclaracion","variable_type","id","data_type","next_declaration","fila","columna","sentencia","isArray","expresion","nuevoID","nuevoObjeto","atributos","nuevoObjAtributo","next","nuevoTypeAtributo","nuevaDimension","next_dimension","dimension","nuevoTipo","nuevoArray","nuevoDato","dato","next_data","nuevoType","nuevoOperadorTernario","logica","result1","result2","nuevaAsignacion","nuevoImprimir","nuevoIf","sentencias","elseT","accion","else","nuevoElseIf","nuevoElse","nuevoSwitch","cases","nuevoCase","next_case","nuevoDefault","nuevoFor","inicial","final","paso","nuevoForOF","variable","conjunto","nuevoForIn","nuevoWhile","nuevoDoWhile","nuevaFuncion","parametros","nuevaListaid","siguiente","nuevaLlamada","nuevoArgumento","nuevoParametro","opcional","nuevoReturn","nuevoArrayIndex","index","next_index","nuevoAccesoAPosicion","nuevoDecremento","nuevoIncremento","nuevoPush","nuevoPop","nuevoLength","nuevaReferencia","acc","nuevoAccPosicion","next_acc","acc_type","nuevoAccAtributo","atributo","_TIPO_ACCESO","nuevoContinue","nuevoBreak","nuevoAcceso","nuevoGraficarTS","nuevoAsignacioSuma","nuevoAsignacioResta","nuevoCharAt","nuevoToLowerCase","nuevoToUpperCase","nuevoConcat","nuevoNewArray","_TIPO_DATO","_TS","simbolos","printedTable","this","_simbolos","_printedTable","var_type","ambito","direcciones","nuevoSimbolo","si","crearSimbolo","push","crearFuncion","crearType","simbolo","filter","toLowerCase","split","erEj","descripcion","linea","amb","funcion","type","newID","oldID","React","Component","Desanidar","salida","consola","traduccion","tablaDeSalida","tablaDeSimbolos","output","erTr","ErrArr","value","tsGlobal","TS","scanForFunctions","instrucciones","instruccion","agregarFuncion","updateFuncionID","AST","agregarType","scanForTypes","procesarBloque","setValue","Errores","error","setSalida","console","log","tsTr","e","procesarDeclaracion","procesarAsigacion","procesarAsigacionSuma","procesarAsigacionResta","procesarTypeDeclaration","procesarIf","slice","procesarImpresion","procesarSwitch","procesarFor","procesarForIn","procecsarForOf","procesarWhile","procesarDoWhile","procesarLLamada","procesarReturn","procesarIncremento","procesarDecremento","procesarIdentificador","procesarFuncion","Variable_Type","temp","agregar","temporal","procesarExpresionNumerica","objeto","text","procesarObjeto","arreglo","datos","procesarElementosDeArray","procesarArreglo","operacion","procesarOperadorTernario","acceso","procesarAccesoAPosicion","llamada","changeOldIDCall","argumentos","procesarArgumentos","declaracion","identificador","funciones","procesarTipo","procesarParametros","Traucir","tablero","contadores","temporales","etiquetas","arreglos","uno","dos","tres","cuatro","cinco","pilas","stack","heap","functionDeclaration","length","procesarAtributos","existe","dataType","procesarDataType","mainContent","importFunctions","traducirFunciones","JSON","parse","stringify","txt","i","printTemporales","tsEj","inicio","falso","retorno","procesarAccID","returnedAcction","procesarForOF","procesarLlamada","procesarUnicambios","graficar_Ts","tempAtributos","data_description","principalValue","getSimbol","SplitAmbitos","assignedValue","pila","ExistingAttribute","temporal1","nuevoTemporal","posicion","tempTipo","suma","temporal2","valores","procesarTexto","valorIzq","valorDer","valIzq","initial","cadenaUpdated","sustituirEscapes","charCodeAt","heapPush","toString","cadena","Array","elem","String","replace","puntero","reference","userType","tamanio","procesarArray","attb","obtenerType","count","largo","arrayHead","procesarNewArray","pop","checkForMultyType","getType","calcularDimensiones","contador","typeID","attributeID","attribute","obtenerSimbolo","temporal3","name","ar","er","x","obtenerFuncion","GetAmbito","tsFuncion","tsTemp","apuntador","falsoC","verdadero","nuevaEtiqueta","tsIf","tsElIf","tsElse","actualizar","temporalID","instruccionID","condicion","tsFor","val","actualizarAndType","original","comparacion","nextCase","tabla","document","createElement","bgColor","align","width","border","row0","insertRow","rows","celda01","insertCell","celda02","celda03","celda04","celda05","celda06","celda07","celda08","innerHTML","row","celda1","celda2","celda3","celda4","celda5","celda6","celda7","celda8","appendChild","label","countDeclarations","data","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","secondary","absolute","position","bottom","right","absolute2","absolute3","absolute4","absolute5","absolute6","appBar","title","marginLeft","flex","button","margin","p","backgroundColor","marginTop","reports","intros","entrada","Transition","forwardRef","props","ref","Slide","direction","UI","analizar","entry","getElementById","parser","Interpretar","Traducir","prs","attributes","children","atb","populateTableTsTr","populateTableErTr","Errores_Array","err","populateTableTsEj","celda11","colSpan","populateTableErEj","classes","useState","open","setOpen","a","setTimeout","style","display","handleClose","className","Grid","container","item","xs","CssBaseline","Paper","options","mode","lineNumbers","onChange","editor","EntryValue","onCursorActivity","getCursor","line","ch","CursosLocation","cdm","readOnly","indentAutoShift","editorDidMount","translationConsole","Button","startIcon","marginRight","onClick","str","el","setAttribute","left","body","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","disabled","height","resize","float","alignContent","variant","size","handleClickOpenAST","Dialog","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","aria-label","Typography","zoomable","orientation","background","ReactDOM","render","gramatica","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","$Vn1","$Vo1","$Vp1","$Vq1","$Vr1","$Vs1","$Vt1","$Vu1","$Vv1","$Vw1","$Vx1","$Vy1","$Vz1","$VA1","$VB1","$VC1","$VD1","$VE1","$VF1","$VG1","$VH1","$VI1","$VJ1","$VK1","$VL1","$VM1","$VN1","$VO1","$VP1","$VQ1","$VR1","$VS1","$VT1","$VU1","$VV1","$VW1","$VX1","$VY1","$VZ1","$V_1","$V$1","$V02","$V12","$V22","$V32","$V42","trace","yy","symbols_","terminals_","2","5","9","10","12","13","15","17","18","19","21","22","24","26","28","29","30","31","32","33","35","38","41","42","43","44","45","46","47","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","72","74","75","76","77","78","80","84","85","87","88","89","93","96","98","99","103","104","105","106","107","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","tempAr","ArrayDeErrores","$","instruccionesAPI","first_line","first_column","Number","table","3","4","6","7","8","40","1","102","11","39","71","25","14","48","37","73","90","81","34","79","92","82","36","20","83","86","94","23","100","91","27","95","16","97","defaultActions","161","187","309","311","315","317","349","350","368","372","398","399","418","419","422","parseError","hash","recoverable","Error","input","self","vstack","lstack","recovering","TERROR","EOF","args","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","len","newState","expected","lex","token","yyval","error_rule_depth","errStr","locateNearestErrorRecoveryRule","stack_probe","depth","showPosition","join","match","loc","last_line","last_column","range","apply","concat","require","_input","_more","_backtrack","done","matched","conditionStack","offset","unput","lines","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","pre","c","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv"],"mappings":"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AIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAA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","file":"static/js/main.ff45788f.chunk.js","sourcesContent":["const TIPO_VALOR = {\n    NUMERO: 'NUMERO',\n    DECIMAL: 'DECIMAL',\n    IDENTIFICADOR: 'IDENTIFICADOR',\n    CADENA: 'CADENA',\n    CARACTER: 'CARACTER',\n    TRUE: 'TRUE',\n    FALSE: 'FALSE',\n    OBJETO: 'OBJETO',\n    ANONYMOUS_FUNCTION: 'ANONYMOUS_FUNCTION',\n    CADENA_EJECUTABLE: 'CADENA_EJECUTABLE',\n    CADENA_CHARS:'CADENA_CHARS',\n    NULL:'NULL'\n};\nconst TIPO_OPERACION = {\n    SUMA: 'SUMA',\n    RESTA: 'RESTA',\n    MULTIPLICACION: 'MULTIPLICACION',\n    DIVISION: 'DIVISION',\n    NEGATIVO: 'NEGATIVO',\n    POTENCIA: 'POTENCIA',\n    MODULO: 'MODULO',\n    MAYOR: 'MAYOR',\n    MAYOR_IGUAL: 'MAYOR_IGUAL',\n    MENOR: 'MENOR',\n    MENOR_IGUAL: 'MENOR_IGUAL',\n    CONCATENACION: 'CONCATENACION',\n    IGUAL_IGUAL: 'IGUAL IGUAL',\n    DISTINTO: 'DISTINTO',\n    CONDICION: 'CONDICION',\n    AND: 'AND',\n    OR: 'OR',\n    NOT: 'NOT',\n    CONCATENACION:'CONCATENACION'\n};\nconst SENTENCIAS = {\n    CLASE: 'CLASE',\n    ASIGNACION: 'ASIGNACION',\n    DECLARACION: 'DECLARACION',\n    IMPORT: 'IMPORT',\n    IF: 'IF',\n    ELSE_IF: 'ELSE_IF',\n    ELSE: 'ELSE',\n    SWITCH: 'SWITCH',\n    WHILE: 'WHILE',\n    DO_WHILE: 'DO_WHILE',\n    FOR: 'FOR',\n    FUNCION: 'FUNCION',\n    MAIN: 'MAIN',\n    RETURN: 'RETURN',\n    CONTINUE: 'CONTINUE',\n    BREAK: 'BREAK',\n    IMPRIMIR: 'IMPRIMIR',\n    COMENTARIO: 'COMENTARIO',\n    PARAMETRO: 'PARAMETRO',\n    VARIABLE: 'VARIABLE',\n    METODO: 'METODO',\n    CASE: 'CASE',\n    DEFAULT: 'DEFAULT',\n    LLAMADA: 'LLAMADA',\n    INCREMENTO: 'INCREMENTO',\n    DECREMENTO: 'DECREMENTO',\n    FOR_OF:'FOR_OF',\n    FOR_IN:'FOR_IN',\n    ACCESO_POSICION:'ACCESO_POSICION',\n    TYPE_DECLARATION:'TYPE_DECLARATION',\n    PUSH:'PUSH',\n    POP:'POP',\n    LENGTH:'LENGTH',\n    ACCESO:'ACCESO',\n    GRAFICAR_TS:'GRAFICAR_TS',\n    ASIGNACION_SUMA:'ASIGNACION_SUMA',\n    ASIGNACION_RESTA:'ASIGNACION_RESTA',\n    CHAR_AT:'CHAR_AT',\n    TO_LOWER_CASE:'TO_LOWER_CASE',\n    TO_UPPER_CASE:'TO_UPPER_CASE',\n    CONCAT:'CONCAT'\n};\nconst TIPO_DATO = {\n    NUMBER: 'NUMBER',\n    BOOLEAN: 'BOOLEAN',\n    STRING: 'STRING',\n    OBJETO: 'OBJETO',\n    VOID:'VOID',\n    ARRAY: 'ARRAY',\n    TYPE: 'TYPE',\n    OPERADOR_TERNARIO: 'OPERADOR_TERNARIO',\n    NEW_ARRAY:'NEW_ARRAY'\n};\nconst TIPO_ACCESO={\n    ATRIBUTO:'ATRIBUTO',\n    POSICION:'POSICION'\n};\nconst TIPO_VARIABLE ={\n    LET: 'LET',\n    CONST: 'CONST'\n};\nfunction nuevaOperacion(operandoIzq, OperandoDer, tipo) {\n    return {\n        operandoIzq: operandoIzq,\n        operandoDer: OperandoDer,\n        tipo: tipo\n    }\n}\n\nfunction crearSimbolo(var_type, id, tipo, ambito, fila, columna, direcciones) {\n    return {\n        si:'variable',\n        var_type:var_type,\n        id: id,\n        tipo: tipo,\n        ambito:ambito,\n        fila:fila,\n        columna:columna,\n        direcciones:direcciones\n    }\n}\n\nfunction crearFuncion(id, tipo, parametros, accion,ambito, fila, columna) {\n    return {\n        si:'funcion',\n        id: id,\n        tipo: tipo,\n        parametros: parametros,\n        accion: accion,\n        ambito:ambito,\n        fila:fila,\n        columna:columna\n    }\n}\n\nfunction crearType(id, atributos, fila, columna){\n    return{\n        si:'type',\n        id:id,\n        atributos:atributos,\n        fila:fila,\n        columna:columna\n    }\n}\n\nclass TS {\n    constructor(simbolos, printedTable) {\n        this._simbolos = simbolos;\n        this._printedTable=printedTable;\n    }\n\n    agregar(var_type, id, tipo, ambito, fila, columna, direcciones) {\n        const nuevoSimbolo = crearSimbolo(var_type, id, tipo, ambito, fila, columna,direcciones);\n        this._simbolos.push(nuevoSimbolo);\n    }\n\n    agregarFuncion(id, tipo, parametros, accion, ambito, fila, columna) {\n        const nuevaFuncion = crearFuncion(id, tipo, parametros, accion, ambito, fila, columna);\n        this._simbolos.push(nuevaFuncion);\n    }\n\n    agregarType(id, atributos, fila, columna){\n        const nuevoType= crearType(id, atributos, fila, columna);\n        this._simbolos.push(nuevoType);\n    }\n\n    actualizar(id, valor) {\n        const simbolo = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && simbolo.si==\"variable\")[0];\n        if (simbolo.tipo != valor.tipo) {\n            if(simbolo.tipo.split(\"[]\")[0]==\"undefined\"){\n                simbolo.tipo=valor.tipo;\n            }else{\n                //this._consola.value+='ERROR: Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + simbolo.tipo;\n                this._printedTable.erEj.push({descripcion:'Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + simbolo.tipo,tipo:\"semántico\", linea:0, columna:0}); \n                throw 'ERROR: Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + simbolo.tipo;\n            }\n            }\n        if (simbolo){\n            simbolo.valor = valor.valor;\n        }else{\n            //this._consola.value+='ERROR: variable: ' + id + ' no ha sido declarada.';\n            this._printedTable.erEj.push({descripcion:'variable: ' + id + ' no ha sido declarada.', tipo:\"semántico\", linea:0, columna:0}); \n            throw 'ERROR: variable: ' + id + ' no ha sido declarada.';\n        }\n    }\n    actualizarAndType(id, valor) {\n        const simbolo = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase())[0];\n        if (simbolo) simbolo.valor = valor.valor;\n        if (simbolo) simbolo.tipo = valor.tipo;\n        else {\n            //this._consola+='ERROR: variable: ' + id + ' no ha sido declarada.';\n            this._printedTable.erEj.push({descripcion:' variable: ' + id + ' no ha sido declarada. ',tipo:\"semántico\", linea:0, columna:0}); \n            throw 'ERROR: variable: ' + id + ' no ha sido declarada.';}\n    }\n\n    obtenerSimbolo(id, ambito, fila, columna) {\n        for(let amb of ambito){\n            const simbolo = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && amb==simbolo.ambito && simbolo.si ==\"variable\")[0];\n            if (simbolo){\n                return { valor: simbolo.direcciones, tipo: simbolo.tipo, ambito:simbolo.ambito }\n            };\n        }\n        //this._consola.value+='f:'+fila+', c:'+columna+', ambito:'+ambito[0]+'\\nERROR: variable: ' + id + ' no ha sido declarada.';\n        this._printedTable.erEj.push({descripcion:'variable: ' + id + ' no ha sido declarada.',tipo:\"semántico\", linea:fila, columna:columna}); \n        throw 'ERROR: variable: ' + id + ' no ha sido declarada.';\n    }\n    getSimbol(id, ambito, fila, columna) {\n        for(let amb of ambito){\n            const simbolo = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && amb==simbolo.ambito && simbolo.si==\"variable\")[0];\n            if (simbolo) return simbolo;\n        }\n        //this._consola.value+='f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: variable: ' + id + ' no ha sido declarada.';\n        this._printedTable.erEj.push({descripcion:'variable: ' + id + ' no ha sido declarada.', tipo:\"semántico\", linea:fila, columna:columna}); \n        throw 'ERROR: variable: ' + id + ' no ha sido declarada.';\n    }\n    obtenerFuncion(id, fila, columna, ambito) {\n        const funcion = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && simbolo.si==\"funcion\")[0];\n        if (funcion){ \n                return { tipo: funcion.tipo, parametros: funcion.parametros, accion: funcion.accion };\n            }\n        else {\n            //this._consola.value+='f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: no existe ninguna función llamada: ' + id + '.';\n            this._printedTable.erEj.push({descripcion:'no existe ninguna función llamada: ' + id + '.', tipo:\"semántico\", linea:fila, columna:columna}); \n            throw 'ERROR: no existe ninguna función llamada: ' + id + '.';\n        }\n    }\n    obtenerType(id) {\n        const type = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && simbolo.si==\"type\")[0];\n        if (type) return { atributos:type.atributos };\n        else {\n            //this._consola.value+='ERROR: no existe ningun type llamado: ' + id + '.'; \n            this._printedTable.erEj.push({descripcion:'no existe ningun type llamado: ' + id + '.', tipo:\"semántico\", linea:0, columna:0}); \n            throw 'ERROR: no existe ningun type llamado: ' + id + '.';\n        }\n    }\n    updateFuncionID(id,  newID, fila, columna) {\n        const funcion = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase())[0];\n        if (funcion) {\n            funcion.oldID=funcion.id;\n            funcion.id=newID;\n            return true;\n        }\n        else {\n           // this._consola.value+='f:'+fila+', c:'+columna+'\\nERROR: no existe ninguna función llamada: ' + id + '.';\n            this._printedTable.erEj.push({descripcion:'no existe ninguna función llamada: ' + id + '.', tipo:\"semántico\", linea:fila, columna:columna});\n            throw 'ERROR: no existe ninguna función llamada: ' + id + '.';\n        }\n    }\n    changeOldIDCall(id, fila, columna){\n        const funcion = this._simbolos.filter(simbolo => simbolo.oldID === id && simbolo.si==\"funcion\")[0];\n        if (funcion) {\n            return funcion.id;\n        }\n        else {\n            //this._consola.value+='f:'+fila+', c:'+columna+'\\nERROR: no existe ninguna función llamada: ' + id + '.';\n            this._printedTable.erEj.push({descripcion:'no existe ninguna función llamada: ' + id + '.', tipo:\"semántico\", linea:fila, columna:columna});\n            throw 'ERROR: no existe ninguna función llamada: ' + id + '.';\n        }\n    }\n    existe(id, ambito, si) {\n        const simbolo = this._simbolos.filter(simbolo => simbolo.id.toLowerCase() === id.toLowerCase() && ambito == simbolo.ambito && si==simbolo.si)[0];\n        if (simbolo){ return true;}\n        else {return false;}\n    }\n\n    get simbolos() {\n        return this._simbolos;\n    }\n}\n\nfunction Data_Type(tipo) {\n    if (tipo === \"number\") {\n        return TIPO_DATO.NUMBER;\n    }else if (tipo === \"boolean\") {\n        return TIPO_DATO.BOOLEAN;\n    }else if (tipo === \"string\") {\n        return TIPO_DATO.STRING;\n    }else if (tipo === \"void\") {\n        return TIPO_DATO.VOID;\n    }else{\n        return tipo;\n    }\n}\nfunction Variable_Type(tipo) {\n    if (tipo === \"let\") {\n        return TIPO_VARIABLE.LET;\n    }\n    if (tipo === \"const\") {\n        return TIPO_VARIABLE.CONST;\n    }\n}\nconst instruccionesAPI = {\n    nuevaOperacionBinaria: function(Izq, Der, tipo) {\n        return nuevaOperacion(Izq, Der, tipo);\n    },\n    nuevaOperacionUnaria: function(izq, tipo) {\n        return nuevaOperacion(izq, undefined, tipo);\n    },\n    nuevoValor: function(valor, tipo) {\n        return {\n            tipo: tipo,\n            valor: valor\n        };\n    },\n    nuevaDeclaracion: function(variable_type, id, data_type, valor, next_declaration, fila, columna) {\n        return {\n            sentencia: SENTENCIAS.DECLARACION,\n            variable_type:Variable_Type(variable_type),\n            data_type: Data_Type(data_type.tipo),\n            isArray:data_type.isArray,\n            id: id,\n            expresion: valor,\n            next_declaration:next_declaration,\n            fila:fila,\n            columna:columna\n        };\n    },\n    nuevoID:function( id, data_type, valor,  next_declaration, fila, columna){\n      return{\n        data_type: Data_Type(data_type.tipo),\n        isArray:data_type.isArray,\n        id: id,\n        expresion: valor,\n        next_declaration:next_declaration,\n        fila:fila,\n        columna:columna\n      };  \n    },\n    nuevoObjeto:function(atributos, columna, fila){\n        return{\n            tipo:TIPO_VALOR.OBJETO,\n            atributos:atributos,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoObjAtributo:function(id, valor, next){\n        return{\n            id:id,\n            valor:valor,\n            next:next\n        };\n    },\n    nuevoTypeAtributo:function(id, data_type, next){\n        return{\n            id:id,\n            data_type:Data_Type(data_type),\n            next:next\n        };\n    },\n    nuevaDimension:function(next_dimension){\n      return{\n          dimension:true,\n          next_dimension:next_dimension\n        };\n    },\n    nuevoTipo: function (tipo, isArray) {\n      return{\n          tipo:tipo,\n          isArray:isArray\n      };  \n    },\n    nuevoArray: function(dimension, columna, fila){\n        return{\n            data_type:TIPO_DATO.ARRAY,\n            dimension:dimension,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoDato: function (dato, next_data) {\n      return{\n          dato:dato,\n          next_data:next_data\n      };  \n    },\n    nuevoType: function(id, atributos, fila, columna){\n        return{\n            sentencia:SENTENCIAS.TYPE_DECLARATION,\n            data_type:TIPO_DATO.TYPE,\n            id:id,\n            atributos:atributos,\n            fila:fila,\n            columna:columna\n        };\n    },\n    nuevoOperadorTernario:function(logica, result1, result2){\n        return{\n            tipo:TIPO_DATO.OPERADOR_TERNARIO,\n            logica:logica,\n            result1:result1,\n            result2:result2\n        };\n    },\n    nuevaAsignacion: function(id, valor, columna, fila) {\n        return {\n            sentencia: SENTENCIAS.ASIGNACION,\n            id: id,\n            expresion: valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoImprimir: function(valor) {\n        return {\n            sentencia: SENTENCIAS.IMPRIMIR,\n            valor: valor\n        };\n    },\n    nuevoIf: function(logica, sentencias, elseT) {\n        return {\n            sentencia: SENTENCIAS.IF,\n            logica: logica,\n            accion: sentencias,\n            else: elseT\n        };\n    },\n    nuevoElseIf: function(logica, sentencias, elseT) {\n        return {\n            sentencia: SENTENCIAS.ELSE_IF,\n            logica: logica,\n            accion: sentencias,\n            else: elseT\n        };\n    },\n    nuevoElse: function(sentencias) {\n        return {\n            sentencia: SENTENCIAS.ELSE,\n            accion: sentencias\n        };\n    },\n    nuevoSwitch: function(logica, cases){\n        return{\n            sentencia:SENTENCIAS.SWITCH,\n            logica:logica,\n            cases:cases\n        };\n    },\n    nuevoCase: function(logica, accion, next_case){\n        return{\n            logica:logica,\n            accion:accion,\n            next_case:next_case\n        };\n    },\n    nuevoDefault: function(accion){\n        return{\n            logica:'default',\n            accion:accion\n            //podía llevar casos después pero aún no lo he hecho\n        };\n    },\n    nuevoFor: function(inicial, final, paso, sentencias) {\n        return {\n            sentencia: SENTENCIAS.FOR,\n            inicial: inicial,\n            final: final,\n            paso: paso,\n            accion: sentencias\n        };\n    },\n    nuevoForOF:function(variable,conjunto,  accion){\n        return{\n            sentencia:SENTENCIAS.FOR_OF,\n            conjunto:conjunto,\n            variable:variable,\n            accion:accion\n        };\n    },\n    nuevoForIn:function(variable,conjunto,  accion){\n        return{\n            sentencia:SENTENCIAS.FOR_IN,\n            conjunto:conjunto,\n            variable:variable,\n            accion:accion\n        };\n    },\n    nuevoWhile:function(logica, accion){\n      return{\n          sentencia:SENTENCIAS.WHILE,\n          logica:logica,\n          accion:accion\n      };  \n    },\n    nuevoDoWhile:function(accion, logica){\n        return{\n            sentencia:SENTENCIAS.DO_WHILE,\n            logica:logica,\n            accion:accion\n        };  \n      },\n    nuevaFuncion: function(tipo, id, parametros, accion,fila,columna) {\n        return {\n            sentencia: SENTENCIAS.FUNCION,\n            tipo: Data_Type(tipo),\n            id: id,\n            parametros: parametros,\n            accion: accion,\n            fila:fila,\n            columna:columna\n        }\n    },\n    nuevaListaid: function(id, siguiente) {\n        return {\n            id: id,\n            siguiente: siguiente\n        };\n    },\n    nuevaLlamada: function(id, parametros, columna, fila) {\n        return {\n            sentencia: SENTENCIAS.LLAMADA,\n            id: id,\n            parametros: parametros,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoArgumento: function(expresion, siguiente, columna, fila) {\n        return {\n            expresion: expresion,\n            siguiente: siguiente,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoParametro: function(tipo, id, siguiente, opcional) {\n        return {\n            tipo: Data_Type(tipo),\n            id: id,\n            siguiente: siguiente,\n            opcional:opcional\n        };\n    },\n    nuevoReturn: function(valor, columna, fila) {\n        return {\n            sentencia: SENTENCIAS.RETURN,\n            valor: valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoArrayIndex: function(index, next_index){\n        return{\n            index:index,\n            next_index:next_index\n        };\n    },\n    nuevoAccesoAPosicion: function(id, index, next_index){\n        return{\n            sentencia:SENTENCIAS.ACCESO_POSICION,\n            id:id,\n            index:index,\n            next_index:next_index\n        };\n    },\n    nuevoDecremento: function(id, columna, fila){\n        return{\n            sentencia:SENTENCIAS.DECREMENTO,\n            id:id,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoIncremento: function(id, columna, fila){\n        return{\n            sentencia:SENTENCIAS.INCREMENTO,\n            id:id,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoPush: function(valor, columna, fila){\n        return{\n            sentencia:SENTENCIAS.PUSH,\n            valor:valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoPop: function(columna, fila){\n        return{            \n            sentencia:SENTENCIAS.POP,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoLength: function(columna, fila){\n        return{            \n            sentencia:SENTENCIAS.LENGTH,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevaReferencia:function(id, acc, columna, fila){\n        return{\n            id:id,\n            acc:acc,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoAccPosicion:function(index, next_acc, columna, fila){\n        return{\n            acc_type:TIPO_ACCESO.POSICION,\n            index:index,\n            next_acc:next_acc,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoAccAtributo:function(atributo, next_acc, columna, fila){\n        return{\n            acc_type:_TIPO_ACCESO.ATRIBUTO,\n            atributo:atributo,\n            next_acc:next_acc,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoContinue:function(columna, fila){\n        return{\n            sentencia:SENTENCIAS.CONTINUE,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoBreak:function(columna, fila){\n        return{\n            sentencia:SENTENCIAS.BREAK,\n            columna:columna, \n            fila:fila\n        };\n    },\n    nuevoAcceso: function(id, columna, fila){\n        return{\n            sentencia:SENTENCIAS.ACCESO,\n            id:id,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoGraficarTS:function(){\n        return{\n            sentencia:SENTENCIAS.GRAFICAR_TS\n        };\n    },\n    nuevoAsignacioSuma:function(id, valor, columna, fila){\n        return{\n            sentencia:SENTENCIAS.ASIGNACION_SUMA,\n            id:id,\n            valor:valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoAsignacioResta:function(id, valor, columna, fila){\n        return{\n            sentencia:SENTENCIAS.ASIGNACION_RESTA,\n            id:id,\n            valor:valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoCharAt: function(valor, columna, fila){\n        return{\n            sentencia:SENTENCIAS.CHAR_AT,\n            valor:valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoToLowerCase: function(columna, fila){\n        return{            \n            sentencia:SENTENCIAS.TO_LOWER_CASE,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoToUpperCase: function(columna, fila){\n        return{            \n            sentencia:SENTENCIAS.TO_UPPER_CASE,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoConcat: function(valor, columna, fila){\n        return{\n            sentencia:SENTENCIAS.CONCAT,\n            valor:valor,\n            columna:columna,\n            fila:fila\n        };\n    },\n    nuevoNewArray: function (expresion){\n        return{\n            tipo:TIPO_DATO.NEW_ARRAY,\n            expresion:expresion\n        };\n    }\n\n};\n\nconst _TIPO_OPERACION = TIPO_OPERACION;\nexport { _TIPO_OPERACION as TIPO_OPERACION };\nconst _TIPO_VARIABLE = TIPO_VARIABLE;\nexport { _TIPO_VARIABLE as TIPO_VARIABLE };\nconst _SENTENCIAS = SENTENCIAS;\nexport { _SENTENCIAS as SENTENCIAS };\nconst _TIPO_VALOR = TIPO_VALOR;\nexport { _TIPO_VALOR as TIPO_VALOR };\nconst _instruccionesAPI = instruccionesAPI;\nexport { _instruccionesAPI as instruccionesAPI };\nconst _TIPO_DATO = TIPO_DATO;\nexport { _TIPO_DATO as TIPO_DATO };\nconst _TS = TS;\nexport { _TS as TS };\nconst _TIPO_ACCESO = TIPO_ACCESO;\nexport {_TIPO_ACCESO as TIPO_ACCESO};","import React from 'react'\n\nimport './App.css'\nimport SocialFollow from \"./SocialFollow\"\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n            <h1>WELCOME TO GYAANI BABA</h1>\n          </div>\n\n        );\n    }\n}\n\nexport default App","import { TS, TIPO_DATO, SENTENCIAS, TIPO_VARIABLE, TIPO_OPERACION, TIPO_VALOR, TIPO_ACCESO } from \"./instrucciones\";\n\nexport default function Desanidar(salida, consola, traduccion, tablaDeSalida){\n   // console.log(\"this is the output\"+  JSON.stringify(salida.AST)); \n   let output=\"\";\n   tablaDeSalida.erTr=salida.ErrArr;\n   try {\n        consola.value=\"\";\n        const tsGlobal = new TS([], consola);\n        scanForFunctions(salida.AST, tsGlobal, \"Global\");\n        scanForTypes(salida.AST, tsGlobal);\n        procesarBloque(salida.AST, tsGlobal, \"Global\");\n        traduccion.setValue(output);\n        setSalida(salida.Errores);\n        console.log(tsGlobal);\n        sendTable(tsGlobal);\n    } catch (e) {\n        console.error(e);\n        return;\n    }\n    function procesarBloque(instrucciones, tablaDeSimbolos, ambito){\n        for(let instruccion of instrucciones){\n            if (instruccion.sentencia === SENTENCIAS.DECLARACION) {\n                procesarDeclaracion(instruccion, tablaDeSimbolos, ambito);\n                output+=\"\\n\";\n            }else if (instruccion.sentencia === SENTENCIAS.ASIGNACION) {\n                procesarAsigacion(instruccion, tablaDeSimbolos);\n                output+=\"\\n\";\n            }else if (instruccion.sentencia === SENTENCIAS.ASIGNACION_SUMA) {\n                procesarAsigacionSuma(instruccion, tablaDeSimbolos);\n                output+=\"\\n\";\n            }else if (instruccion.sentencia === SENTENCIAS.ASIGNACION_RESTA) {\n                procesarAsigacionResta(instruccion, tablaDeSimbolos);\n                output+=\"\\n\";\n            }else if (instruccion.sentencia === SENTENCIAS.TYPE_DECLARATION) {\n                procesarTypeDeclaration(instruccion, tablaDeSimbolos, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.IF){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarIf(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.IMPRIMIR){\n                procesarImpresion(instruccion, tablaDeSimbolos);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.SWITCH){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarSwitch(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.FOR){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarFor(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.FOR_IN){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarForIn(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.FOR_OF){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procecsarForOf(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.WHILE){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarWhile(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.DO_WHILE){\n                const tsTemporal = new TS(tablaDeSimbolos.simbolos.slice(), consola);\n                procesarDoWhile(instruccion, tsTemporal, ambito);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.LLAMADA){\n                output+=procesarLLamada(instruccion, tablaDeSimbolos)+\";\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.RETURN){\n                procesarReturn(instruccion, tablaDeSimbolos);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.BREAK){\n                output+=\"break;\\n\"\n            }else if(instruccion.sentencia === SENTENCIAS.CONTINUE){\n                output+=\"continue;\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.INCREMENTO){\n                procesarIncremento(instruccion);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.DECREMENTO){\n                procesarDecremento(instruccion);\n                output+=\"\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.ACCESO){\n                output+=procesarIdentificador(instruccion.id, tablaDeSimbolos)+\";\\n\";\n            }else if(instruccion.sentencia === SENTENCIAS.FUNCION){\n                procesarFuncion(instruccion, tablaDeSimbolos, ambito);\n            }else if(instruccion.sentencia === SENTENCIAS.GRAFICAR_TS){\n                output+=\"graficar_ts();\\n\";\n            }else if(instruccion==\";\"){\n                console.log(\"En esta posición hay un error sintáctico.\");\n                //se ignora esta acción\n            }\n        }\n    }\n    function procesarDeclaracion(instruccion, tablaDeSimbolos, ambito){\n        output+=Variable_Type(instruccion.variable_type)+\" \";\n        let temp = instruccion;\n        let data_type = \"\";\n        while(temp!=\"Epsilon\"){\n            if(temp!=instruccion) output+=\",\";\n                if(temp.data_type===\"infer\"){\n                    output+=temp.id; \n                    tablaDeSimbolos.agregar(instruccion.variable_type,temp.id, \"undefined\", \"undefined\", ambito, temp.fila, temp.columna);\n            \n                }else{                \n                    output+=temp.id+\":\"+Data_Type(temp.data_type);\n                    if(temp.isArray!=false){\n                        let temporal = temp.isArray;\n                        while(temporal.dimension===true){\n                            output+=\"[]\";\n                            temporal=temporal.next_dimension;\n                        }\n                    } \n                    tablaDeSimbolos.agregar(instruccion.variable_type,temp.id, {tipo:Data_Type(temp.data_type), isArray:temp.isArray}, \"undefined\", ambito, temp.fila, temp.columna);\n            \n                }\n            if(temp.expresion!=\"undefined\"){\n                output+=\"=\"+procesarExpresionNumerica(temp.expresion, tablaDeSimbolos);\n            }\n           temp=temp.next_declaration;\n        }\n        output+=\";\";       \n    }\n    function Data_Type(tipo){\n        if (tipo === TIPO_DATO.NUMBER) {\n            return \"number\";\n        }else if (tipo === TIPO_DATO.BOOLEAN) {\n            return \"boolean\";\n        }else if (tipo === TIPO_DATO.STRING) {\n            return \"string\";\n        }else if (tipo === TIPO_DATO.VOID) {\n            return \"void\";\n        }else{\n            return tipo;\n        }\n    }\n    function Variable_Type(tipo) {\n        if (tipo === TIPO_VARIABLE.LET) {\n            return \"let\";\n        }\n        if (tipo === TIPO_VARIABLE.CONST) {\n            return \"const\";\n        }\n    }\n    function procesarExpresionNumerica(expresion, tablaDeSimbolos){\n        if (expresion.sentencia === SENTENCIAS.LLAMADA) {\n            return procesarLLamada(expresion, tablaDeSimbolos);\n        } else if (expresion.tipo === TIPO_OPERACION.NEGATIVO) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            return \"(-\"+valorIzq+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.SUMA) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"+\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.RESTA) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"-\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MULTIPLICACION) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"*\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.DIVISION) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"/\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.POTENCIA) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"**\" +valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MODULO) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq+ \"%\" +valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq+ \">\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\">=\" +valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"<\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"<=\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.IGUAL_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"==\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.DISTINTO) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"!=\"+ valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.AND) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq +\"&&\" +valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.OR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos);\n            return \"(\"+valorIzq+ \"||\" +valorDer+\")\";\n        } else if (expresion.tipo === TIPO_OPERACION.NOT) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos);\n            return \"(!\"+valorIzq+\")\";\n        } else if (expresion.tipo === TIPO_VALOR.NUMERO) {\n            return expresion.valor;\n        }else if (expresion.tipo === TIPO_VALOR.DECIMAL) {\n            return expresion.valor;\n        }else if (expresion.tipo === TIPO_VALOR.TRUE) {\n            return \"true\";\n        } else if (expresion.tipo === TIPO_VALOR.FALSE) {\n            return \"false\";\n        } else if (expresion.tipo === TIPO_VALOR.IDENTIFICADOR) {\n            return procesarIdentificador(expresion.valor, tablaDeSimbolos);\n        } else if (expresion.tipo === TIPO_VALOR.OBJETO) {\n            return procesarObjeto(expresion, tablaDeSimbolos);\n        }else if (expresion.data_type === TIPO_DATO.ARRAY) {\n            return procesarArreglo(expresion, tablaDeSimbolos);\n        }else if (expresion.tipo === TIPO_DATO.OPERADOR_TERNARIO) {\n            return procesarOperadorTernario(expresion, tablaDeSimbolos);\n        }else if (expresion.sentencia === SENTENCIAS.ACCESO_POSICION) {\n            return procesarAccesoAPosicion(expresion, tablaDeSimbolos);\n        } else if (expresion.tipo === TIPO_VALOR.CADENA) {\n            return \"\\\"\"+expresion.valor+\"\\\"\";\n        } else if (expresion.tipo === TIPO_VALOR.CADENA_CHARS) {\n            return \"\\'\"+expresion.valor+\"\\'\";\n        } else if (expresion.tipo === TIPO_VALOR.CADENA_EJECUTABLE) {\n            return \"\\`\"+expresion.valor+\"\\`\";\n        }else if (expresion.tipo === TIPO_VALOR.NULL) {\n            return \"null\";\n        }else if(expresion.tipo===TIPO_DATO.NEW_ARRAY){\n            return \"new Array(\"+procesarExpresionNumerica(expresion.expresion)+\")\";\n        }else {\n            throw 'ERROR: expresión numérica no válida: ' + expresion.valor;\n        }\n    }\n    function procesarLLamada(llamada, tablaDeSimbolos){\n        let text=tablaDeSimbolos.changeOldIDCall(llamada.id, llamada.fila, llamada.columna)+\"(\";\n        text+=procesarArgumentos(llamada.parametros, tablaDeSimbolos);\n        text+=\")\";\n        return text;\n    }\n    function procesarArgumentos(argumentos, tablaDeSimbolos){\n        let text=\"\";\n        let temp = argumentos;\n        while(temp!=\"Epsilon\"){\n            if(temp!=argumentos) text+=\",\";\n            text+=procesarExpresionNumerica(temp.expresion, tablaDeSimbolos);\n            temp=temp.siguiente;\n        }\n        return text;\n    }\n    function procesarObjeto(objeto, tablaDeSimbolos){\n        let text=\"{\\n\";\n        let temp = objeto.atributos;\n        while(temp!=\"Epsilon\"){\n            if(temp != objeto.atributos){\n                text+=\",\\n\";\n            }\n            text+=temp.id+\":\"+procesarExpresionNumerica(temp.valor, tablaDeSimbolos);\n            temp=temp.next;\n        }\n        return text+\"\\n}\";\n    }\n    function procesarArreglo(arreglo, tablaDeSimbolos){\n         let text=\"\";\n         text+=\"[\";\n         if(arreglo.dimension!=\"Epsilon\"){\n            text+=procesarElementosDeArray(arreglo.dimension, tablaDeSimbolos);\n         }\n         return text+\"]\";\n    }\n    function procesarElementosDeArray(datos, tablaDeSimbolos){\n        let text=\"\";\n        let temp=datos;\n        while(temp!=\"Epsilon\"){\n            if(temp!=datos) text+=\",\";\n            text+=procesarExpresionNumerica(temp.dato, tablaDeSimbolos);\n            temp=temp.next_data;\n        }\n        return text;\n    }\n    function procesarOperadorTernario(operacion, tablaDeSimbolos){\n        let text=\"\";\n        text+=procesarExpresionNumerica(operacion.logica, tablaDeSimbolos)+\"?\";\n        text+=procesarExpresionNumerica(operacion.result1, tablaDeSimbolos)+\":\";\n        text+=procesarExpresionNumerica(operacion.result2, tablaDeSimbolos);\n        return text;\n    }\n    function procesarAccesoAPosicion(acceso, tablaDeSimbolos){\n        let text=acceso.id;\n        let temp = acceso;\n        while(temp!=\"false\"){\n            text+=\"[\"+procesarExpresionNumerica(temp.index, tablaDeSimbolos)+\"]\";\n            temp=temp.next_index;\n        }\n        return text;\n    }\n    function procesarTypeDeclaration(declaracion, tablaDeSimbolos){\n        output+=\"type \"+declaracion.id+\"={\\n\";\n        let temp=declaracion.atributos;\n        while(temp!=\"Epsilon\"){\n            if(temp!=declaracion.atributos) output+=\",\\n\";\n            if(temp.data_type.tipo===\"infer\"){\n                output+=temp.id;\n            }else{                \n                output+=temp.id+\":\"+Data_Type(temp.data_type.tipo);\n                if(temp.isArray!=false){\n                    let temporal = temp.data_type.isArray;\n                    while(temporal.dimension===true){\n                        output+=\"[]\";\n                        temporal=temporal.next_dimension;\n                    }\n                }\n            }           \n            temp=temp.next;\n        }\n        output+=\"\\n};\";\n    }\n    function procesarIf(instruccion, tablaDeSimbolos, ambito){\n        output+=\"if(\"+procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos)+\"){\\n\";\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\";\n        if(instruccion.else!=\"Epsilon\"){\n            let temp = instruccion.else;\n            while(temp.sentencia!=SENTENCIAS.ELSE && temp != \"Epsilon\"){\n                output+=\"else if(\"+procesarExpresionNumerica(temp.logica, tablaDeSimbolos)+\"){\\n\";\n                procesarBloque(temp.accion, tablaDeSimbolos, ambito);\n                output+=\"}\";\n                temp=temp.else;\n            }\n            if(temp.sentencia==SENTENCIAS.ELSE){\n                output+=\"else{\\n\";\n                procesarBloque(temp.accion, tablaDeSimbolos, ambito);\n                output+=\"}\"\n            }\n        }\n    }\n    function procesarImpresion(instruccion, tablaDeSimbolos){\n        output+=\"console.log(\"+procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos)+\");\";\n    }\n    function procesarSwitch(instruccion, tablaDeSimbolos, ambito){\n        output+=\"switch(\"+procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos)+\"){\\n\";\n        let temp = instruccion.cases;\n        while(temp!=\"Epsilon\"){\n            if(temp.logica==\"default\"){\n                output+=\"default:\\n\";\n                procesarBloque(temp.accion, tablaDeSimbolos, ambito);\n                break;\n            }else{\n                output+=\"case \"+procesarExpresionNumerica(temp.logica, tablaDeSimbolos)+\":\\n\";\n                procesarBloque(temp.accion, tablaDeSimbolos, ambito);\n            }\n            temp=temp.next_case;\n        }\n        output+=\"\\n}\";\n    }\n    function procesarIdentificador(identificador, tablaDeSimbolos){\n        let text=\"\";\n        text+=identificador.id;\n        let temp = identificador.acc;\n        while(temp!=\"Epsilon\"){\n            if(temp.acc_type==TIPO_ACCESO.ATRIBUTO){\n                text+=\".\"+temp.atributo;\n            }else if(temp.acc_type==TIPO_ACCESO.POSICION){\n                text+=\"[\"+procesarExpresionNumerica(temp.index, tablaDeSimbolos)+\"]\";\n            }else if(temp.sentencia==SENTENCIAS.LENGTH){\n                text+=\".length\";\n                break;\n            }else if(temp.sentencia==SENTENCIAS.PUSH){\n                text+=\".push(\"+procesarExpresionNumerica(temp.valor, tablaDeSimbolos)+\")\";\n                break;\n            }else if(temp.sentencia==SENTENCIAS.POP){\n                text+=\".pop()\";\n                break;\n            }else if(temp.sentencia==SENTENCIAS.CONCAT){\n                text+=\".concat(\"+procesarExpresionNumerica(temp.valor)+\")\";\n                break;\n            }else if(temp.sentencia==SENTENCIAS.TO_LOWER_CASE){\n                text+=\".toLowerCase()\";\n                break;\n            }else if(temp.sentencia==SENTENCIAS.TO_UPPER_CASE){\n                text+=\".toUpperCase()\";\n                break;\n            }\n            temp=temp.next_acc;\n        }\n        return text;\n    }\n    function procesarFor(instruccion, tablaDeSimbolos, ambito){\n        output+=\"for(\";\n        if(instruccion.inicial.sentencia==SENTENCIAS.ASIGNACION){\n            output+=procesarIdentificador(instruccion.inicial.id)+\"=\"+procesarExpresionNumerica(instruccion.inicial.expresion, tablaDeSimbolos)+\";\";\n        }else if(instruccion.inicial.sentencia==SENTENCIAS.DECLARACION){\n            procesarDeclaracion(instruccion.inicial, tablaDeSimbolos, ambito);\n        }\n        output+=procesarExpresionNumerica(instruccion.final, tablaDeSimbolos)+\";\";\n        if(instruccion.paso.paso==\"++\"){\n            output+=instruccion.paso.id+\"++){\\n\";\n        }else  if(instruccion.paso.paso==\"--\"){\n            output+=instruccion.paso.id+\"--){\\n\";\n        }else {\n            output+=instruccion.paso.id+\"=\"+procesarExpresionNumerica(instruccion.paso.paso, tablaDeSimbolos)+\"){\\n\";\n        }\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\";//se le quitó el \\n porque cada sentencia lleva un salto de línea al final\n    }\n    function procesarAsigacion(instruccion, tablaDeSimbolos){\n        output+=procesarIdentificador(instruccion.id, tablaDeSimbolos)+\"=\"+procesarExpresionNumerica(instruccion.expresion, tablaDeSimbolos)+\";\";\n    }\n    function procecsarForOf(instruccion, tablaDeSimbolos, ambito){\n        output+=\"for(let \"+instruccion.variable+\" of \"+procesarExpresionNumerica(instruccion.conjunto)+\"){\\n\";\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\";\n    }\n    function procesarForIn(instruccion, tablaDeSimbolos, ambito){\n        output+=\"for(let \"+instruccion.variable+\" in \"+procesarExpresionNumerica(instruccion.conjunto)+\"){\\n\";\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\";\n    }\n    function procesarWhile(instruccion, tablaDeSimbolos, ambito){\n        output+=\"while(\"+procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos)+\"){\\n\";\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\"\n    }\n    function procesarDoWhile(instruccion, tablaDeSimbolos, ambito){\n        output+=\"do{\\n\";\n        procesarBloque(instruccion.accion, tablaDeSimbolos, ambito);\n        output+=\"}\"+\"while(\"+procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos)+\");\";\n    }\n    function procesarReturn(instruccion, tablaDeSimbolos){\n        if(instruccion.valor==\"Epsilon\"){\n            output+=\"return;\";\n        }else{\n            output+=\"return \"+procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos)+\";\";\n        }\n    }\n    function procesarIncremento(instruccion){\n        output+=procesarIdentificador(instruccion.id, tablaDeSalida)+\"++;\";\n    }\n    function procesarDecremento(instruccion){\n        output+=procesarIdentificador(instruccion.id, tablaDeSalida)+\"--;\";\n    }\n    function procesarFuncion(instrucciones, tablaDeSimbolos, ambito){\n            let funciones=[];\n            output+=/*(ambito==\"Global\")?*/\"function \"+instrucciones.id+\"(\"+procesarParametros(instrucciones.parametros)+\"):\"+procesarTipo(instrucciones.tipo)+\"{\\n\"/*:\"function \"+ambito+\"_\"+instrucciones.id+\"(\"+procesarParametros(instrucciones.parametros)+\"):\"+procesarTipo(instrucciones.tipo)+\"{\\n\"*/;\n       //     if(ambito!=\"Global\")tablaDeSimbolos.updateFuncionID(instrucciones.id, ambito+\"_\"+instrucciones.id);\n           // instrucciones.id=(ambito==\"Global\")?instrucciones.id:ambito+\"_\"+instrucciones.id;\n            for(let instruccion of instrucciones.accion){\n                if(instruccion.sentencia==SENTENCIAS.FUNCION){\n                    //quizás con ponerlo acá se soluciona\n                    funciones.push(instruccion);\n                    //output+=(ambito!=\"Global\")?\"//origen de la función \"+instruccion.id+\"\\n\":\"\";\n                    output+=\"//origen de la función \"+instruccion.id+\"\\n\";\n                }else{\n                        procesarBloque([instruccion], tablaDeSimbolos, instrucciones.id);                    \n                }\n            }\n            output+=\"}\\n\"\n            for(let funcion of  funciones){\n                procesarFuncion(funcion, tablaDeSimbolos, instrucciones.id);                    \n            }\n            //imprimir todas las funciones justo después de salir de la función padre\n            //recorrer la función que se acaba de sacar para que saque a sus hijos\n    }\n    function scanForFunctions(instrucciones, tablaDeSimbolos, ambito){\n        for(let instruccion of instrucciones){\n            if(instruccion.sentencia==SENTENCIAS.FUNCION){\n                tablaDeSimbolos.agregarFuncion(instruccion.id, instruccion.tipo, null, null, ambito, instruccion.fila, instruccion.columna);\n                if(ambito!=\"Global\"){\n                    tablaDeSimbolos.updateFuncionID(instruccion.id, ambito+\"_\"+instruccion.id, instruccion.fila, instruccion.columna);\n                }else{\n                    tablaDeSimbolos.updateFuncionID(instruccion.id, instruccion.id, instruccion.fila, instruccion.columna);                    \n                }\n                instruccion.id=(ambito==\"Global\")?instruccion.id:ambito+\"_\"+instruccion.id;\n                scanForFunctions(instruccion.accion, tablaDeSimbolos, instruccion.id);\n            }\n        }\n    }\n    function scanForTypes(instrucciones, tablaDeSimbolos){\n        for(let instruccion of instrucciones){\n            if(instruccion.sentencia==SENTENCIAS.TYPE_DECLARATION){\n                tablaDeSimbolos.agregarType(instruccion.id, null, instruccion.fila, instruccion.columna);\n            }\n        }\n    }\n    function sendTable(tablaDeSimbolos){\n        tablaDeSalida.tsTr=tablaDeSimbolos;\n    }\n    function procesarParametros(parametros){\n        let text=\"\";\n        let temp = parametros;\n        while(temp!=\"Epsilon\"){\n            if(temp!=parametros)text+=\", \";\n            text+=(temp.tipo.tipo==\"infer\")?temp.id:temp.id+\":\"+procesarTipo(temp.tipo);\n            temp=temp.siguiente;\n        }\n        return text;\n    }\n    function procesarTipo(tipo){\n        let text=tipo.tipo;\n        if(tipo.isArray!=false){\n            let temporal = tipo.isArray;\n            while(temporal.dimension===true){\n                text+=\"[]\";\n                temporal=temporal.next_dimension;\n            }\n        }\n        return text;   \n    }\n    function lookForMethods(id){\n        //se realiza este método para verificar que no vengan push, pop o length en la parte izquierda de ua igualdad \n        //se realiza también para saber que no viene un push en la parte derecha\n        //se realiza en los métodos no en procesarBloque\n    }\n    function procesarAsigacionSuma(instruccion, tablaDeSimbolos){\n        output+=procesarIdentificador(instruccion.id, tablaDeSimbolos)+\"+=\"+procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos)+\";\";\n    }\n    function procesarAsigacionResta(instruccion, tablaDeSimbolos){\n        output+=procesarIdentificador(instruccion.id, tablaDeSimbolos)+\"-=\"+procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos)+\";\";\n    }\n    function setSalida(Errores){\n        for(let error of Errores){\n            consola.value+=\"> \"+error+\"\\n\";\n        }\n    } \n}","import { ThumbUpAltSharp } from \"@material-ui/icons\";\nimport { TS, TIPO_DATO, SENTENCIAS, TIPO_VARIABLE, TIPO_OPERACION, TIPO_VALOR, TIPO_ACCESO } from \"./instrucciones\";\n\nexport default function Traucir(salida, consola, traduccion, printedTable, tablero){\n    const contadores = {temporales:4, etiquetas:0};\n    const arreglos = {uno:0, dos:0, tres:0, cuatro:0, cinco:0};\n   //const arreglos = [];\n    const pilas = {stack:0, heap:0};\n    const stack = [], heap=[];\n   let functionDeclaration=\"\";\n   printedTable.erEj=salida.ErrArr;\n   const tsGlobal = new TS([], printedTable);\n   try {\n       consola.value=\"\";\n        setSalida(salida.Errores);       \n        scanForTypes(salida.AST, tsGlobal); \n        scanForFunctions(salida.AST, tsGlobal, \"Global\");\n        consola.value=\"void main()\\n{\\n\";\n        procesarBloque(salida.AST, tsGlobal, \"Global\");\n        let mainContent =  consola.value;\n        consola.value=\"\";\n        importFunctions(salida.AST, tsGlobal, \"Global\");\n        consola.value=\"#include <stdio.h> //Importar para el uso de Printf\\n\\n#include <math.h>//Importa fmod\\ndouble heap[16384]; //Estructura para heap\\ndouble stack[16394]; //Estructura para stack\\ndouble p; //Puntero P\\ndouble h; //Puntero H\\ndouble \"+printTemporales()+funcionesNativas()+functionDeclaration+ mainContent+\"\\nreturn;\\n}\\n\";\n        //traduccion.setValue(output);\n        console.log(tsGlobal);\n        sendTable(tsGlobal);\n    } catch (e) {\n        console.error(e);\n        return;\n    }\n    function procesarBloque(instrucciones, tablaDeSimbolos, ambito, inicio, falso, retorno){\n        for(let instruccion of instrucciones){\n            if (instruccion.sentencia === SENTENCIAS.DECLARACION) {\n                try{\n                    procesarDeclaracion(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.ASIGNACION) {\n                try{\n                    procesarAsigacion(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia === SENTENCIAS.IMPRIMIR){\n                try{\n                    procesarImpresion(instruccion.valor, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia === SENTENCIAS.ACCESO){\n                try{\n                    procesarAccID(instruccion.id, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia === SENTENCIAS.IF){                \n                try{\n                    let returnedAcction = procesarIf(instruccion, tablaDeSimbolos, ambito, inicio, falso, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.FOR) {\n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarFor(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.FOR_OF) {\n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarForOF(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.FOR_IN) {\n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarForIn(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.WHILE) {\n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarWhile(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if (instruccion.sentencia === SENTENCIAS.DO_WHILE) {\n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarDoWhile(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                        console.error(e);\n                    }\n            }else if(instruccion.sentencia === SENTENCIAS.LLAMADA){ \n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);               \n                    procesarLlamada(instruccion, tsFor, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.INCREMENTO){\n                try{\n                    procesarUnicambios(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.DECREMENTO  ){\n                try{\n                    procesarUnicambios(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.ASIGNACION_SUMA  ){\n                try{\n                    procesarUnicambios(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.ASIGNACION_RESTA  ){\n                try{\n                    procesarUnicambios(instruccion, tablaDeSimbolos, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia === SENTENCIAS.SWITCH){ \n                try{\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);               \n                    let returnedAcction =  procesarSwitch(instruccion, tsFor, ambito, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.BREAK){\n                if(falso==undefined){\n                    printedTable.erEj.push({descripcion:'break fuera de ciclo.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                    throw 'break fuera de ciclo.';         \n                }\n                consola.value+=(\"goto \"+falso+\";\\n\");\n            }else if(instruccion.sentencia===SENTENCIAS.CONTINUE){\n                if(inicio==undefined){\n                    printedTable.erEj.push({descripcion:'continue fuera de ciclo.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                    throw 'continue fuera de ciclo.';         \n                }\n                consola.value+=(\"goto \"+inicio+\";\\n\");\n            }else if(instruccion.sentencia===SENTENCIAS.RETURN){\n                try{\n                    if(ambito==\"Global\"){\n                        printedTable.erEj.push({descripcion:'Return fuera de función.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                        throw '>ERROR: Return fuera de función.'; \n                    }\n                    if(instruccion.valor==\"Epsilon\"){\n                        //no devuelvo nada porque es un return sin valor\n                        //consola.value+=\"stack[(int)p]=0;\";\n                        consola.value+=\"goto \"+retorno+\";\\n\";\n                    }else{\n                        let valor=procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos, ambito);\n                        consola.value+=\"stack[(int)p]=\"+valor.valor+\";\\n\";\n                        consola.value+=\"goto \"+retorno+\";\\n\";\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }else if(instruccion.sentencia===SENTENCIAS.GRAFICAR_TS){\n                try{\n                    const tsFor = new TS(JSON.parse(JSON.stringify(tablaDeSimbolos.simbolos)), printedTable);  \n                    graficar_Ts(tsFor, ambito);\n                } catch (e) {\n                    console.error(e);\n                }\n            }\n        }\n    }\n    function setSalida(Errores){\n        if(Errores.length>0){\n        consola.value+=\"ALERTA:\\nExisten errores, consulta la tabla de errores para localizarlos.\\nNota: Si son errores sintácticos intenta ver las línea superiores para hallar el causante.\\n\\n\";\n        return;\n        }\n        for(let error of Errores){\n            consola.value+=\"> \"+error+\"\\n\";\n        }\n    }\n    function sendTable(tablaDeSimbolos){\n        printedTable.tsEj=tablaDeSimbolos;\n    }\n    function scanForFunctions(instrucciones, tablaDeSimbolos, ambito){\n        for(let instruccion of instrucciones){\n                if(instruccion.sentencia==SENTENCIAS.FUNCION){\n                    if(ambito==\"Global\"){ \n                            if(tablaDeSimbolos.existe(instruccion.id, ambito, \"funcion\")){\n                                consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+'\\n>ERROR: No se soporta la sobrecarga de funciones, id repetido :'+instruccion.id;  \n                                throw '>ERROR: No se soporta la sobrecarga de funciones, id repetido :'+instruccion.id;\n                            }  \n                            let dataType = procesarDataType(instruccion.tipo);\n                            if(tablaDeSimbolos.existe(dataType.split(\"[]\")[0], undefined, \"type\")==false && dataType.split(\"[]\")[0]!=\"number\" && dataType.split(\"[]\")[0]!=\"string\"&& dataType.split(\"[]\")[0]!=\"void\" && dataType.split(\"[]\")[0]!=\"boolean\"){\n                                consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+'\\n>ERROR: Type '+dataType.split(\"[]\")[0]+' no ha sido definido y es el tipo de retorno de la función:'+instruccion.id;  \n                                throw '>ERROR: Type '+dataType.split(\"[]\")[0]+' no ha sido definido y es el tipo de retorno de la función:'+instruccion.id;  \n                            }\n                            tablaDeSimbolos.agregarFuncion(instruccion.id, procesarDataType(instruccion.tipo), procesarParametros(instruccion.parametros), instruccion.accion, ambito, instruccion.fila, instruccion.columna);\n                            //traducirFunciones(instruccion.id,new TS(JSON.parse(JSON.stringify(tablaDeSimbolos._simbolos)), consola), ambito);\n                            scanForFunctions(instruccion.accion, tablaDeSimbolos, instruccion.id);\n                    }else{      \n                        consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+'\\n>ERROR: Funciones anidadas en la función:'+ambito;  \n                        throw '>ERROR: Funciones anidadas en la función:'+ambito;\n                    } \n                }  \n        }    \n    }\n    function scanForTypes(instrucciones, tablaDeSimbolos){\n        for(let instruccion of instrucciones){\n            if(instruccion.sentencia==SENTENCIAS.TYPE_DECLARATION){\n                tablaDeSimbolos.agregarType(instruccion.id, procesarAtributos(instruccion.atributos), instruccion.fila, instruccion.columna);\n            }\n        }\n    }\n    function procesarAtributos(atributos){\n        let tempAtributos = [];\n        let temp = atributos;\n        while(temp!=\"Epsilon\"){\n            tempAtributos.push({id:temp.id, tipo: procesarDataType(temp.data_type)});\n            temp=temp.next;\n        }\n        return tempAtributos;\n    }\n    function procesarDataType(data_description){\n        let dimension =\"\";\n        let temp=data_description.isArray;\n        while(temp!=false){\n            dimension+=\"[]\";\n            temp=temp.next_dimension;\n        }\n        return data_description.tipo+dimension;\n    }\n    function primitive_Data(tipo){\n        if (tipo === TIPO_DATO.NUMBER) {\n            return \"number\";\n        }else if (tipo === TIPO_DATO.BOOLEAN) {\n            return \"boolean\";\n        }else if (tipo === TIPO_DATO.STRING) {\n            return \"string\";\n        }else if (tipo === TIPO_DATO.VOID) {    \n            return \"void\";\n        }else{\n            return tipo;\n        }\n    }\n    function procesarParametros(parametros){\n        let temporal=[];\n        let temp = parametros;\n        while(temp!=\"Epsilon\"){\n            temporal.push({id:temp.id, tipo: procesarDataType(temp.tipo)});\n            temp=temp.siguiente;\n        }\n        return temporal;\n    }\n    function procesarDeclaracion(instruccion, tablaDeSimbolos, ambito){\n        let temp= instruccion;\n        while(temp!=\"Epsilon\"){\n            crearSimbolo(instruccion.variable_type, temp.id, {tipo:primitive_Data(temp.data_type), isArray:temp.isArray}, temp.expresion, ambito, tablaDeSimbolos, temp.fila, temp.columna);\n            temp=temp.next_declaration;\n        }\n    }\n    function procesarAsigacion(instruccion, tablaDeSimbolos, ambito){\n        let principalValue = tablaDeSimbolos.getSimbol(instruccion.id.id, SplitAmbitos(ambito), instruccion.fila, instruccion.columna);\n        if(principalValue.var_type==TIPO_VARIABLE.CONST && instruccion.id.acc==\"Epsilon\"){\n            consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\n>ERROR: No se puede asignar a ' + instruccion.id.id+' porque es una constante.\\n';  \n            throw '>ERROR:  No se puede asignar a ' + instruccion.id.id+' porque es una constante.\\n';   \n        }\n        let assignedValue = procesarExpresionNumerica(instruccion.expresion, tablaDeSimbolos, ambito);\n        let temp = instruccion.id.acc, tipo =principalValue.tipo, direcciones=principalValue.direcciones, pila = (ambito==\"Global\")?\"heap\":\"stack\";\n        while(temp!=\"Epsilon\"){\n            pila=\"heap\";//se direcciona a el heap porque procede de un objeto o un array\n            if(temp.acc_type==TIPO_ACCESO.ATRIBUTO){//B\n                //comprobar que exista la propiedad\n                let value = ExistingAttribute(principalValue.tipo, temp.atributo, tablaDeSimbolos);\n                //comprobar que el valor sea del mismo tipo del atributo o null\n                if(value == false){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No existe el atributo '+temp.atributo+'\\n';  \n                    printedTable.erEj.push({descripcion:' No existe el atributo '+temp.atributo,tipo:\"semántico\", linea:temp.fila, columna:temp.columna}); \n                    throw '>ERROR: No existe el atributo '+temp.atributo+'\\n';\n                }\n                /*for(let attribute of principalValue.direcciones){\n                    if(attribute.id==temp.atributo){\n                        principalValue=attribute;\n                        tipo = value.valor.tipo;\n                        direcciones=attribute.direcciones;\n                    }\n                }*/\n                let temporal1=nuevoTemporal(); \n                consola.value+=temporal1+\"=\"+principalValue.direcciones+\"+\"+(value.posicion)+\";\\n\";\n                direcciones=temporal1;\n                tipo=value.valor.tipo;\n            }else if(temp.acc_type==TIPO_ACCESO.POSICION){//B\n                //comprobar que sea un array\n                if(principalValue.tipo.split(\"[]\")==1){\n                    //onsola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: Intento de acceso a posición de array inexistente\\n';  \n                    printedTable.erEj.push({descripcion:'Intento de acceso a posición de array inexistente',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                    throw '>ERROR: Intento de acceso a posición de array inexistente\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.index, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"number\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se reconoce la expresion '+valor.valor+' como un index.\\n';\n                    printedTable.erEj.push({descripcion:'No se reconoce la expresion '+valor.valor+' como un index',tipo:\"semántico\", linea:temp.fila, columna:temp.columna});\n                    throw '>ERROR:No se reconoce la expresion '+valor.valor+' como un index.\\n';                      \n                }\n                let tempTipo=\"\";\n                for(let e =0;e<tipo.split(\"[]\").length-1;e++){\n                    if(e==0)tempTipo+=tipo.split(\"[]\")[e];\n                    else tempTipo+=\"[]\";\n                }\n                tipo=tempTipo;\n                //consola.value+=principalValue.direcciones+\"[\"+valor.valor+\"]=\"+valor.valor;\n                let suma = nuevoTemporal(), temporal = nuevoTemporal();\n                consola.value+=suma+\"=\"+valor.valor+\"+1;\\n\";\n                consola.value+=temporal+\"=\"+direcciones+\"+\"+suma+\";\\n\";\n             //   if(tipo.split(\"[]\").length>=1){\n                    direcciones=temporal; \n              /*  }else{\n                    let temporal2 = nuevoTemporal();\n                    consola.value+=temporal2+\"= heap[(int)\"+temporal+\"];\\n\";\n                    direcciones=temporal2;\n                }    */            \n                //principalValue.valor = assignedValue;\n                if(temp.next_acc!=\"Epsilon\"){\n                    let temporal2 = nuevoTemporal();\n                    consola.value+=temporal2+\"= heap[(int)\"+temporal+\"];\\n\";\n                    direcciones=temporal2;\n                }\n            }else {\n                //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede asignar esta accion en esta asignación: '+temp+'\\n'; \n                printedTable.erEj.push({descripcion:'No se puede asignar esta accion en esta asignación: '+temp,tipo:\"semántico\", linea:temp.fila, columna:temp.columna}); \n                throw '>ERROR: No se puede asignar esta accion en esta asignación: '+temp+'\\n';\n            }\n            temp=temp.next_acc;\n            \n        }\n            if(tipo==assignedValue.tipo || tipo.split(\"[]\").length==assignedValue.tipo.split(\"[]\").length && assignedValue.tipo.split(\"[]\")[0]==\"undefined\"){\n                //la segunda condición es para ver si se le asigno un [] vacío\n                if(tipo==\"number\"||tipo==\"boolean\"){\n                    //let temporal = nuevoTemporal();\n                    //consola.value+=temporal+\"=heap[(int)\"+principalValue.valor+\"];\\n\";\n                    consola.value+=pila+\"[(int)\"+direcciones+\"]=\"+assignedValue.valor+\";\\n\";\n                }else{\n                    consola.value+=\"heap[(int)\"+direcciones+\"]=\"+assignedValue.valor+\";\\n\";\n                    //principalValue.direcciones=assignedValue.valor;\n                }\n            }else{\n               // principalValue.valor=assignedValue.valor;}else\n                //consola.value+='>f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: Incompatibilidad de tipos: ' + assignedValue.tipo + ' no se puede convertir en ' + principalValue.tipo+'\\n';  \n                printedTable.erEj.push({descripcion:'Incompatibilidad de tipos: ' + assignedValue.tipo + ' no se puede convertir en ' + principalValue,tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna}); \n                throw '>ERROR: Incompatibilidad de tipos: ' + assignedValue.tipo + ' no se puede convertir en ' + principalValue.tipo+'\\n';                \n            }\n        //}\n        //obtener el valor a cambiar y ver que  no sea const\n        //\n    }\n    function procesarImpresion(expresion, tablaDeSimbolos, ambito){\n        const valores = procesarTexto(expresion, tablaDeSimbolos, ambito);\n        consola.value+=toString(valores);\n        consola.value+=\"printf(\\\"\\\\n\\\");\\n\";\n    }\n    function procesarTexto(expresion, tablaDeSimbolos, ambito){\n        if (expresion.sentencia === SENTENCIAS.LLAMADA) {\n            const valor = procesarLlamada(expresion, tablaDeSimbolos, ambito);\n            if(valor.tipo==\"void\"){\n                //consola.value+='>f:'+expresion.fila+', c:'+expresion.columna+', ambito:'+ambito+'\\nERROR: Función de tipo void como expresión.\\n';  \n                printedTable.erEj.push({descripcion:' Función de tipo void como expresión.',tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: Función de tipo void como expresión.'; \n            }\n            //let temporal = nuevoTemporal();\n            //consola.value+=temporal+\"=\"+valor.valor+\";\\n\";\n            return {valor:[{valor:valor.valor,tipo:valor.tipo}], tipo:valor.tipo};\n        } else if (expresion.tipo === TIPO_OPERACION.NEGATIVO) {\n            const valor = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            \n            if(valor.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                return {valor:valor.valor,tipo:\"number\", direcciones:temporal};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de resta unitaria con el tipo '+valor.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de resta unitaria con el tipo.'; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.SUMA) {\n            //si valIzq es string devuleve string else number\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"+\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal, tipo:\"number\"}],tipo:\"number\"};\n            }else if(valorIzq.tipo==\"number\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"+\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal, tipo:\"number\"}],tipo:\"number\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"number\"){\n                //let temporal = nuevoTemporal();\n                //consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:[valorIzq, valorDer],tipo:\"string\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor[0].valor+\"+\"+valorDer.valor[0].valor+\";\\n\";\n                return {valor:[{valor:temporal, tipo:\"number\"}],tipo:\"number\"};\n            }else if(valorIzq.tipo==\"number\" && valorDer.tipo==\"string\"){\n                //let temporal = nuevoTemporal();\n                //consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:[valorIzq, valorDer],tipo:\"string\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                //let temporal = nuevoTemporal();\n                //consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:[valorIzq, valorDer],tipo:\"string\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"boolean\"){\n             //   let temporal = nuevoTemporal();\n              //  consola.value+=temporal+\"=h;\\n\";\n              //  consola.value+=\"t1=\"+valorIzq.valor[0].valor+\";\\n\";\n              //  consola.value+=\"t3=\"+valorDer.valor[0].valor+\";\\n\";\n               // consola.value+=\"conStrBool();\\n\";\n                return {valor:[{valor:[valorIzq, valorDer], tipo:\"string\"}],tipo:\"string\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"string\"){\n               // let temporal = nuevoTemporal();\n               // consola.value+=temporal+\"=h;\\n\";\n              //  consola.value+=\"t1=\"+valorDer.valor[0].valor+\";\\n\";\n               // consola.value+=\"t3=\"+valorIzq.valor[0].valor+\";\\n\";\n               // consola.value+=\"conBoolStr();\\n\";\n                return {valor:[{valor:[valorIzq, valorDer], tipo:\"string\"}],tipo:\"string\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de suma con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de suma con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.RESTA) {\n                const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n                const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"-\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de resta con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de resta con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MULTIPLICACION) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"*\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de multiplicación con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de multiplicación con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.DIVISION) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                    /*if (valorDer == 0){\n                    printedTable.erEj.push({descripcion:' No se puede realizar la operación de división con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                    throw 'Error: división entre 0 no está definida.';\n                }*/                \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"/\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de división con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de división con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.POTENCIA) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=\"t0=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t1=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"potencia();\";\n                consola.value+=temporal+\"=t0;\\n\";\n                return {valor:[{valor:temporal, tipo:\"number\"}],tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de potencia con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de potencia con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MODULO) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=fmod(\"+valorIzq.valor[0].valor+\",\"+valorDer.valor[0].valor+\");\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de módulo con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de módulo con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\">\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de mayor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de mayor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR_IGUAL) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\">=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de mayor o igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de mayor o igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"<\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de menor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de menor que  con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR_IGUAL) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"<=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de menor igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de menor igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.IGUAL_IGUAL) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            \n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n            //falta las comparaciones de :\n            /*\n                type - type\n                array - array\n                type - null\n                array - null\n                string - null\n                null - null\n            */\n        } else if (expresion.tipo === TIPO_OPERACION.DISTINTO) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de diferenciación con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de diferenciación con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n            //falta las diferenciación de :\n            /*\n                type - type\n                array - array\n                type - null\n                array - null\n                string - null\n                null - null\n            */\n        } else if (expresion.tipo === TIPO_OPERACION.AND) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"&&\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de AND con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de AND con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.OR) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"||\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de OR con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de OR con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.NOT) {\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=!\"+valorIzq.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de NOT con el tipos:'+valorIzq.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de NOT con el tipos:'+valorIzq.tipo; \n            }\n        }else if(expresion.tipo ==  TIPO_OPERACION.CONCATENACION){\n            const valorIzq = procesarTexto(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarTexto(expresion.operandoDer, tablaDeSimbolos, ambito);\n            return {valor:[valorIzq, valorDer], tipo:\"concatenacion\"};\n        } else if (expresion.tipo === TIPO_VALOR.NUMERO) {\n            return {valor:[{valor:expresion.valor, tipo:\"number\"}], tipo:\"number\"};\n        } else if (expresion.tipo === TIPO_VALOR.DECIMAL) {\n            return {valor:[{valor:expresion.valor, tipo:\"number\"}], tipo:\"number\"};\n        }else if (expresion.tipo === TIPO_VALOR.TRUE) {\n            return {valor:[{valor:\"1\", tipo:\"boolean\"}], tipo:\"boolean\"};\n        } else if (expresion.tipo === TIPO_VALOR.FALSE) {\n            return {valor:[{valor:\"0\", tipo:\"boolean\"}], tipo:\"boolean\"};\n        } else if (expresion.tipo === TIPO_VALOR.IDENTIFICADOR) {\n            const valIzq=procesarAccID(expresion.valor, tablaDeSimbolos, ambito);\n            return  {valor:[valIzq], tipo:valIzq.tipo};\n        }else if (expresion.tipo === TIPO_VALOR.CADENA) {\n            let initial = nuevoTemporal();\n            let direcciones = pilas.heap;\n            consola.value+=initial+\"=h;\\n\";\n            let cadenaUpdated =  sustituirEscapes(expresion);\n            for(let i =0;i<cadenaUpdated.length;i++){\n                consola.value+=\"heap[(int)h]=\"+ cadenaUpdated.charCodeAt(i)+\";\\nh=h+1;\\n\";\n                heapPush();\n            }\n            consola.value+=\"heap[(int)h]=-1;\\nh=h+1;\\n\";\n            heapPush();\n            return {valor:[{valor:initial, tipo: \"string\"}], tipo: \"string\", direcciones:initial};\n        } else if (expresion.tipo === TIPO_VALOR.CADENA_CHARS) {\n            let initial = nuevoTemporal();\n            let direcciones = pilas.heap;\n            consola.value+=initial+\"=h;\\n\";\n            let cadenaUpdated =  sustituirEscapes(expresion);\n            for(let i =0;i<cadenaUpdated.length;i++){\n                consola.value+=\"heap[(int)h]=\"+ cadenaUpdated.charCodeAt(i)+\";\\nh=h+1;\\n\";\n                heapPush();\n            }\n            consola.value+=\"heap[(int)h]=-1;\\nh=h+1;\\n\";\n            heapPush();\n            return { valor: [{valor:initial, tipo: \"string\"}], tipo: \"string\" , direcciones:initial};\n        } else if(expresion.tipo===TIPO_DATO.OPERADOR_TERNARIO){\n            let logica =  procesarTexto(expresion.logica, tablaDeSimbolos, ambito);\n            if(logica.tipo==\"boolean\"){\n                return logica.valor? procesarTexto(expresion.result1, tablaDeSimbolos, ambito):procesarTexto(expresion.result2, tablaDeSimbolos, ambito);\n            }\n        } else {\n            throw 'ERROR: expresión numérica no válida: ' + expresion.valor;\n        }\n    }\n    function toString(cadena, tablaDeSimbolos, ambito){\n        let text= \"\";\n        if(Array.isArray(cadena.valor)){\n            text+=toString(cadena.valor, tablaDeSimbolos, ambito);\n        }else{\n                for(let elem of cadena){\n                if(Array.isArray(elem.valor)){\n                    text+=toString(elem.valor, tablaDeSimbolos, ambito);\n                }else if(elem.tipo==\"number\"){\n                    if(typeof elem.valor === 'number'){\n                        if(elem.valor%1===0){\n                            text+=\"printf(\\\"%d\\\", (int)\"+elem.valor+\");\\n\"; \n                        }else{\n                           text+=\"printf(\\\"%f\\\", (double)\"+elem.valor+\");\\n\"; \n                        }\n                    }else {\n                        text+=\"printf(\\\"%f\\\", \"+elem.valor+\");\\n\";\n                    }              \n                }else if(elem.tipo==\"boolean\"){\n                    text+=\"t3=\"+elem.valor+\";\\nboolToStr();\\n\";\n                }else if(elem.tipo==\"string\"){\n                    text+=\"t0=\"+elem.valor+\";\\nimprimir();\\n\";\n                }\n            } \n        }   \n        return text;\n    }\n    function sustituirEscapes(cadena){\n        cadena.valor=String(cadena.valor).replace(/\\\\n/g,'\\n')\n        cadena.valor=String(cadena.valor).replace(/\\\\t/g,'\\t')\n        cadena.valor=String(cadena.valor).replace(/\\\\r/g,'\\r')\n        cadena.valor=String(cadena.valor).replace(/\\\\\"/g,'\\\"')\n        cadena.valor=String(cadena.valor).replace(/\\\\\\\\\"/g,'\\\\')\n        return cadena.valor;\n    }\n    function crearSimbolo(var_type, id, data_type, valor, ambito, tablaDeSimbolos, fila, columna){\n        consola.value+=\"//comienza declaracion de variable \"+id+\"\\n\";\n        //Verificar que exista el tipo de dato de la variable\n        data_type=procesarDataType(data_type);  //establece el tipo de la variable que es obligatorio declarar\n        if(!tablaDeSimbolos.existe(data_type.split(\"[]\")[0], undefined, \"type\") && data_type.split(\"[]\")[0]!=\"number\" && data_type.split(\"[]\")[0]!=\"string\" && data_type.split(\"[]\")[0]!=\"boolean\"){\n            //consola.value+='>f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: No existe el tipo de dato:'+data_type.split(\"[]\")[0]+'.\\n';  \n            printedTable.erEj.push({descripcion:'No existe el tipo de dato:'+data_type.split(\"[]\")[0]+'.',tipo:\"semántico\", linea:fila, columna:columna,ambito:ambito});\n            throw '>ERROR: No existe el tipo de dato:'+data_type.split(\"[]\")[0]+'.'; \n        }\n        \n        //Verificar que no exista en el mismo ámbito\n        if(tablaDeSimbolos.existe(id, ambito, \"variable\")){\n            //consola.value+='>f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: El identificador:\\\"'+id+'\\\" ya ha sido declarado en este ámbito.\\n';  \n            printedTable.erEj.push({descripcion:'El identificador:\\\"'+id+'\\\" ya ha sido declarado en este ámbito',tipo:\"semántico\", linea:fila, columna:columna,ambito:ambito});\n            throw '>ERROR: El identificador:\\\"'+id+'\\\" ya ha sido declarado en este ámbito'; \n        }\n        \n        //Ver que el tipo de símbolo sea el correcto con el del valor o undefined\n        if(var_type==TIPO_VARIABLE.CONST && valor == \"undefined\"){\n            //consola.value+='>f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: La delcaracion de la constante '+id+' debe ser inicializada.\\n';  \n            printedTable.erEj.push({descripcion:'La delcaracion de  la constante '+id+' debe ser inicializada.\\n',tipo:\"semántico\", linea:fila, columna:columna,ambito:ambito});\n            throw '>ERROR:La delcaracion de  la constante '+id+' debe ser inicializada.\\n';             \n        }\n        //let heapInit = pilas.heap;\n        if(valor!=\"undefined\"){\n            valor=procesarExpresionNumerica(valor, tablaDeSimbolos, ambito, data_type.split(\"[]\")[0]);\n            if(valor.tipo==\"number\"||valor.tipo==\"boolean\"){\n                //valor.direcciones=pilas.heap;\n                let pila = (ambito==\"Global\")?\"heap\":\"stack\", puntero=(ambito==\"Global\")?\"h\":\"p\";\n            //    if(valor.reference==true){\n                    //let temp = nuevoTemporal();\n                    /*valor.direcciones=nuevoTemporal();\n                    consola.value+=valor.direcciones+\"=h;\\nh=h+1;\\n\";\n                    consola.value+=temp+\"=heap[(int)\"+valor.valor+\"];\\nheap[(int)\"+valor.direcciones+\"]=\"+temp+\";\\n\";*/\n                    valor.direcciones=nuevoTemporal();\n                    consola.value+=valor.direcciones+\"=\"+puntero+\";\\n\";\n                    consola.value+=puntero+\"=\"+puntero+\"+1;\\n\";\n                    //consola.value+=temp+\"=\"+valor.valor+\";\\n\";\n                    //consola.value+=valor.direcciones+\"=h;\\n\";\n                    consola.value+=pila+\"[(int)\"+valor.direcciones+\"]=\"+valor.valor+\";\\n\";\n              /*  }else{\n                    valor.direcciones=nuevoTemporal();\n                    consola.value+=valor.direcciones+\"=h;\\n\";\n                    consola.value+=\"heap[(int)\"+valor.direcciones+\"]=\"+valor.valor+\";\\nh=h+1;\\n\";\n                }\n                heapPush();*/\n            }\n            if(valor.reference && valor.tipo!=\"number\" && valor.tipo !=\"boolean\"){\n                //heapInit=valor.valor;\n                valor.direcciones=valor.valor;\n            }\n        }else{\n            if(data_type==\"number\"){\n                valor={valor:0,tipo:\"number\", direcciones:nuevoTemporal()};\n                consola.value+=valor.direcciones+\"=h;\\n\"\n                consola.value+=\"heap[(int)\"+valor.direcciones+\"]=0;\\nh=h+1;\";\n                heapPush();\n            }else if(data_type==\"boolean\"){\n                valor={valor:0, tipo:\"boolean\"};\n                consola.value+=\"heap[(int)\"+valor.direcciones+\"]=false;\\nh=h+1;\";\n                heapPush();\n            }else{\n                valor={valor:0, tipo:data_type};\n                consola.value+=\"heap[(int)h]=0;\\nh=h+1;\";\n            }\n        }\n        if(data_type!=valor.tipo){  //se descarta la inferencia de tipos\n            //consola.value+='f:'+fila+', c:'+columna+', ambito:'+ambito+'\\nERROR: Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + data_type+\".\\n\";\n            printedTable.erEj.push({descripcion:'Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + data_type,ambito:ambito,tipo:\"semántico\", linea:fila, columna:columna});\n            throw 'ERROR: Incompatibilidad de tipos: ' + valor.tipo + ' no se puede convertir en ' + data_type;\n        }\n        //Crear simbolo\n        if(valor.tipo.split(\"[]\").length>1 || tablaDeSimbolos.existe(valor.tipo.split(\"[]\")[0], undefined, \"type\") || ambito==\"Global\" || valor.tipo==\"string\"){\n            //se va  al heap\n            if(valor.tipo==\"string\"){\n                tablaDeSimbolos.agregar(var_type, id, data_type, ambito, fila, columna, valor.valor);\n            }else if(valor.tipo.split(\"[]\").length>1){\n                tablaDeSimbolos.agregar(var_type, id, data_type, ambito, fila, columna, valor.direcciones);\n            }else{\n                //consola.value+=\"heap[(int)h]=\"+ valor.valor+\";\\nh=h+1;\\n\";\n                tablaDeSimbolos.agregar(var_type, id, data_type, ambito, fila, columna, valor.direcciones);\n            }\n        }else{\n            //se va al stack\n            //consola.value+=\"stack[(int)p]=\"+ valor.valor+\";\\np=p+1;\\n\";\n            tablaDeSimbolos.agregar(var_type, id, data_type, ambito, fila, columna, valor.direcciones);\n        }\n        consola.value+=\"//termina declaracion de variable \"+id+\"\\n\";\n    }\n    function procesarExpresionNumerica(expresion, tablaDeSimbolos, ambito, userType) {\n        if (expresion.sentencia === SENTENCIAS.LLAMADA) {\n            const valor = procesarLlamada(expresion, tablaDeSimbolos, ambito);\n            if(valor.tipo==\"void\"){\n                //consola.value+='>f:'+expresion.fila+', c:'+expresion.columna+', ambito:'+ambito+'\\nERROR: Función de tipo void como expresión.\\n';  \n                printedTable.erEj.push({descripcion:' Función de tipo void como expresión.',tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: Función de tipo void como expresión.'; \n            }\n            //let temporal = nuevoTemporal();\n            //consola.value+=temporal+\"=\"+valor.valor+\";\\n\";\n            return {valor:valor.valor,tipo:valor.tipo};\n        } else if (expresion.tipo === TIPO_OPERACION.NEGATIVO) {\n            const valor = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            if(valor.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=-\"+valor.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de resta unitaria con el tipo '+valor.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de resta unitaria con el tipo.'; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.SUMA) {\n            //si valIzq es string devuleve string else number\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else if(valorIzq.tipo==\"number\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"conStrNum();\\n\";\n                return {valor:temporal,tipo:\"string\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"+\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else if(valorIzq.tipo==\"number\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"conNumStr();\\n\";\n                return {valor:temporal,tipo:\"string\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"concatenar();\\n\";\n                return {valor:temporal,tipo:\"string\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"conStrBool();\\n\";\n                return {valor:temporal,tipo:\"string\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"conBoolStr();\\n\";\n                return {valor:temporal,tipo:\"string\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de suma con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de suma con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.RESTA) {\n                const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n                const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"-\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de resta con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de resta con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MULTIPLICACION) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"*\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de multiplicación con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de multiplicación con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.DIVISION) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                if (valorDer.valor == 0){\n                    printedTable.erEj.push({descripcion:' división entre 0 no está definida.',tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                    throw 'Error: división entre 0 no está definida.';\n                }                \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"/\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de división con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de división con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.POTENCIA) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){                \n                let temporal = nuevoTemporal();\n                consola.value+=\"t0=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t3=\"+valorIzq.valor+\";\\n\";\n                consola.value+=\"t1=\"+valorDer.valor+\";\\n\";\n                consola.value+=\"potencia();\";\n                consola.value+=temporal+\"=t0;\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de potencia con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de potencia con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MODULO) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=fmod(\"+valorIzq.valor+\",\"+valorDer.valor+\");\\n\";\n                return {valor:temporal,tipo:\"number\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de módulo con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de módulo con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\">\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de mayor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de mayor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MAYOR_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\">=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de mayor o igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de mayor o igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"<\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de menor que con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de menor que  con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.MENOR_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"<=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de menor igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de menor igual con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.IGUAL_IGUAL) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            \n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\")){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1 && valorDer.tipo.split(\"[]\").length>1){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\") ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo.split(\"[]\").length>1 ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\"  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo==\"string\" ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"==\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.DISTINTO) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            \n            if(valorIzq.tipo==\"number\" && valorDer.tipo==\"number\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\" && valorDer.tipo==\"string\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\")){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1 && valorDer.tipo.split(\"[]\").length>1){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(tablaDeSimbolos.existe(valorIzq.tipo, undefined, \"type\") && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && tablaDeSimbolos.existe(valorDer.tipo, undefined, \"type\") ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo.split(\"[]\").length>1  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo.split(\"[]\").length>1 ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if(valorIzq.tipo==\"string\"  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */ && valorDer.tipo==\"string\" ){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else if( valorIzq.valor==\"0\" && valorIzq.tipo!=\"number\"/*el valor izquierdo es null */  && valorDer.valor==\"0\" && valorDer.tipo!=\"number\"/*el valor derecho es null */){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"!=\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de igualdad con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.AND) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"&&\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de AND con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de AND con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.OR) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            const valorDer = procesarExpresionNumerica(expresion.operandoDer, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\" && valorDer.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valorIzq.valor+\"||\"+valorDer.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de OR con los tipos:'+valorIzq.tipo+','+valorDer.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de OR con los tipos:'+valorIzq.tipo+','+valorDer.tipo; \n            }\n        } else if (expresion.tipo === TIPO_OPERACION.NOT) {\n            const valorIzq = procesarExpresionNumerica(expresion.operandoIzq, tablaDeSimbolos, ambito);\n            if(valorIzq.tipo==\"boolean\"){    \n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=!\"+valorIzq.valor+\";\\n\";\n                return {valor:temporal,tipo:\"boolean\"};\n            }else{\n                printedTable.erEj.push({descripcion:' No se puede realizar la operación de NOT con el tipos:'+valorIzq.tipo,tipo:\"semántico\", linea:expresion.fila, columna:expresion.columna,ambito:ambito});\n                throw '>ERROR: No se puede realizar la operación de NOT con el tipos:'+valorIzq.tipo; \n            }\n        } else if (expresion.tipo === TIPO_VALOR.NUMERO) {\n            return {valor:expresion.valor, tipo:\"number\"};\n        } else if (expresion.tipo === TIPO_VALOR.DECIMAL) {\n            return {valor:expresion.valor, tipo:\"number\"};\n        }else if (expresion.tipo === TIPO_VALOR.TRUE) {\n            return {valor:\"1\", tipo:\"boolean\"};\n        } else if (expresion.tipo === TIPO_VALOR.FALSE) {\n            return {valor:\"0\", tipo:\"boolean\"};\n        } else if (expresion.tipo === TIPO_VALOR.IDENTIFICADOR) {\n            const valIzq=procesarAccID(expresion.valor, tablaDeSimbolos, ambito);\n            if(valIzq.tipo==\"number\"||valIzq.tipo==\"boolean\"){\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=\"+valIzq.valor+\";\\n\";\n                valIzq.valor=temporal;\n            }\n            return  valIzq;\n        } else if (expresion.tipo === TIPO_VALOR.NULL) {\n            return { valor: \"0\", tipo: userType , tamanio:1};\n        } else if (expresion.data_type === TIPO_DATO.ARRAY) {\n            return procesarArray(expresion, tablaDeSimbolos, ambito, userType);\n        } else if (expresion.tipo.split(\"[]\").length>1){\n            return procesarArray(expresion, tablaDeSimbolos, ambito, userType);\n        } else if (expresion.tipo === TIPO_DATO.OBJETO) {\n            return procesarObjeto(expresion, tablaDeSimbolos, ambito, userType);\n        } else if (expresion.tipo === TIPO_VALOR.CADENA) {\n            let initial = nuevoTemporal();\n            let direcciones = pilas.heap;\n            consola.value+=initial+\"=h;\\n\";\n            let cadenaUpdated =  sustituirEscapes(expresion);\n            for(let i =0;i<cadenaUpdated.length;i++){\n                consola.value+=\"heap[(int)h]=\"+ cadenaUpdated.charCodeAt(i)+\";\\nh=h+1;\\n\";\n                heapPush();\n            }\n            consola.value+=\"heap[(int)h]=-1;\\nh=h+1;\\n\";\n            heapPush();\n            return {valor:initial, tipo: \"string\", direcciones:initial};\n        } else if (expresion.tipo === TIPO_VALOR.CADENA_CHARS) {\n            let initial = nuevoTemporal();\n            let direcciones = pilas.heap;\n            consola.value+=initial+\"=h;\\n\";\n            let cadenaUpdated =  sustituirEscapes(expresion);\n            for(let i =0;i<cadenaUpdated.length;i++){\n                consola.value+=\"heap[(int)h]=\"+ cadenaUpdated.charCodeAt(i)+\";\\nh=h+1;\\n\";\n                heapPush();\n            }\n            consola.value+=\"heap[(int)h]=-1;\\nh=h+1;\\n\";\n            heapPush();\n            return { valor: initial, tipo: \"string\" , direcciones:initial};\n        } else if(expresion.tipo===TIPO_DATO.OPERADOR_TERNARIO){\n            let logica =  procesarExpresionNumerica(expresion.logica, tablaDeSimbolos, ambito);\n            if(logica.tipo==\"boolean\"){\n                return logica.valor? procesarExpresionNumerica(expresion.result1, tablaDeSimbolos, ambito):procesarExpresionNumerica(expresion.result2, tablaDeSimbolos, ambito);\n            }\n        } else if (expresion.tipo===TIPO_DATO.NEW_ARRAY){\n            let valor = procesarNewArray(expresion.expresion, tablaDeSimbolos, ambito, userType);\n            return valor;\n        } else {\n            throw 'ERROR: expresión numérica no válida: ' + expresion.valor;\n        }\n    }\n    function procesarArray(arreglo, tablaDeSimbolos, ambito, userType){\n        consola.value+=\"//comienza arreglo \\n\";\n        let temporal = [], tipo=\"\";\n        let temp = arreglo.dimension;\n        let tamanio=0, direcciones=[],temporales=[],arrayHead=contadores.temporales+1;\n        temporales.push(nuevoTemporal());\n        consola.value+=temporales[tamanio]+\"=h;\\n\";\n        consola.value+=\"h=h+1;\\n\"\n        tamanio++;\n        while(temp!=\"Epsilon\"){\n            temporales.push(nuevoTemporal());\n            consola.value+=temporales[tamanio]+\"=h;\\n\";\n            consola.value+=\"h=h+1;\\n\";\n            tamanio++;\n            temp=temp.next_data;\n        }\n        consola.value+=\"heap[(int)\"+temporales[0]+\"]=\"+(tamanio-1)+\";\\n\";\n        tamanio=1;\n        temp = arreglo.dimension;\n        while(temp!=\"Epsilon\"){\n            let valor = procesarExpresionNumerica(temp.dato, tablaDeSimbolos, ambito, userType);\n            consola.value+=\"heap[(int)\"+temporales[tamanio]+\"]=\"+valor.valor+\";\\n\";\n            temporal.push(valor);\n            tamanio++;\n            temp=temp.next_data;\n        }\n        checkForMultyType(JSON.parse(JSON.stringify(temporal)), tablaDeSimbolos, ambito);\n        return {tipo:getType(temporal)+calcularDimensiones(temporal), valor:\"t\"+arrayHead, direcciones:temporales[0]};\n    }\n    function checkForMultyType(arreglo, tablaDeSimbolos, ambito){\n        arreglo = JSON.parse(JSON.stringify(arreglo));\n        if(arreglo.length>1){\n            let temp = arreglo.pop();\n            for(let temporal of arreglo){\n                if(temp.tipo!=temporal.tipo){\n                    if(temp.tipo.split(\"[]\")[0]==\"undefined\" && temporal.tipo.split(\"[]\")[0]==\"undefined\"){\n                        //no es error solo están vacíos\n                        arreglo.push(temp);\n                    }else if(temp.tipo.split(\"[]\")[0]==\"undefined\"){\n                        temp.tipo=temporal.tipo;\n                        arreglo.push(temp);\n                    }else if(temporal.tipo.split(\"[]\")[0]==\"undefined\"){\n                        temporal.tipo=temp.tipo;\n                        arreglo.push(temp);\n                    }else{         \n                        arreglo.push(temp);               \n                        consola.value+='>ERROR: No se permiten los arreglos multitype->'+toString({valor:arreglo, tipo:TIPO_DATO.ARRAY}, tablaDeSimbolos, ambito);  \n                        throw '>ERROR: No se permiten los arreglos multitype'+toString({valor:arreglo, tipo:TIPO_DATO.ARRAY}, tablaDeSimbolos, ambito);\n                    }\n                }\n            }\n        }\n    }\n    function getType(valor){\n        while(Array.isArray(valor)){\n            valor=valor[0];\n        }\n        if(valor==undefined) return \"undefined\";\n        return valor.tipo;\n    }\n    function calcularDimensiones(valor){\n        let contador=\"\";\n        while(Array.isArray(valor)){\n            contador+=\"[]\";\n            valor=valor[0];\n        }\n        return contador;\n    }\n    function procesarObjeto(instruccion, tablaDeSimbolos, ambito, userType){\n        if(!tablaDeSimbolos.existe(userType, undefined, \"type\")){\n            printedTable.erEj.push({descripcion:'No existe el type:'+userType+'.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n            throw '>ERROR: No existe el type:'+userType+'.\\n';                       \n        }  \n        let attb =[], tamanio=0;\n        let temp = instruccion.atributos;\n        while(temp!=\"Epsilon\"){\n            attb.push(nuevoTemporal());\n            consola.value+=attb[tamanio]+\"=h;\\n\";\n            consola.value+=\"h=h+1;\\n\";\n            tamanio++;\n            temp=temp.next;\n        }\n        let tipo = tablaDeSimbolos.obtenerType(userType);\n        if(tipo.atributos.length!=attb.length){\n            printedTable.erEj.push({descripcion:'Se deben inicializar todos los atributos del type.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n            throw '>ERROR: Se deben inicializar todos los atributos del type.\\n'; \n        }\n        temp = instruccion.atributos;\n        let count =0;\n        let direcciones = [];\n        while(temp!=\"Epsilon\"){\n            //consola.value+=nuevoTemporal()+\"=\"+\"h;\\nh=h+1;\\n\";\n            /*let temporalHeap = pilas.heap, temporalInit=contadores.temporales+1, dir;\n            let valor = procesarExpresionNumerica(temp.valor, tablaDeSimbolos, ambito, userType);\n            if(valor.tipo==\"number\"||valor.tipo==\"boolean\"){\n                dir = nuevoTemporal();\n                consola.value+=dir+\"=h;\\n\";\n                consola.value+=\"heap[(int)\"+dir+\"]=\"+valor.valor+\";\\nh=h+1;\\n\";\n                heapPush();\n                valor.direcciones=dir;\n            }*/\n\n            let valor = procesarExpresionNumerica(temp.valor, tablaDeSimbolos, ambito, userType);\n            consola.value+=\"heap[(int)\"+attb[count]+\"]=\"+valor.valor+\";\\n\";\n            //temporal.push(valor);\n            //heapPush();\n            if(tablaDeSimbolos.existe(tipo.atributos[count].tipo.split(\"[]\")[0], undefined, \"type\")&&valor.valor==\"0\"){\n                if(valor.tipo!=tipo.atributos[count].tipo){\n                    printedTable.erEj.push({descripcion:'No coincide el tipo del atributo '+tipo.atributos[count].id+'.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                    throw '>ERROR: No coincide el tipo del atributo '+tipo.atributos[count].id+'.\\n'; \n                }\n            }\n            //direcciones[count]={id:attb[count].id,direcciones:valor.direcciones};\n            //consola.value+=\"heap[(int)t\"+temporalInit+\"]=\"+valor.valor+\";\\n\";\n            temp=temp.next;\n            //temporalInit++;\n            count++;\n            /**/\n        }      \n        consola.value+=\"//termina declaracion de objeto de tipo \"+userType+\" \\n\";\n        return { tipo:userType, direcciones:attb[0], valor:attb[0]};\n    }\n    function ExistingAttribute(typeID, attributeID, tablaDeSimbolos){\n        let type = tablaDeSimbolos.obtenerType(typeID);\n        let contador = 0;\n        for(let attribute of type.atributos){\n            if(attribute.id==attributeID){\n                return {valor:attribute, posicion:contador};\n            }\n            contador++;\n        }\n        return false;\n    }\n    function procesarAccID(instruccion, tablaDeSimbolos, ambito){\n        let principalValue = tablaDeSimbolos.obtenerSimbolo(instruccion.id, SplitAmbitos(ambito), instruccion.fila, instruccion.columna);\n        //determinar si se busca en el stack o en el heap\n        let pila = \"\";\n        if(principalValue.tipo.split(\"[]\").length>1 || tablaDeSimbolos.existe(principalValue.tipo.split(\"[]\")[0], undefined, \"type\") || ambito==\"Global\" || principalValue.tipo==\"string\"||principalValue.ambito==\"Global\"){\n            pila=\"heap\";\n        }else{\n            pila=\"stack\";\n        }        \n        let temp = instruccion.acc;\n        //se lo cambio a esta parte porque si es un number o boolean no tiene por qué tener acceso a una posición o atributo o método\n        if(principalValue.tipo ==\"number\" || principalValue.tipo==\"boolean\"){\n            let temporal = nuevoTemporal();\n            consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n            principalValue.valor=temporal;\n        }else if(pila==\"stack\"){\n            let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n            consola.value+=temporal+\"=stack[(int)\"+principalValue.valor+\"];\\n\";//dirección en el heap\n            consola.value+=temporal2+\"=heap[(int)\"+temporal+\"];\\n\";\n            principalValue.valor=temporal2;\n        }\n        while(temp!=\"Epsilon\"){\n            if(temp.acc_type==TIPO_ACCESO.ATRIBUTO){//B\n                //comprobar que exista la propiedad\n                let value = ExistingAttribute(principalValue.tipo, temp.atributo, tablaDeSimbolos);\n                //comprobar que el valor sea del mismo tipo del atributo o null\n                if(value == false){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No existe el atributo '+temp.atributo+'\\n';  \n                    printedTable.erEj.push({descripcion:'No existe el atributo '+temp.atributo,tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No existe el atributo '+temp.atributo+'\\n';\n                }\n                //para cuando sean atributos nulos\n                if(principalValue.valor==null && tablaDeSimbolos.existe(principalValue.tipo, undefined, \"type\")){\n                    break;\n                }\n              //  consola.value+=finalDirection+\"=\"+finalDirection+\"+\"+value.posicion+\";\\n\";\n             //   if(value.valor.tipo==\"number\"||value.valor.tipo==\"boolean\"){\n                    let temporal1=nuevoTemporal(),temporal2=nuevoTemporal(); \n                    consola.value+=temporal1+\"=\"+principalValue.valor+\"+\"+(value.posicion)+\";\\n\";\n                    consola.value+=temporal2+\"= heap[(int)\"+temporal1+\"];\\n\";\n                    principalValue.valor=temporal2;\n                    principalValue.tipo=value.valor.tipo;\n                    //no sé por qué había separado los tipos tengo que ver \n              /*  }else{\n                    let temporal1=nuevoTemporal();\n                    consola.value+=temporal1+\"=\"+principalValue.valor+\"+\"+value.posicion+\";\\n\";\n                    principalValue.valor=temporal1;\n                    principalValue.tipo=value.valor.tipo;\n                }*/\n            }else if(temp.acc_type==TIPO_ACCESO.POSICION){//B\n                //comprobar que sea un array\n                /*\n                se crea un conflicto cuando se pasa a una variable del tipo:\n                let a : number [][] = [[1,2,3],[4,5,6]];\n                let i :number = 0;\n                let b:number[] = a[i];  //nose sabría el valor de la posición a menos que se ingrese con un número\n                let b : number [] = a[0];                   \n                */\n                if(principalValue.tipo.split(\"[]\")==1){\n                // if(principalValue.tipo!=TIPO_DATO.ARRAY){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: Intento de acceso a posición de array inexistente\\n';  \n                    printedTable.erEj.push({descripcion:'Intento de acceso a posición de array inexistente',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: Intento de acceso a posición de array inexistente\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.index, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"number\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se reconoce la expresion '+valor.valor+' como un index.\\n';  \n                    printedTable.erEj.push({descripcion:'No se reconoce la expresion '+valor.valor+' como un index.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR:No se reconoce la expresion '+valor.valor+' como un index.\\n';                      \n                }\n                //principalValue.direcciones = principalValue.direcciones[valor.valor];\n                //no sabemos el valor de la posición del array \n                let tipo =\"\";\n                for(let e =0;e<principalValue.tipo.split(\"[]\").length-1;e++){\n                    if(e==0)tipo+=principalValue.tipo.split(\"[]\")[e];\n                    else tipo+=\"[]\";\n                }\n                principalValue.tipo=tipo;\n              //  if(principalValue.tipo==\"number\" || principalValue.tipo==\"boolean\" || principalValue.tipo.split(\"[]\").length>1){\n                    let temporal1=nuevoTemporal(),temporal2=nuevoTemporal(),temporal3=nuevoTemporal();\n                    consola.value+=temporal1+\"=\"+valor.valor+\"+1;\\n\";\n                    consola.value+=temporal2+\"=\"+principalValue.valor+\"+\"+temporal1+\";\\n\";\n                    consola.value+=temporal3+\"= heap[(int)\"+temporal2+\"];\\n\";\n                    principalValue.valor=temporal3;\n             /*   }else{\n                    let suma = nuevoTemporal();\n                    consola.vlaue+=suma+\"=\"+valor.valor+\"+1;\\n\";\n                    principalValue.valor=principalValue.valor+\"[\"+suma+\"]\";\n                }*/\n            }else if(temp.sentencia==SENTENCIAS.LENGTH){//R\n                if(principalValue.tipo.split(\"[]\").length>1 || principalValue.tipo ==\"string\"){\n                    if(principalValue.tipo ==\"string\"){\n                        consola.value+=\"t4=\"+principalValue.valor+\";\\n\";\n                        let temporal = nuevoTemporal(), posicion = nuevoTemporal();\n                        consola.value+=\"strLength();\\n\"\n                        consola.value+=temporal+\"= t4-\"+principalValue.valor+\";\\n\";\n                        consola.value+=posicion+\"=h;\\n\"+pila+\"[(int)\"+posicion+\"]=\"+temporal+\";\\n\";\n                        principalValue.valor= posicion;\n                        principalValue.tipo=\"number\";\n                    }else{\n                        let temporal = nuevoTemporal();\n                        consola.value+=temporal+\"=\"+principalValue.valor+\";\\n\";\n                        principalValue.valor=temporal;\n                        principalValue.tipo=\"number\";\n                    }            \n                }else{\n                    // if(principalValue.tipo!=TIPO_DATO.ARRAY){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: Intento de Length a un array inexistente.\\n';  \n                    printedTable.erEj.push({descripcion:'Intento de Length a un array inexistente.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: Intento de Length a un array inexistente.\\n';     \n                }                \n                //principalValue={valor:principalValue.valor.length, tipo:\"number\"};\n                break;\n            }else if(temp.sentencia==SENTENCIAS.CHAR_AT){\n                if(principalValue.tipo!=\"string\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede obtener un CharAt en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede obtener un CharAt en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede obtener un CharAt en '+principalValue.tipo+'.\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.valor, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"number\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: '+valor.tipo+' no se puede usar como un índice en CharAt.\\n';  \n                    printedTable.erEj.push({descripcion:''+valor.tipo+' no se puede usar como un índice en CharAt',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: '+valor.tipo+' no se puede usar como un índice en CharAt.\\n';                    \n                }\n                let temporal1= nuevoTemporal(),temporal2 = nuevoTemporal(), temporal3=nuevoTemporal();\n                consola.value+=temporal1+\"=\"+principalValue.valor+\"+\"+valor.valor+\";\\n\";\n                consola.value+=temporal3+\"=heap[(int)\"+temporal1+\"];\\n\";\n                consola.value+=temporal2+\"=h;\\nheap[(int)\"+temporal2+\"]=\"+temporal3+\";\\nh=h+1;\\nheap[(int)h]=-1;\\nh=h+1;\\n\"\n                principalValue.valor=temporal2;\n                break;\n            }else if(temp.sentencia==SENTENCIAS.TO_LOWER_CASE){\n                if(principalValue.tipo!=\"string\"){\n                    //consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede realizar un toLowerCase en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede realizar un toLowerCase en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede realizar un toLowerCase en '+principalValue.tipo+'.\\n';                    \n                }\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\nt0=\"+principalValue.valor+\";\\n\";\n                consola.value+=\"toLowerCase();\\n\";\n                principalValue.valor=temporal;\n                break;\n            }else if(temp.sentencia==SENTENCIAS.TO_UPPER_CASE){\n                if(principalValue.tipo!=\"string\"){\n                   // consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede realizar un toLowerCase en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede realizar un toUpperCase en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede realizar un toUpperCase en '+principalValue.tipo+'.\\n';                    \n                }\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\nt0=\"+principalValue.valor+\";\\n\";\n                consola.value+=\"toUpperCase();\\n\";\n                principalValue.valor=temporal;\n                break;\n            }else if(temp.sentencia==SENTENCIAS.CONCAT){\n                if(principalValue.tipo!=\"string\"){\n                   // consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede realizar un toUpperCase en '+principalValue.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede realizar un toUpperCase en '+principalValue.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede realizar un toUpperCase en '+principalValue.tipo+'.\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.valor, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"string\"){\n                   // consola.value+='>f:'+temp.fila+', c:'+temp.columna+', ambito:'+ambito+'\\nERROR: No se puede concatenar '+valor.tipo+'.\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede concatenar '+valor.tipo+'.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No se puede concatenar '+valor.tipo+'.\\n';                    \n                }\n                let temporal = nuevoTemporal();\n                consola.value+=temporal+\"=h;\\n\";\n                consola.value+=\"t1=\"+principalValue.valor+\";\\n\";\n                consola.value+=\"t3=\"+valor.valor+\";\\n\";\n                consola.value+=\"concatenar();\\n\";   \n                principalValue.valor=temporal;             \n                break;\n            }\n            temp=temp.next_acc;\n        }\n      /* aca estaba lo de la línea 1280 */\n        return {valor: principalValue.valor, tipo:principalValue.tipo, reference:true};   \n    }\n    function SplitAmbitos(name){\n        let ar = name.split(\"_\");\n        let er =[];\n        for(let i =ar.length-1;i>=0;i--){\n          let x=\"\";\n          for(let e =0;e<=i;e++){\n            if(e==0){\n              x+=ar[e];\n            }else{\n              x+=\"_\"+ar[e];\n            }    \n          }\n          er.push(x);\n        }\n        er.push(\"Global\");\n        return er;\n    }\n    function procesarLlamada(instruccion, tablaDeSimbolos, ambito){\n        let funcion = tablaDeSimbolos.obtenerFuncion(instruccion.id, instruccion.fila, instruccion.columna, ambito);\n        if(ambito==GetAmbito(instruccion.id) || instruccion.id.split(\"_\").length==1 || instruccion.id==ambito){ //la tercera condición es para que acepte las llamadas recursivas de funciones desasinadas\n            if (funcion.parametros.length != 0 && instruccion.parametros == \"Epsilon\") {\n                //consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.';\n                printedTable.erEj.push({descripcion:'La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                throw 'ERROR: La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.';\n            } else if (funcion.parametros.length == 0 && instruccion.parametros != \"Epsilon\") {\n                //consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.';\n                printedTable.erEj.push({descripcion:'La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                throw 'ERROR:La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados.';\n            }else{\n                let argumentos = [];\n                let temp = instruccion.parametros;\n                while(temp!=\"Epsilon\"){\n                    argumentos.push(procesarExpresionNumerica(temp.expresion, tablaDeSimbolos, ambito));\n                    temp=temp.siguiente;\n                }\n                const tsFuncion = new TS(tsGlobal.simbolos.slice(), printedTable);\n                const tsTemp = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                consola.value+=\"//insertar parámetrso en el stack\\n\";\n                let apuntador = nuevoTemporal();\n                consola.value+=apuntador+\"=p;\\n\";\n                for(let i = 0; i < funcion.parametros.length;i++){\n                    if(funcion.parametros[i].tipo==argumentos[i].tipo){\n                        //se acepta el argumento para ser usado por los parámetros\n                       // tsTemp.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, argumentos[i].tipo, argumentos[i].valor, instruccion.id, \"temp\", \"temp\");\n                       // tsFuncion.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, argumentos[i].tipo, argumentos[i].valor, instruccion.id, \"temp\", \"temp\");\n                       let temporal = nuevoTemporal();\n                       consola.value+=temporal+\"=\"+apuntador+\"+\"+(i+1)+\";\\n\";\n                       consola.value+=\"stack[(int)\"+temporal+\"]=\"+argumentos[i].valor+\";\\n\";\n                    }/*else if(argumentos[i].tipo.split(\"[]\")[0]==\"undefined\" && funcion.parametros[i].tipo==getType(argumentos[i].valor)+calcularDimensiones(argumentos[i].valor)){\n                        //se acepta el argumento para ser usado por los parámetros\n                        tsTemp.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, argumentos[i].tipo, argumentos[i].valor, instruccion.id, \"temp\", \"temp\");\n                        tsFuncion.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, argumentos[i].tipo, argumentos[i].valor, instruccion.id, \"temp\", \"temp\");\n                    }*/else if(tablaDeSimbolos.existe(funcion.parametros[i].tipo, undefined, \"type\") && argumentos[i].valor==\"0\"){\n                        //para que acepte los nulls    \n                        tsTemp.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, funcion.parametros[i].tipo, argumentos[i].valor, instruccion.id, \"temp\", \"temp\");\n                        tsFuncion.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, funcion.parametros[i].tipo, argumentos[i].valor, instruccion.id, \"temp\", \"temp\");\n                    }else{\n                        consola.value+='ERROR:f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\n La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados, error de tipos.';\n                        printedTable.erEj.push({descripcion:'La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados, error de tipos.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                        throw 'ERROR:La función ' + instruccion.id + ' no puede ser ejecutado con los parámetros dados, error de tipos.';\n                    }\n                }               \n                /*\n                    let returnedAcction;\n                    if(instruccion.id.split(\"_\").length>1){\n                        returnedAcction = procesarBloque(funcion.accion, tsTemp, instruccion.id);\n                    }else{\n                        returnedAcction = procesarBloque(funcion.accion, tsFuncion, instruccion.id);\n                    }\n                    if(returnedAcction!=undefined){\n                    //if(returnedAcction.sentencia===SENTENCIAS.BREAK){\n                    //    consola.value+='>ERROR: Break fuera de un ciclo.';  \n                    //    throw '>ERROR: Break fuera de un ciclo.';  \n                    //}else\n                    if(returnedAcction.sentencia===SENTENCIAS.RETURN){\n                        if(returnedAcction.valor==\"undefined\" && funcion.tipo==\"void\"){\n                            return {tipo:\"void\"};\n                            //todo bien\n                        }else if(returnedAcction.valor==\"undefined\" && funcion.tipo!=\"void\"){\n                            consola.value+='>ERROR:f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\n No se puede asignar void a '+funcion.tipo+'.\\n';  \n                            printedTable.erEj.push({descripcion:'  No se puede asignar void a '+funcion.tipo+'.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                            throw '>ERROR: No se puede asignar void a '+funcion.tipo+'.'; \n                        }else if(tablaDeSimbolos.existe(instruccion.id, undefined, \"type\") && returnedAcction.valor.valor==null){\n                            //función de un type no nativo devulve null\n                        }else if(returnedAcction.valor.tipo.split(\"[]\")[0]==\"undefined\" && funcion.tipo==getType(returnedAcction.valor.valor)+calcularDimensiones(returnedAcction.valor.valor)){\n                            //todo bien\n                        }else if(returnedAcction.valor.tipo!=funcion.tipo){\n                            consola.value+='>ERROR:f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\n No se puede asignar '+returnedAcction.valor.tipo+' a '+funcion.tipo+'.';  \n                            printedTable.erEj.push({descripcion:'No se puede asignar '+returnedAcction.valor.tipo+' a '+funcion.tipo+'.',tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna,ambito:ambito});\n                            throw '>ERROR: No se puede asignar '+returnedAcction.valor.tipo+' a '+funcion.tipo+'.'; \n                        } \n                        return returnedAcction.valor; \n                    }\n                    }*/\n                    consola.value+=instruccion.id+\"();\\n\";\n                    if(funcion.tipo!=\"void\"){\n                        let temporal=nuevoTemporal();\n                        consola.value+=temporal+\"=stack[(int)p];\\np=p+1;\\n\"\n                        return {valor:temporal, tipo:funcion.tipo};\n                    }\n                //declarar parámetros con los valores de los argumentos\n            }\n        }else{\n            consola.value+='>ERROR:f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\n No se puede ejecutar '+instruccion.id+' desde el ámbito '+ambito+'.\\n';  \n            throw '>ERROR: No se puede ejecutar '+instruccion.id+' desde el ámbito '+ambito+'.\\n'; \n        }        \n    }\n    function GetAmbito(ambito){\n        let text=\"\";\n        if(ambito!=\"Global\"){\n            let temp = ambito.split(\"_\");\n            for(let i =0; i<temp.length-1;i++){\n                if(i==0){\n                    text+=ambito.split(\"_\")[i];\n                }else{\n                    text+=\"_\"+ambito.split(\"_\")[i];\n                }\n            }\n        }\n        return text;\n    }\n    function getArguments(instruccion, tablaDeSimbolos, ambito){\n        let argumentos = [];\n        let temp = instruccion;\n        while(temp!=\"Epsilon\"){\n            argumentos.push(procesarExpresionNumerica(temp.expresion, tablaDeSimbolos, ambito));\n            temp=temp.siguiente;\n        }\n        return argumentos;\n    }\n    function procesarUnicambios(instruccion, tablaDeSimbolos, ambito){\n        let principalValue = tablaDeSimbolos.obtenerSimbolo(instruccion.id.id, SplitAmbitos(ambito), instruccion.fila, instruccion.columna);\n        //determinar si se busca en el stack o en el heap\n        let pila = \"\";\n        if(principalValue.tipo.split(\"[]\").length>1 || tablaDeSimbolos.existe(principalValue.tipo.split(\"[]\")[0], undefined, \"type\") || ambito==\"Global\" || principalValue.tipo==\"string\"||principalValue.ambito==\"Global\"){\n            pila=\"heap\";\n        }else{\n            pila=\"stack\";\n        }        \n        let temp = instruccion.id.acc;\n        //se lo cambio a esta parte porque si es un number o boolean no tiene por qué tener acceso a una posición o atributo o método\n        if(principalValue.tipo ==\"number\" || principalValue.tipo==\"boolean\"){\n            /*let temporal = nuevoTemporal();\n            consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n            principalValue.valor=temporal;*/\n        }else if(pila==\"stack\"){\n            let temporal = nuevoTemporal();\n            consola.value+=temporal+\"=stack[(int)\"+principalValue.valor+\"];\\n\";//dirección en el heap\n            //consola.value+=temporal2+\"=heap[(int)\"+temporal+\"];\\n\";\n            //principalValue.valor=temporal2;\n            principalValue.valor=temporal;\n        }\n        while(temp!=\"Epsilon\"){\n            if(temp.acc_type==TIPO_ACCESO.ATRIBUTO){//B\n                //comprobar que exista la propiedad\n                let value = ExistingAttribute(principalValue.tipo, temp.atributo, tablaDeSimbolos);\n                //comprobar que el valor sea del mismo tipo del atributo o null\n                if(value == false){\n                   printedTable.erEj.push({descripcion:'No existe el atributo '+temp.atributo,tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: No existe el atributo '+temp.atributo+'\\n';\n                }\n                let temporal1=nuevoTemporal(); \n                consola.value+=temporal1+\"=\"+principalValue.valor+\"+\"+(value.posicion)+\";\\n\";\n                //consola.value+=temporal2+\"= heap[(int)\"+temporal1+\"];\\n\";\n                //principalValue.valor=temporal2;\n                principalValue.valor=temporal1;\n                principalValue.tipo=value.valor.tipo;\n            }else if(temp.acc_type==TIPO_ACCESO.POSICION){\n                if(principalValue.tipo.split(\"[]\")==1){\n                    printedTable.erEj.push({descripcion:'Intento de acceso a posición de array inexistente',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR: Intento de acceso a posición de array inexistente\\n';                    \n                }\n                let valor = procesarExpresionNumerica(temp.index, tablaDeSimbolos, ambito);\n                if(valor.tipo!=\"number\"){\n                    printedTable.erEj.push({descripcion:'No se reconoce la expresion '+valor.valor+' como un index.',tipo:\"semántico\", linea:temp.fila, columna:temp.columna,ambito:ambito});\n                    throw '>ERROR:No se reconoce la expresion '+valor.valor+' como un index.\\n';                      \n                }\n                let tipo =\"\";\n                for(let e =0;e<principalValue.tipo.split(\"[]\").length-1;e++){\n                    if(e==0)tipo+=principalValue.tipo.split(\"[]\")[e];\n                    else tipo+=\"[]\";\n                }\n                principalValue.tipo=tipo;\n                let temporal1=nuevoTemporal(),temporal2=nuevoTemporal();\n                consola.value+=temporal1+\"=\"+valor.valor+\"+1;\\n\";\n                consola.value+=temporal2+\"=\"+principalValue.valor+\"+\"+temporal1+\";\\n\";\n                //consola.value+=temporal3+\"= heap[(int)\"+temporal2+\"];\\n\";\n                principalValue.valor=temporal2;\n            }\n            temp=temp.next_acc;\n        }\n        if(principalValue.tipo==\"number\" || principalValue.tipo==\"string\"){\n            if(instruccion.sentencia==SENTENCIAS.INCREMENTO){\n                let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n                consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n                consola.value+=temporal2+\"=\"+temporal+\"+\"+1+\";\\n\";\n                consola.value+=pila+\"[(int)\"+principalValue.valor+\"]=\"+temporal2+\";\\n\";\n            }else if(instruccion.sentencia==SENTENCIAS.DECREMENTO){\n                let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n                consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n                consola.value+=temporal2+\"=\"+temporal+\"-\"+1+\";\\n\";\n                consola.value+=pila+\"[(int)\"+principalValue.valor+\"]=\"+temporal2+\";\\n\";\n            }else if(instruccion.sentencia==SENTENCIAS.ASIGNACION_SUMA){\n                let valor = procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos, ambito);\n                if(valor.tipo == \"number\" ||valor.tipo == \"boolean\"){\n                    //principalValue.valor+=valor.valor;\n                    let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n                    consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n                    consola.value+=temporal2+\"=\"+temporal+\"+\"+valor.valor+\";\\n\";\n                    consola.value+=pila+\"[(int)\"+principalValue.valor+\"]=\"+temporal2+\";\\n\";\n                }else if(valor.tipo == \"string\" ){\n                    if(valor.tipo==\"string\"){\n                        let temporal = nuevoTemporal();\n                        consola.value+=temporal+\"=h;\\n\";\n                        consola.value+=\"t1=heap[(int)\"+principalValue.valor+\"];\\n\";\n                        consola.value+=\"t3=\"+valor.valor+\";\\n\";\n                        consola.value+=\"concatenar();\\n\";\n                        consola.value+=\"heap[(int)\"+principalValue.valor+\"]=\"+temporal+\";\\n\";\n                    }else  if(valor.tipo==\"number\"){\n                        let temporal = nuevoTemporal();\n                        consola.value+=temporal+\"=h;\\n\";\n                        consola.value+=\"t1=heap[(int)\"+principalValue.valor+\"];\\n\";\n                        consola.value+=\"t3=\"+valor.valor+\";\\n\";\n                        consola.value+=\"conStrNum();\\n\";\n                        consola.value+=\"heap[(int)\"+principalValue.valor+\"]=\"+temporal+\";\\n\";\n                    }else{//boolean\n                        let temporal = nuevoTemporal();\n                        consola.value+=temporal+\"=h;\\n\";\n                        consola.value+=\"t1=heap[(int)\"+principalValue.valor+\"];\\n\";\n                        consola.value+=\"t3=\"+valor.valor+\";\\n\";\n                        consola.value+=\"conStrBool();\\n\";\n                        consola.value+=\"heap[(int)\"+principalValue.valor+\"]=\"+temporal+\";\\n\";\n                    }\n                }else{\n                    //consola.value+='>f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: No se puede hacer una adicción del tipo ' + valor.tipo+'\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede hacer una adicción del tipo ' + valor.tipo,tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna}); \n                    throw '>ERROR: No se puede hacer una adicción del tipo ' + valor.tipo+'\\n';                    \n                }\n            }else if(instruccion.sentencia==SENTENCIAS.ASIGNACION_RESTA){\n                let valor = procesarExpresionNumerica(instruccion.valor, tablaDeSimbolos, ambito);\n                if(valor.tipo == \"number\" ||valor.tipo == \"boolean\"){\n                    let temporal = nuevoTemporal(), temporal2=nuevoTemporal();\n                    consola.value+=temporal+\"=\"+pila+\"[(int)\"+principalValue.valor+\"];\\n\";\n                    consola.value+=temporal2+\"=\"+temporal+\"-\"+valor.valor+\";\\n\";\n                    consola.value+=pila+\"[(int)\"+principalValue.valor+\"]=\"+temporal2+\";\\n\";\n                }else{\n                //  consola.value+='>f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: No se puede hacer una adicción del tipo ' + valor.tipo+'\\n';  \n                    printedTable.erEj.push({descripcion:'No se puede hacer una adicción del tipo ' + valor.tipo,tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna}); \n                    throw '>ERROR: No se puede hacer una adicción del tipo ' + valor.tipo+'\\n';                    \n                }        \n            }\n        }else{\n            //consola.value+='>f:'+instruccion.fila+', c:'+instruccion.columna+', ambito:'+ambito+'\\nERROR: No se puede usar el operador += con el tipo de dato: ' + principalValue.tipo+'\\n';  \n            printedTable.erEj.push({descripcion:'No se puede usar el operador += con el tipo de dato: ' + principalValue.tipo,tipo:\"semántico\", linea:instruccion.fila, columna:instruccion.columna}); \n            throw '>ERROR: Incompatibilidad de tipos: No se puede usar el operador += con el tipo de dato: ' + principalValue.tipo+'\\n'; \n        }\n        \n    }\n    //SENTENCIAS DE CONTROL \n    function procesarIf(instruccion, tablaDeSimbolos, ambito, inicio, falsoC, retorno) {\n        consola.value+=\"//comienza el if\\n\";\n        let verdadero = nuevaEtiqueta(), falso = nuevaEtiqueta(), final=nuevaEtiqueta();\n        const logica = procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos, ambito);\n        consola.value+=\"if(\"+logica.valor+\")goto \"+verdadero+\";\\ngoto \"+falso+\";\\n\";\n        consola.value+=verdadero+\":\\n\";\n            const tsIf = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n            let returnedAcction = procesarBloque(instruccion.accion, tsIf, ambito, inicio, falsoC, retorno);\n            if(returnedAcction!=undefined){\n                return returnedAcction;\n            }\n        consola.value+=\"goto \"+final+\";\\n\";\n        consola.value+=falso+\":\\n\";\n        if (instruccion.else != \"Epsilon\") {\n                if (instruccion.else.sentencia === SENTENCIAS.ELSE_IF) {\n                    const tsElIf = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarIf(instruccion.else, tsElIf, ambito, inicio, falsoC);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                } else {\n                    const tsElse = new TS(tablaDeSimbolos.simbolos.slice(), printedTable);\n                    let returnedAcction = procesarBloque(instruccion.else.accion, tsElse, ambito, inicio, falsoC, retorno);\n                    if(returnedAcction!=undefined){\n                        return returnedAcction;\n                    }\n                }\n        }\n        consola.value+=final+\":\\n\";    \n    }\n    function procesarFor(instruccion, tablaDeSimbolos, ambito, retorno) {\n        let inicio =nuevaEtiqueta(), actualizar=nuevaEtiqueta(), verdadero= nuevaEtiqueta(), falso = nuevaEtiqueta(), temporalID =  nuevoTemporal();\n        procesarBloque([instruccion.inicial], tablaDeSimbolos, ambito);\n        let instruccionID = instruccion.inicial.sentencia==SENTENCIAS.ASIGNACION?instruccion.inicial.id.id:instruccion.inicial.id;\n        //asignarle el valor del ID al temporal de control\n        const valor = procesarExpresionNumerica(instruccion.inicial.expresion, tablaDeSimbolos, ambito);\n        tablaDeSimbolos.actualizar(instruccionID, valor);//, SplitAmbitos(ambito)\n        if (instruccion.paso.paso == \"++\") {\n            consola.value+=inicio+\":\\n\";\n            let condicion = procesarExpresionNumerica(instruccion.final, tablaDeSimbolos, ambito).valor;\n            consola.value+=\"if(\"+condicion+\") goto \"+verdadero+\";\\ngoto \"+falso+\";\\n\";\n            consola.value+=actualizar+\":\\n\";\n            let identificador = tablaDeSimbolos.getSimbol(instruccionID,SplitAmbitos(ambito), \"inFor\", \"inFor\");\n            let pila=(identificador.ambito==\"Global\")?\"heap\":\"stack\";\n            consola.value+=temporalID+\"=\"+pila+\"[(int)\"+identificador.direcciones+\"]+1;\\n\"+pila+\"[(int)\"+identificador.direcciones+\"]=\"+temporalID+\";\\n\";\n            consola.value+=\"goto \"+inicio+\";\\n\";\n            consola.value+=verdadero+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            procesarBloque(instruccion.accion, tsFor, ambito, actualizar, falso, retorno);\n            //incremento\n            consola.value+=\"goto \"+actualizar+\";\\n\"; \n            consola.value+=falso+\":\\n\";\n        } else if (instruccion.paso.paso == \"--\") {\n            consola.value+=inicio+\":\\n\";\n            let condicion = procesarExpresionNumerica(instruccion.final, tablaDeSimbolos, ambito).valor;\n            consola.value+=\"if(\"+condicion+\") goto \"+verdadero+\";\\ngoto \"+falso+\";\\n\";\n            consola.value+=actualizar+\":\\n\";\n            let identificador = tablaDeSimbolos.getSimbol(instruccionID,SplitAmbitos(ambito), \"inFor\", \"inFor\");\n            let pila=(identificador.ambito==\"Global\")?\"heap\":\"stack\";\n            consola.value+=temporalID+\"=\"+pila+\"[(int)\"+identificador.direcciones+\"]-1;\\n\"+pila+\"[(int)\"+identificador.direcciones+\"]=\"+temporalID+\";\\n\";\n            consola.value+=\"goto \"+inicio+\";\\n\";\n            consola.value+=verdadero+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            procesarBloque(instruccion.accion, tsFor, ambito, actualizar, falso, retorno);\n            //incremento\n            consola.value+=\"goto \"+actualizar+\";\\n\"; \n            consola.value+=falso+\":\\n\";\n        } else {\n            consola.value+=inicio+\":\\n\";\n            let condicion = procesarExpresionNumerica(instruccion.final, tablaDeSimbolos, ambito).valor;\n            consola.value+=\"if(\"+condicion+\") goto \"+verdadero+\";\\ngoto \"+falso+\";\\n\";\n            consola.value+=actualizar+\":\\n\";\n            let identificador = tablaDeSimbolos.getSimbol(instruccionID,SplitAmbitos(ambito), \"inFor\", \"inFor\");\n            let pila=(identificador.ambito==\"Global\")?\"heap\":\"stack\";\n            let valor = procesarExpresionNumerica(instruccion.paso.paso, tablaDeSimbolos, ambito);\n            consola.value+=temporalID+\"=\"+valor.valor+\";\\n\"+pila+\"[(int)\"+identificador.direcciones+\"]=\"+temporalID+\";\\n\";\n            consola.value+=\"goto \"+inicio+\";\\n\";\n            consola.value+=verdadero+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            procesarBloque(instruccion.accion, tsFor, ambito, actualizar, falso, retorno);\n            //incremento\n            consola.value+=\"goto \"+actualizar+\";\\n\"; \n            consola.value+=falso+\":\\n\";    \n        }\n    \n    }\n    function procesarForOF(instruccion, tablaDeSimbolos, ambito){\n        let conjunto = procesarExpresionNumerica(instruccion.conjunto, tablaDeSimbolos, ambito);\n        if(conjunto.tipo.split(\"[]\").length>1){\n            consola.value+='>ERROR: '+conjunto.id+' no es un array.\\n';  \n            throw '>ERROR: '+conjunto.id+' no es un array.\\n';               \n        }\n        tablaDeSimbolos.agregar(TIPO_VARIABLE.LET, instruccion.variable, \"infer\",  \"undefined\", ambito, \"temp\", \"temp\");\n        for(let val of conjunto.valor){\n            tablaDeSimbolos.actualizarAndType(instruccion.variable, val);\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            let returnedAcction = procesarBloque(instruccion.accion, tsFor, ambito);\n            if(returnedAcction!=undefined){\n                if(returnedAcction.sentencia==SENTENCIAS.BREAK){\n                    break;\n                }else if(returnedAcction.sentencia==SENTENCIAS.CONTINUE){\n                    continue;\n                }else{\n                    return returnedAcction;\n                } \n            }\n        }\n    }\n    function procesarForIn(instruccion, tablaDeSimbolos, ambito){\n        let conjunto = procesarAccID(instruccion.conjunto, tablaDeSimbolos, ambito);\n        if(!Array.isArray(conjunto.valor)){\n            consola.value+='>ERROR: '+conjunto.id+' no es un array.\\n';  \n            throw '>ERROR: '+conjunto.id+' no es un array.\\n';               \n        }\n        tablaDeSimbolos.agregar(TIPO_VARIABLE.LET, instruccion.variable, \"infer\",  \"undefined\", ambito, \"temp\", \"temp\");\n        for(let val in conjunto.valor){\n            tablaDeSimbolos.actualizarAndType(instruccion.variable, {valor:val, tipo:\"number\"});\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            let returnedAcction = procesarBloque(instruccion.accion, tsFor, ambito);\n            if(returnedAcction!=undefined){\n                if(returnedAcction.sentencia==SENTENCIAS.BREAK){\n                    break;\n                }else if(returnedAcction.sentencia==SENTENCIAS.CONTINUE){\n                    continue;\n                }else{\n                    return returnedAcction;\n                } \n            }\n        }\n    }\n    function procesarWhile(instruccion ,tablaDeSimbolos, ambito, retorno){\n        let inicio = nuevaEtiqueta(), verdadero=nuevaEtiqueta(), falso= nuevaEtiqueta();\n        consola.value+=inicio+\": \\n\";\n        let valor = procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos, ambito);\n        consola.value+=\"if(\"+valor.valor+\") goto \"+verdadero+\";\\n\";\n        consola.value+=\"goto \"+falso+\";\\n\";\n        consola.value+=verdadero+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            let returnedAcction = procesarBloque(instruccion.accion, tsFor, ambito, inicio, falso, retorno);\n            if(returnedAcction!=undefined){\n                if(returnedAcction.sentencia==SENTENCIAS.BREAK){\n                   // break;\n                   consola.value+=\"goto \"+falso+\";\\n\";\n                }else if(returnedAcction.sentencia==SENTENCIAS.CONTINUE){\n                   // continue;\n                   consola.value+=\"goto \"+inicio+\";\\n\";\n                }else{\n                    return returnedAcction;  \n                }\n            }\n        consola.value+=\"goto \"+inicio+\";\\n\";\n        consola.value+=falso+\":\\n\";        \n    }\n    function procesarDoWhile(instruccion ,tablaDeSimbolos, ambito, retorno){\n        let inicio = nuevaEtiqueta(), falso = nuevaEtiqueta();\n        consola.value+=inicio+\":\\n\";\n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            let returnedAcction = procesarBloque(instruccion.accion, tsFor, ambito, inicio, falso, retorno);\n            if(returnedAcction!=undefined){\n                if(returnedAcction.sentencia==SENTENCIAS.BREAK){\n                  //  break;\n                  consola.value+=\"goto \"+falso+\";\\n\";\n                }else if(returnedAcction.sentencia==SENTENCIAS.CONTINUE){\n                   // continue;\n                   consola.value+=\"goto \"+inicio+\";\\n\";\n                }else{\n                    return returnedAcction;\n                } \n            }\n        let valor = procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos, ambito);\n        consola.value+=\"if(\"+valor.valor+\") goto \"+inicio+\";\\n\";\n        consola.value+=\"goto \"+falso+\";\\n\"+falso+\":\\n\";\n    }\n    function procesarSwitch(instruccion, tablaDeSimbolos, ambito, retorno){\n        let original = procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos, ambito);\n        let final = nuevaEtiqueta(), temp = instruccion.cases, comparacion=nuevoTemporal();\n        while(temp!=\"Epsilon\"){       \n            let logica, nextCase=nuevaEtiqueta();\n            if(temp.logica!=\"default\"){\n                logica = procesarExpresionNumerica(temp.logica, tablaDeSimbolos, ambito); \n                consola.value+=comparacion+\"=\"+original.valor+\"!=\"+logica.valor+\";\\n\";\n                consola.value+=\"if(\"+comparacion+\") goto \"+nextCase+\";\\n\";\n            } \n            const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), printedTable); \n            procesarBloque(temp.accion, tsFor, ambito, undefined, final, retorno);\n            if(temp.logica==\"default\"){\n                break;\n            }\n            consola.value+=nextCase+\":\\n\";\n            temp=temp.next_case;\n        }\n        consola.value+=final+\":\\n\";\n\n\n/*\n        let cases =  getCases(instruccion.cases);\n        for(let i = 0;i<cases.length;i++){\n            if(cases[i].logica==\"default\"){\n                const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), consola); \n                let returnedAcction = procesarBloque(cases[i].accion, tsFor, ambito);\n                if(returnedAcction!=undefined){\n                    if(returnedAcction.sentencia==SENTENCIAS.BREAK){\n                        break;\n                    }else{\n                        return returnedAcction;\n                    } \n                } \n                break;\n            }else{\n                let original = procesarExpresionNumerica(instruccion.logica, tablaDeSimbolos, ambito);\n                let caso= procesarExpresionNumerica(cases[i].logica, tablaDeSimbolos, ambito);\n                let returnedAcction;\n                if(original.valor==caso.valor){\n                    const tsFor = new TS(tablaDeSimbolos.simbolos.slice(), consola); \n                    for(let e =i;e<cases.length;e++){\n                        returnedAcction = procesarBloque(cases[e].accion, tsFor, ambito);\n                        if(returnedAcction!=undefined){\n                            if(returnedAcction.sentencia==SENTENCIAS.BREAK){\n                                break;\n                            }else if(returnedAcction.sentencia==SENTENCIAS.CONTINUE){\n                                continue;\n                            }else{\n                                return returnedAcction;\n                            } \n                        } \n                    }\n                    i=cases.length; \n                    if(returnedAcction!=undefined){\n                        if(returnedAcction.sentencia==SENTENCIAS.BREAK){\n                        }else if(returnedAcction.sentencia==SENTENCIAS.CONTINUE){\n                        }else{\n                            return returnedAcction;\n                        } \n                    }                  \n                }\n            }\n        }\n        */\n    }\n    function getCases(cases){\n        let arreglo = [];\n        let temp=cases;\n        while(temp!=\"Epsilon\"){\n            arreglo.push(temp);\n            temp=temp.next_case;\n            if(temp.logica==\"default\"){\n                arreglo.push(temp);\n                break;\n            }\n        }\n        return arreglo;\n    }\n    //Graficar TS\n    function graficar_Ts(tablaDeSimbolos, ambito){\n        let tabla = document.createElement(\"table\");\n        tabla.bgColor= '#bbe1fa';\n        tabla.align=\"center\";\n        tabla.width=\"80%\";\n        tabla.border=\"1px solid black\";\n        var row0 =  tabla.insertRow( tabla.rows.length);\n        var celda01 = row0.insertCell(0);\n        var celda02 = row0.insertCell(1);\n        var celda03 = row0.insertCell(2);\n        var celda04 = row0.insertCell(3);\n        var celda05 = row0.insertCell(4);\n        var celda06 = row0.insertCell(5);\n        var celda07 = row0.insertCell(6);\n        var celda08 = row0.insertCell(7);\n        celda01.innerHTML = \"No.\";\n        celda01.bgColor=\"#40a8c4\";\n        celda02.innerHTML = \"Sentencia\";\n        celda02.bgColor=\"#40a8c4\";\n        celda03.innerHTML = \"ID\";\n        celda03.bgColor=\"#40a8c4\";\n        celda04.innerHTML = \"Tipo\";\n        celda04.bgColor=\"#40a8c4\";\n        celda05.innerHTML = \"Valor\";\n        celda05.bgColor=\"#40a8c4\";\n        celda06.innerHTML = \"Fila\";\n        celda06.bgColor=\"#40a8c4\";\n        celda07.innerHTML = \"Columna\";\n        celda07.bgColor=\"#40a8c4\";\n        celda08.innerHTML = \"Ambito\";\n        celda08.bgColor=\"#40a8c4\";\n      if(tablaDeSimbolos._simbolos.length!=0){\n        let i=0;\n        for(let simbolo of tablaDeSimbolos._simbolos) {\n        if(simbolo.si==\"variable\"){\n        i++;\n          var row = tabla.insertRow( tabla.rows.length);\n          var celda1 = row.insertCell(0);\n          var celda2 = row.insertCell(1);\n          var celda3 = row.insertCell(2);\n          var celda4 = row.insertCell(3);\n          var celda5 = row.insertCell(4);\n          var celda6 = row.insertCell(5);\n          var celda7 = row.insertCell(6);\n          var celda8 = row.insertCell(7);\n          celda1.innerHTML = i;\n          celda2.innerHTML = simbolo.si;\n          celda3.innerHTML = simbolo.id;\n          celda4.innerHTML = simbolo.tipo;\n          celda5.innerHTML = toString({valor:simbolo.valor,tipo:simbolo.tipo}, tablaDeSimbolos, ambito);\n          celda6.innerHTML = simbolo.fila;\n          celda7.innerHTML = simbolo.columna;\n          celda8.innerHTML = simbolo.ambito;\n        }\n        }\n      }\n      tablero.appendChild(tabla);\n    }\n    function nuevoTemporal(){\n        contadores.temporales++;\n        return \"t\"+contadores.temporales;\n    }\n    function nuevaEtiqueta(){\n        contadores.etiquetas++;\n        return \"L\"+contadores.etiquetas;\n    }\n    function nuevoArreglo(dimension){\n        switch(dimension){\n            case 1:\n                arreglos.uno++;\n                return \"arrayOne\"+arreglos.uno;\n            case 2:\n                arreglos.dos++;\n                return \"arrayTwo\"+arreglos.dos;\n            case 3:\n                arreglos.tres++;\n                return \"arrayThree\"+arreglos.tres;\n            case 4:\n                arreglos.cuatro++;\n                return \"arrayFour\"+arreglos.cuatro;\n            case 5:\n                arreglos.cinco++;\n                return \"arrayFive\"+arreglos.cinco;\n        }\n    }\n    function stackPush(){\n        pilas.stack++;\n        return pilas.stack-1;\n    }\n    function heapPush(){\n        pilas.heap++;\n        return pilas.heap-1;\n    }\n    function printTemporales(){\n        let txt =\"\";\n        for(let i = 0;i<=contadores.temporales;i++){\n            txt+=\"t\"+i;\n            txt+=(i<contadores.temporales)?\",\":\"\";\n        }\n        for(let i =0;i<arreglos.uno;i++){\n            txt+= \",*arrayOne\"+(i+1);\n        }\n        for(let i =0;i<arreglos.dos;i++){\n            txt+= \",**arrayTwo\"+(i+1);\n        }\n        for(let i =0;i<arreglos.tres;i++){\n            txt+= \",***arrayThree\"+(i+1);\n        }\n        for(let i =0;i<arreglos.cuatro;i++){\n            txt+= \",****arrayFour\"+(i+1);\n        }\n        for(let i =0;i<arreglos.cinco;i++){\n            txt+= \",*****arrayFive\"+(i+1);\n        }\n        return txt+\";\\n\";\n    }\n    function funcionesNativas(){\n        //funcion para imprimir strings\n        let text = \"//t0=cadena\\nvoid imprimir(){\\nL0: if(heap[(int)t0]!=-1) goto L1;\\ngoto L3;\\nL1: if(heap[(int)t0]>300) goto L2;\\nprintf(\\\"%c\\\", (char)heap[(int)t0]);\\nt0=t0+1;\\ngoto L0;\\nL2:\\nprintf(\\\"%f\\\", heap[(int)t0]-300);\\nt0=t0+1;\\ngoto L0;\\nL3:\\nreturn;\\n}\\n\";\n        //función para concatenar 2 strings\n        text+=\"//t1 y t3 son el inicio de las cadenas\\nvoid concatenar(){\\nL0:\\nif(heap[(int)t1]!=-1) goto L1;\\ngoto L2;\\nL1:\\nt2=heap[(int)t1];\\nheap[(int)h]=t2;\\nh=h+1;\\nt1=t1+1;\\ngoto L0;\\nL2: if(heap[(int)t3]!=-1) goto L3;\\ngoto L4;\\n\";\n        text+=\"L3:\\nt2=heap[(int)t3];\\nheap[(int)h]=t2;\\nh=h+1;\\nt3=t3+1;\\ngoto L2;\\nL4:\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\\n\";\n        //funcion para calcular el length de strings\n        text+=\"//t4 es la cadena \\nvoid strLength(){\\nL0:\\nif(heap[(int)t4]!=-1) goto L1;\\ngoto L2;\\nL1:\\nt4=t4+1;\\ngoto L0;\\nL2:\\n return;\\n}\\n\";\n        //funcion para concatenar una string y un numero \n        text+=\"//t1=Cadena,t2,t3=numero\\nvoid conStrNum(){\\nL0:\\nif(heap[(int)t1]!=-1) goto L1;\\ngoto L2;\\nL1: \\nt2=heap[(int)t1];\\nheap[(int)h]=t2;\\nh=h+1;\\nt1=t1+1;\\ngoto L0;\\nL2: \\nheap[(int)h]=t3+300;\\nh=h+1;\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\\n\";\n        //funcion para concatenar un número y string\n        text+=\"//t1=Cadena,t2,t3=numero\\nvoid conNumStr(){\\nL0:\\nheap[(int)h]=t3+300;\\nh=h+1;\\nL1: if(heap[(int)t1]!=-1) goto L2;\\ngoto L3;\\nL2:\\n t2=heap[(int)t1];\\nheap[(int)h]=t2;\\nh=h+1;\\nt1=t1+1;\\ngoto L1;\\nL3:\\nheap[(int)h]=-1;\\nh=h+1;\\n\\nreturn;\\n}\\n\";\n        //funcion toLowerCase\n        text+=\"//t0=inicio de cadena, t1=cambio de letra\\nvoid toLowerCase(){\\nL0:\\nif(heap[(int)t0]!=-1) goto L1;\\ngoto L5;\\nL1:\\nif(heap[(int)t0]>=65) goto L2;\\ngoto L3;\\nL2:\\nif(heap[(int)t0]<=90) goto L4;\\nL3: \\nt1=heap[(int)t0];\\nheap[(int)h]=t1;\\nh=h+1;\\nt0=t0+1;\\ngoto L0;\\nL4:\\nt1=heap[(int)t0];\\nt1=t1+32;\\nheap[(int)h]=t1;\\nh=h+1;\\nt0=t0+1;\\ngoto L0;\\nL5:\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\\n\";\n        //funcion toUpperCase\n        text+=\"//t0=inicio de cadena, t1=cambio de letra\\nvoid toUpperCase(){\\nL0:\\nif(heap[(int)t0]!=-1) goto L1;\\ngoto L5;\\nL1:\\nif(heap[(int)t0]>=97) goto L2;\\ngoto L3;\\nL2:\\nif(heap[(int)t0]<=122) goto L4;\\nL3: \\nt1=heap[(int)t0];\\nheap[(int)h]=t1;\\nh=h+1;\\nt0=t0+1;\\ngoto L0;\\nL4:\\nt1=heap[(int)t0];\\nt1=t1-32;\\nheap[(int)h]=t1;\\nh=h+1;\\nt0=t0+1;\\ngoto L0;\\nL5:\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\\n\";\n        //funcion para concatenar string y boolean\n        text+=\"//t1=Cadena,t2,t3=boolean;\\nvoid conStrBool(){\\nL0:\\nif(heap[(int)t1]!=-1) goto L1;\\ngoto L2;\\nL1: \\nt2=heap[(int)t1];\\nheap[(int)h]=t2;\\nh=h+1;\\nt1=t1+1;\\ngoto L0;\\nL2: \\nif(t3==1) goto L3;\\ngoto L4;\\nL3:\\nheap[(int)h]=116;h=h+1;\\nheap[(int)h]=114;\\nh=h+1;\\nheap[(int)h]=117;\\nh=h+1;\\nheap[(int)h]=101;\\nh=h+1;\\nheap[(int)h]=-1;\\nh=h+1;\\ngoto L5;\\nL4:\\nheap[(int)h]=102;\\nh=h+1;\\nheap[(int)h]=97;\\nh=h+1;\\nheap[(int)h]=108;h=h+1;\\nheap[(int)h]=115;\\nh=h+1;\\nheap[(int)h]=101;\\nh=h+1;\\nheap[(int)h]=-1;\\nh=h+1;\\nL5:\\nreturn;\\n}\\n\";\n        //funcion para concatenar boolean y string\n        text+=\"//t1=Cadena,t2,t3=boolean;\\nvoid conBoolStr(){\\nL0:\\nif(t3==1) goto L1;\\ngoto L2;\\nL1:\\nheap[(int)h]=116;\\nh=h+1;\\nheap[(int)h]=114;\\nh=h+1;\\nheap[(int)h]=117;\\nh=h+1;\\nheap[(int)h]=101;\\nh=h+1;\\ngoto L3;\\nL2:\\nheap[(int)h]=102;\\nh=h+1;\\nheap[(int)h]=97;\\nh=h+1;\\nheap[(int)h]=108;\\nh=h+1;\\nheap[(int)h]=115;\\nh=h+1;\\nheap[(int)h]=101;\\nh=h+1;\\nL3: if(heap[(int)t1]!=-1) goto L4;\\ngoto L5;\\nL4: t2=heap[(int)t1];\\nheap[(int)h]=t2;\\nh=h+1;\\nt1=t1+1;\\ngoto L0; \\nL5:\\nheap[(int)h]=-1;\\nh=h+1;\\nreturn;\\n}\\n\";\n        //funcion bool to String\n        text+=\"//t3=boolean\\nvoid boolToStr(){\\nL0:\\nif(t3==1) goto L1;\\ngoto L2;\\nL1:\\nprintf(\\\"%c\\\", (char)116);\\nprintf(\\\"%c\\\", (char)114);\\nprintf(\\\"%c\\\", (char)117);\\nprintf(\\\"%c\\\", (char)101);\\ngoto L3;\\nL2:\\nprintf(\\\"%c\\\", (char)102);\\nprintf(\\\"%c\\\", (char)97);\\nprintf(\\\"%c\\\", (char)108);\\nprintf(\\\"%c\\\", (char)115);\\nprintf(\\\"%c\\\", (char)101);\\nL3:\\nreturn;\\n}\\n\";\n        //potencia\n        text+=\"//t0=resultado, t1=exponente, t2=iterador, t3=base\\nvoid potencia(){\\nt2=1;\\nL0:if(t2<t1) goto L1;\\ngoto L2;\\nL1:\\nt0=t3*t0;\\nt2=t2+1;\\ngoto L0;\\nL2:\\nreturn;\\n}\\n\";\n        return text;\n    }\n    function declararArregloC3D(arreglo){\n        let tipo =\"\", arrayName=\"\";\n        for(let i =0; i<arreglo.tipo.split(\"[]\").length-1;i++){\n            tipo+=arreglo.tipo.split(\"[]\")[i];\n        }\n        switch(arreglo.tipo.split(\"[]\").length){\n            case 1: \n                return;\n            case 2:\n                arrayName = nuevoArreglo(1);\n                consola.value+=arrayName+\"=\"+\"(double *)malloc(\"+(arreglo.direcciones.length+1)+\"*sizeof(double));\\n\";\n                for(let i =0;i<arreglo.direcciones.length+1;i++){\n                    if(i==0){\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones.length+\";\\n\";\n                    }else{\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones[i-1]+\";\\n\";\n                    }\n                    \n                }\n                //declarar los arreglos con los elemntos de la dimensión\n                arreglo.direcciones=arrayName;\n                return arrayName;\n            case 3:\n                arrayName = nuevoArreglo(2);\n                consola.value+=arrayName+\"=\"+\"(double *)malloc(\"+(arreglo.direcciones.length+1)+\"*sizeof(double));\\n\";\n                for(let i =0;i<arreglo.direcciones.length+1;i++){\n                    if(i==0){\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones.length+\";\\n\";\n                    }else{\n                        declararArregloC3D({direcciones:arreglo.direcciones[i], tipo:tipo});\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones[i-1]+\";\\n\";\n                    }                    \n                }\n                //declarar los arreglos con los elemntos de la dimensión\n                return arrayName;\n            case 4:\n                arrayName = nuevoArreglo(3);\n                consola.value+=arrayName+\"=\"+\"(double *)malloc(\"+(arreglo.direcciones.length+1)+\"*sizeof(double));\\n\";\n                for(let i =0;i<arreglo.direcciones.length+1;i++){\n                    if(i==0){\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones.length+\";\\n\";\n                    }else{\n                        declararArregloC3D({direcciones:arreglo.direcciones[i], tipo:tipo});\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones[i-1]+\";\\n\";\n                    }\n                }\n                //declarar los arreglos con los elemntos de la dimensión\n                return arrayName;\n            case 5:\n                arrayName = nuevoArreglo(4);\n                consola.value+=arrayName+\"=\"+\"(double *)malloc(\"+(arreglo.direcciones.length+1)+\"*sizeof(double));\\n\";        \n                for(let i =0;i<arreglo.direcciones.length+1;i++){\n                    if(i==0){\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones.length+\";\\n\";\n                    }else{\n                        declararArregloC3D({direcciones:arreglo.direcciones[i], tipo:tipo});\n                        consola.value+=arrayName+\"[\"+i+\"]=\"+arreglo.direcciones[i-1]+\";\\n\";\n                    }\n                }\n                //declarar los arreglos con los elemntos de la dimensión\n                return arrayName;\n        }\n    }\n    function traducirFunciones(id, tablaDeSimbolos, ambito){\n        consola.value+=\"void \"+id+\"(){\\n\";\n        let tamanio =0, funcion = tsGlobal.obtenerFuncion(id, 0, 0, \"Global\"), puntero=nuevoTemporal(),label = nuevaEtiqueta();\n        consola.value+=\"//Comienza a declarar los parámetros\\n\";\n        consola.value+=puntero+\"=p;\\n\";\n        for(let i =0;i<funcion.parametros.length;i++){\n            let temporal =nuevoTemporal(), temporal2=nuevoTemporal();\n            consola.value+=temporal+\"=\"+puntero+\"+\"+(i+1)+\";\\n\";\n            //consola.value+=temporal2+\"=stack[(int)\"+temporal+\"];\\n\";\n            tablaDeSimbolos.agregar(TIPO_VARIABLE.LET, funcion.parametros[i].id, funcion.parametros[i].tipo, id, \"temp\", \"temp\", temporal);\n        }\n        consola.value+=\"//termina de declarar los parámetros\\n\";\n        tamanio+=countDeclarations(funcion.accion);\n        procesarBloque(funcion.accion, tablaDeSimbolos,id, undefined, undefined, label);\n       // printedTable.erEj=[];\n        consola.value+=/*\"goto \"+label+\";\\n\"+*/label+\":\\nreturn;\\n}\\n\";\n        functionDeclaration+=consola.value;\n        consola.value=\"\";\n    }\n    function countDeclarations(instrucciones){\n        let contador = 0;\n        for(let instruccion of instrucciones){\n            if (instruccion.sentencia === SENTENCIAS.DECLARACION) {\n                contador++;\n            }\n        }\n        return contador;\n    }\n    function procesarNewArray(largo, tablaDeSimbolos, ambito, userType){\n\n        consola.value+=\"//comienza arreglo newArray\\n\";\n        let valor = procesarExpresionNumerica(largo, tablaDeSimbolos, ambito, userType);\n        let tamanio=0,temporales=[],arrayHead=contadores.temporales+1;\n        temporales.push(nuevoTemporal());\n        consola.value+=temporales[tamanio]+\"=h;\\n\";\n        consola.value+=\"h=h+1;\\n\"\n        tamanio++;\n        for(let i =0;i<valor.valor;i++){\n            temporales.push(nuevoTemporal());\n            consola.value+=temporales[tamanio]+\"=h;\\n\";\n            consola.value+=\"h=h+1;\\n\";\n            tamanio++;\n        }\n        consola.value+=\"heap[(int)\"+temporales[0]+\"]=\"+(tamanio-1)+\";\\n\";\n        tamanio=1;\n        for(let i =0;i<valor.valor;i++){\n            consola.value+=\"heap[(int)\"+temporales[tamanio]+\"]=0;\\n\";\n            tamanio++;\n        }\n        return {tipo:userType+\"[]\", valor:\"t\"+arrayHead, direcciones:temporales[0]};\n    }\n    function importFunctions(instrucciones, tablaDeSimbolos, ambito){\n        for(let instruccion of instrucciones){\n                if(instruccion.sentencia==SENTENCIAS.FUNCION){\n                    if(ambito==\"Global\"){ \n                            traducirFunciones(instruccion.id,new TS(JSON.parse(JSON.stringify(tablaDeSimbolos._simbolos)), printedTable), ambito);\n                            importFunctions(instruccion.accion, tablaDeSimbolos, instruccion.id);\n                    }else{      \n                        consola.value+='f:'+instruccion.fila+', c:'+instruccion.columna+'\\n>ERROR: Funciones anidadas en la función:'+ambito;  \n                        throw '>ERROR: Funciones anidadas en la función:'+ambito;\n                    } \n                }  \n        }    \n    }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';/*  */\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport WebIcon from '@material-ui/icons/Web';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/mbo.css';\nimport 'codemirror/theme/cobalt.css';\nimport parser from './gramatica';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Desanidar from './desanidar';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport Traducir from './traductor';\nimport Tree from 'react-d3-tree';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(55),\n    right: theme.spacing(50),\n  },absolute2: {\n    position: 'absolute',\n    bottom: theme.spacing(50),\n    right: theme.spacing(45),\n  },\n  absolute3: {\n    position: 'absolute',\n    bottom: theme.spacing(45),\n    right: theme.spacing(40),\n  },absolute4: {\n    position: 'absolute',\n    bottom: theme.spacing(40),\n    right: theme.spacing(35),\n  },\n  absolute5: {\n    position: 'absolute',\n    bottom: theme.spacing(35),\n    right: theme.spacing(30),\n  },absolute6: {\n    position: 'absolute',\n    bottom: theme.spacing(30),\n    right: theme.spacing(25),\n  }, appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },button: {\n    margin: theme.spacing(1),\n  },\n  p:{\n    backgroundColor:'#2c2c2c',\n    color:'#FFFF',\n    marginTop:'0%',\n  }\n}));\nconst reports = {tsTr:[], erTr:[], tsEj:[], erEj:[]};\nconst intros = {AST:[], entrada:\"\", salida:\"\"};\nconst tablero = document.createElement(\"div\");\nvar data;\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nexport default function UI() {\n  function analizar(entry) {\n    document.getElementById('consola').value=\"\";\n    let AST;\n    try {\n        AST = parser.parse(entry);\n        console.log(JSON.stringify(AST, null, 2));\n        document.getElementById('consola').value=JSON.stringify(AST, null, 2);\n        intros.AST=AST;\n        return AST;\n    } catch (error) {\n        console.log(error);\n        return error;\n    }\n  } \n  function Translate(){\n  }\n  function Interpretar(){\n    Desanidar(analizar(intros.entrada), document.getElementById('consola'), intros.salida, reports);\n    tablero.innerHTML=document.createElement(\"div\").innerHTML;\n    Traducir(analizar(intros.entrada), document.getElementById('consola'), intros.salida, reports,  tablero);\n  }\n  function prs(AST){\n    let temp = {attributes:{} , children:[]};\n    for(let sentencia in AST){\n        if(typeof AST[sentencia] === 'object' && AST[sentencia] !== null){\n          let atb = prs(AST[sentencia]);\n          temp.children.push({name:sentencia,attributes: atb.attributes, children:atb.children});\n          \n        }else{\n          temp.attributes[sentencia]=AST[sentencia];\n        }\n      }\n      return temp;\n  }\n  function translationConsole(editor){\n    intros.salida=editor;\n  }\n  function CursosLocation(editor){\n    document.getElementById('posicion').innerHTML=\"Línea:\"+(editor.getCursor().line+1)+\" Columna:\"+editor.getCursor().ch;\n  }\n  function EntryValue(value){\n    intros.entrada=value;\n  }\n  function populateTableTsTr(tablaDeSimbolos){\n      var row0 =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n      var celda01 = row0.insertCell(0);\n      var celda02 = row0.insertCell(1);\n      var celda03 = row0.insertCell(2);\n      var celda05 = row0.insertCell(3);\n      var celda06 = row0.insertCell(4);\n      var celda07 = row0.insertCell(5);\n      celda01.innerHTML = \"No.\";\n      celda01.bgColor=\"#40a8c4\";\n      celda02.innerHTML = \"Sentencia\";\n      celda02.bgColor=\"#40a8c4\";\n      celda03.innerHTML = \"ID\";\n      celda03.bgColor=\"#40a8c4\";\n      celda05.innerHTML = \"Fila\";\n      celda05.bgColor=\"#40a8c4\";\n      celda06.innerHTML = \"Columna\";\n      celda06.bgColor=\"#40a8c4\";\n      celda07.innerHTML = \"Ambito\";\n      celda07.bgColor=\"#40a8c4\";\n    if(tablaDeSimbolos.length!=0){\n      let i=1;\n      for(let simbolo of tablaDeSimbolos._simbolos) {\n      i++;\n      if(simbolo.si!=\"type\"){\n        var row =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n        var celda1 = row.insertCell(0);\n        var celda2 = row.insertCell(1);\n        var celda3 = row.insertCell(2);\n        var celda5 = row.insertCell(3);\n        var celda6 = row.insertCell(4);\n        var celda7 = row.insertCell(5);\n        celda1.innerHTML = i;\n        celda2.innerHTML = simbolo.si;\n        celda3.innerHTML = simbolo.id;\n        celda5.innerHTML = simbolo.fila;\n        celda6.innerHTML = simbolo.columna;\n        celda7.innerHTML = simbolo.ambito;\n      }else{\n        var row =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n        var celda1 = row.insertCell(0);\n        var celda2 = row.insertCell(1);\n        var celda3 = row.insertCell(2);\n        var celda4 = row.insertCell(3);\n        var celda6 = row.insertCell(4);\n        var celda7 = row.insertCell(5);\n        celda1.innerHTML = i;\n        celda2.innerHTML = simbolo.si;\n        celda3.innerHTML = simbolo.id;\n        celda5.innerHTML = simbolo.fila;\n        celda6.innerHTML = simbolo.columna;\n      }\n      }\n    }\n  } \n  function populateTableErTr(Errores_Array){    \n    if(Errores_Array.length!=0){\n      var row0 =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n      var celda01 = row0.insertCell(0);\n      var celda02 = row0.insertCell(1);\n      var celda03 = row0.insertCell(2);\n      var celda04 = row0.insertCell(3);\n      var celda05 = row0.insertCell(4);\n      var celda06 = row0.insertCell(5);\n      celda01.innerHTML = \"No.\";\n      celda02.innerHTML = \"Tipo\";\n      celda03.innerHTML = \"Fila\";\n      celda04.innerHTML = \"Columna\";\n      celda05.innerHTML = \"Símbolo/Descripcion\";\n      celda06.innerHTML = \"Ambito\";\n      let i=1;  \n      for(let err of Errores_Array){\n        var row =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n        var celda1 = row.insertCell(0);\n        var celda2 = row.insertCell(1);\n        var celda3 = row.insertCell(2);\n        var celda4 = row.insertCell(3);\n        var celda5 = row.insertCell(4);\n        celda1.innerHTML = i;\n        celda2.innerHTML = err.tipo;\n        celda3.innerHTML = err.linea;\n        celda4.innerHTML = err.columna;\n        celda5.innerHTML = err.descripcion;\n        i++;\n      }\n    }else{\n      var row0 =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n      var celda01 = row0.insertCell(0);\n      celda01.innerHTML = \"No se detectaron herrores en la traducción.\";\n    }\n  }  \n  function toString(simbolo){\n    let text=\"\";\n    if(Array.isArray(simbolo.direcciones)){\n      text+=\"{\";\n      for(let i = 0;i<simbolo.direcciones.length;i++){\n        if(simbolo.direcciones[i]!=null){\n          text+=simbolo.direcciones[i].id+\":\";\n          if(Array.isArray(simbolo.direcciones[i].direcciones)){\n            text+=toString({direcciones:simbolo.direcciones[i].direcciones});\n          }else{\n            text+=simbolo.direcciones[i].direcciones;\n          }\n        }else{\n          text+=simbolo.direcciones[i].id+\":null\";\n        }\n        if(i!=simbolo.direcciones.length-1){\n          text+=\", \";\n        }\n      }\n      text+=\"}\";\n    }else if(simbolo.tipo.split(\"[]\").length>1){\n      /*text+=\"[\";\n      for(let i = 0;i<simbolo.direcciones.length;i++){\n        if(Array.isArray(simbolo.direcciones[i])){\n          let tipo =\"\";\n          for(let e =0;e<simbolo.tipo.split(\"[]\").length-1;e++){\n            if(e==0)tipo+=simbolo.tipo.split(\"[]\")[i];\n            else tipo+=\"[]\";\n          }\n          text+=toString({direcciones:simbolo.direcciones[i],tipo:tipo});\n        }else{\n          text+=simbolo.direcciones[i];\n        }\n          if(i!=simbolo.direcciones.length-1){\n              text+=\", \";\n          }\n      }\n      text+=\"]\";*/\n      text+=simbolo.direcciones;\n    } else{\n      text+= simbolo.direcciones;\n    }\n    return text;\n  }\n  function populateTableTsEj(tablaDeSimbolos){\n    let tabla = document.createElement(\"table\");\n    tabla.bgColor= '#bbe1fa';\n    tabla.align=\"center\";\n    tabla.width=\"80%\";\n    tabla.border=\"1px solid black\";\n    {/*\"width'80%' style= border='1' align='center'\";*/}\n    var row1 =  tabla.insertRow( tabla.rows.length);\n    var celda11 = row1.insertCell(0);\n    celda11.innerHTML=\"Tabla de Símbolos FINAL\";\n    celda11.bgColor=\"#40a8c4\";\n    celda11.align=\"center\";\n    celda11.colSpan=8;\n    var row0 =  tabla.insertRow( tabla.rows.length);\n    var celda01 = row0.insertCell(0);\n    var celda02 = row0.insertCell(1);\n    var celda03 = row0.insertCell(2);\n    var celda04 = row0.insertCell(3);\n    var celda05 = row0.insertCell(4);\n    var celda06 = row0.insertCell(5);\n    var celda07 = row0.insertCell(6);\n    var celda08 = row0.insertCell(7);\n    celda01.innerHTML = \"No.\";\n    celda01.bgColor=\"#40a8c4\";\n    celda02.innerHTML = \"Sentencia\";\n    celda02.bgColor=\"#40a8c4\";\n    celda03.innerHTML = \"ID\";\n    celda03.bgColor=\"#40a8c4\";\n    celda04.innerHTML = \"Tipo\";\n    celda04.bgColor=\"#40a8c4\";\n    celda05.innerHTML = \"Dirección\";\n    celda05.bgColor=\"#40a8c4\";\n    celda06.innerHTML = \"Fila\";\n    celda06.bgColor=\"#40a8c4\";\n    celda07.innerHTML = \"Columna\";\n    celda07.bgColor=\"#40a8c4\";\n    celda08.innerHTML = \"Ambito\";\n    celda08.bgColor=\"#40a8c4\";\n  if(tablaDeSimbolos.length!=0){\n    let i=0;\n    for(let simbolo of tablaDeSimbolos._simbolos) {\n    i++;\n    if(simbolo.si==\"variable\"){\n      var row = tabla.insertRow( tabla.rows.length);\n      var celda1 = row.insertCell(0);\n      var celda2 = row.insertCell(1);\n      var celda3 = row.insertCell(2);\n      var celda4 = row.insertCell(3);\n      var celda5 = row.insertCell(4);\n      var celda6 = row.insertCell(5);\n      var celda7 = row.insertCell(6);\n      var celda8 = row.insertCell(7);\n      celda1.innerHTML = i;\n      celda2.innerHTML = simbolo.si;\n      celda3.innerHTML = simbolo.id;\n      celda4.innerHTML = simbolo.tipo;\n      celda5.innerHTML = toString(simbolo);\n      celda6.innerHTML = simbolo.fila;\n      celda7.innerHTML = simbolo.columna;\n      celda8.innerHTML = simbolo.ambito;\n    }else if(simbolo.si==\"funcion\"){\n      var row =  tabla.insertRow( tabla.rows.length);\n      var celda1 = row.insertCell(0);\n      var celda2 = row.insertCell(1);\n      var celda3 = row.insertCell(2);\n      var celda4 = row.insertCell(3);\n      var celda5 = row.insertCell(4);\n      var celda6 = row.insertCell(5);\n      var celda7 = row.insertCell(6);\n      var celda8 = row.insertCell(7);\n      celda1.innerHTML = i;\n      celda2.innerHTML = simbolo.si;\n      celda3.innerHTML = simbolo.id;\n      celda4.innerHTML = simbolo.tipo;\n      celda6.innerHTML = simbolo.fila;\n      celda7.innerHTML = simbolo.columna;\n      celda8.innerHTML = simbolo.ambito;\n    }else{\n      var row =  tabla.insertRow( tabla.rows.length);\n      var celda1 = row.insertCell(0);\n      var celda2 = row.insertCell(1);\n      var celda3 = row.insertCell(2);\n      var celda4 = row.insertCell(3);\n      var celda5 = row.insertCell(4);\n      var celda6 = row.insertCell(5);\n      var celda7 = row.insertCell(6);\n      var celda8 = row.insertCell(7);\n      celda1.innerHTML = i;\n      celda2.innerHTML = simbolo.si;\n      celda3.innerHTML = simbolo.id;\n      celda6.innerHTML = simbolo.fila;\n      celda7.innerHTML = simbolo.columna;\n    }\n    }\n  }\n  return tabla;\n}\n  function populateTableErEj(Errores_Array){    \n    if(Errores_Array.length!=0){\n      var row0 =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n      var celda01 = row0.insertCell(0);\n      var celda02 = row0.insertCell(1);\n      var celda03 = row0.insertCell(2);\n      var celda04 = row0.insertCell(3);\n      var celda05 = row0.insertCell(4);\n      var celda06 = row0.insertCell(5);\n      celda01.innerHTML = \"No.\";\n      celda02.innerHTML = \"Tipo\";\n      celda03.innerHTML = \"Fila\";\n      celda04.innerHTML = \"Columna\";\n      celda05.innerHTML = \"Descripcion\";\n      celda06.innerHTML = \"Ambito\";\n      let i=1;\n      for(let err of Errores_Array){\n        var row =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n        var celda1 = row.insertCell(0);\n        var celda2 = row.insertCell(1);\n        var celda3 = row.insertCell(2);\n        var celda4 = row.insertCell(3);\n        var celda5 = row.insertCell(4);\n        celda1.innerHTML = i;\n        celda2.innerHTML = err.tipo;\n        celda3.innerHTML = err.linea;\n        celda4.innerHTML = err.columna;\n        celda5.innerHTML = err.descripcion;\n        i++;\n      }\n    }else{\n      var row0 =  document.getElementById('tablaDeSalida').insertRow( document.getElementById('tablaDeSalida').rows.length);\n      var celda01 = row0.insertCell(0);\n      celda01.innerHTML = \"No se detectaron herrores en la Ejecución.\";\n    }\n  }\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  /* antigua funcion\n  const handleClickOpen = () => {\n    setOpen(true);\n    populateTable(reports.tsTr);\n   };*/\n   async function handleClickOpenTsTr (){\n    data={};\n    setOpen(true);\n    await setTimeout(null, 300);\n    document.getElementById('AST_FRAME').style.display=\"none\";\n    populateTableTsTr(reports.tsTr);\n   };\n   async function handleClickOpenErTr (){\n    data={};\n    setOpen(true);\n    await setTimeout(null, 300);\n    document.getElementById('AST_FRAME').style.display=\"none\";\n    populateTableErTr(reports.erTr);\n   };\n   async function handleClickOpenTsEj (){\n    data={};\n    setOpen(true);\n    await setTimeout(null, 300);\n    document.getElementById('AST_FRAME').style.display=\"none\";\n    document.getElementById('tablero').innerHTML=tablero.innerHTML;\n    document.getElementById('tablero').appendChild(populateTableTsEj(reports.tsEj));\n   };\n   async function handleClickOpenErEj (){\n    data={};\n    setOpen(true);\n    await setTimeout(null, 300);\n    document.getElementById('AST_FRAME').style.display=\"none\";\n    populateTableErEj(reports.erEj);\n   };\n   async function handleClickOpenAST (){\n    data={name:\"AST\",children:prs(intros.AST.AST).children};\n    setOpen(true);\n    await setTimeout(null, 300);\n    document.getElementById('AST_FRAME').style.display=\"block\";\n   };\n  const handleClose = () => {\n    data={};\n    setOpen(false);\n    document.getElementById('AST_FRAME').style.display=\"none\";\n   };\n   const copyToClipboard = str => {\n    const el = document.createElement('textarea');  // Create a <textarea> element\n    el.value = document.getElementById('consola').value;                                 // Set its value to the string that you want copied\n    el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\n    el.style.position = 'absolute';                 \n    el.style.left = '-9999px';                      // Move outside the screen to make it invisible\n    document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\n    const selected =            \n      document.getSelection().rangeCount > 0        // Check if there is any content selected previously\n        ? document.getSelection().getRangeAt(0)     // Store selection if found\n        : false;                                    // Mark as false to know no selection existed before\n    el.select();                                    // Select the <textarea> content\n    document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\n    document.body.removeChild(el);                  // Remove the <textarea> element\n    if (selected) {                                 // If a selection existed before copying\n      document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\n      document.getSelection().addRange(selected);   // Restore the original selection\n    }\n  };\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n         <CssBaseline />\n          <Paper className={classes.paper}>IDE </Paper>\n          <CodeMirror value=''\n              options={{\n                  mode: 'javascript',\n                  theme: 'mbo',\n                  lineNumbers: true\n              }}\n              onChange={(editor, data, value) => {EntryValue(value)}}\n              onCursorActivity={(editor, data, value)=>{CursosLocation(editor)}}\n          />\n          <p id=\"posicion\" className={classes.p}>Línea:- Columna:-</p>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>Traducción\n\n          </Paper>\n          <CodeMirror  className={classes.cdm} \n            value=''\n            options={{\n                mode: 'javascript',\n                theme: 'cobalt',\n                lineNumbers: true,\n                readOnly: true,\n                indentAutoShift:true\n            }}\n            onChange={(editor, data, value) => {            }}\n            editorDidMount={(editor)=>translationConsole(editor)}\n        />\n        </Grid>\n        </Grid>\n      <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>CONSOLA<Button startIcon={<FileCopyIcon/>} style={{marginRight:0}} onClick={copyToClipboard}></Button></Paper>\n            <textarea disabled id=\"consola\" style={{width:\"100%\", height:\"50vh\", resize: \"none\", backgroundColor:\"#0f4c75\", color:\"#ffff\"}} ></textarea>\n\n          </Grid> \n          <Grid item xs={6}>\n              <div style={{height:'30%', marginTop:'10%', float:'inline-start', alignContent:'stretch'}}><Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          startIcon={<PlayArrowIcon />}\n          onClick={()=>{Interpretar(intros.entrada)}}\n        >\n          Traducir a C3D\n        </Button>\n        <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              startIcon={<WebIcon />}\n              onClick={handleClickOpenTsEj}\n            >\n              Tabla de símbolos de traducción\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              startIcon={<ErrorOutlineIcon />}\n              onClick={handleClickOpenErEj}\n            >\n              Errores de traducción\n            </Button>\n        </div>\n              <div style={{height:'30%', float:'inline-start', alignContent:'stretch'}}>\n\n              <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          startIcon={<PlayArrowIcon />}\n          onClick={()=>{Interpretar(intros.entrada)}}\n        >\n          Optimizar C3D\n        </Button>\n              <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              startIcon={<AccountTreeIcon />}\n              onClick={()=>{handleClickOpenAST()}}\n            >\n              AST\n            </Button>\n              </div>\n              <div style={{height:'30%', float:'inline-start', alignContent:'stretch'}}>\n              {/* <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          className={classes.button}\n          startIcon={<TranslateIcon/>}\n          onClick={()=>{Translate()}}\n        >\n          Desanidar Programa\n        </Button> */}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.button}\n          startIcon={<TableChartIcon />}\n          onClick={handleClickOpenTsTr}\n        >\n          Tabla de Símbolos de Desanidación\n        </Button>\n              <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              startIcon={<WarningIcon />}\n              onClick={handleClickOpenErTr}\n            >\n              Errores de Desanidación\n            </Button>\n            \n            </div>\n       </Grid>\n      </Grid>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              REPORTES\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div id=\"AST_FRAME\" style={{width: '1920px', height: '1000px'}}>\n        <Tree data={data} zoomable={true} orientation={\"vertical\"} />\n        </div>\n        <div id=\"tablero\"></div>\n       <table id=\"tablaDeSalida\" width=\"80%\" style={{background:'#bbe1fa'}} border='1' align='center'> \n       </table>\n      </Dialog>\n     {/*  <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              AST\n            </Typography>\n          </Toolbar>\n        </AppBar>\n   //aca tiene que ir la etiqueta que tenga el grafo :p\n      </Dialog> */}\n    </div>\n  );\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from './App';\nimport UI from \"./backend/Menu\";\n\nReactDOM.render( <UI /> , document.getElementById(\"root\"))","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar gramatica = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,20],$V1=[1,6],$V2=[1,7],$V3=[1,8],$V4=[1,9],$V5=[1,13],$V6=[1,18],$V7=[1,10],$V8=[1,11],$V9=[1,12],$Va=[1,14],$Vb=[1,16],$Vc=[1,17],$Vd=[1,19],$Ve=[1,21],$Vf=[2,5,9,15,17,22,24,26,28,31,32,33,38,46,47,84,93],$Vg=[21,41,42,43,44,45],$Vh=[2,140],$Vi=[1,34],$Vj=[1,33],$Vk=[1,39],$Vl=[1,53],$Vm=[2,129],$Vn=[1,42],$Vo=[1,37],$Vp=[1,38],$Vq=[1,40],$Vr=[1,41],$Vs=[1,43],$Vt=[1,44],$Vu=[1,45],$Vv=[1,46],$Vw=[1,47],$Vx=[1,49],$Vy=[1,51],$Vz=[1,52],$VA=[1,72],$VB=[1,77],$VC=[1,78],$VD=[1,79],$VE=[1,80],$VF=[1,83],$VG=[1,81],$VH=[1,82],$VI=[1,84],$VJ=[1,86],$VK=[1,87],$VL=[2,78],$VM=[12,15,21,35,41,42,43,44,45,49,50,51,52,53,54,55,56,57,58,59,60,61,62,74,75,80],$VN=[1,100],$VO=[1,99],$VP=[1,101],$VQ=[1,102],$VR=[1,103],$VS=[1,104],$VT=[1,105],$VU=[1,106],$VV=[1,107],$VW=[1,108],$VX=[1,109],$VY=[1,110],$VZ=[1,111],$V_=[1,112],$V$=[1,113],$V01=[12,15,21,35,49,50,51,52,53,54,55,56,57,58,59,60,61,62,74,75,80],$V11=[1,123],$V21=[1,130],$V31=[2,5,9,15,17,22,24,26,28,31,32,33,38,46,47,84,93,98,99],$V41=[2,9,15,17,22,24,26,28,31,32,38,46,47,84,98,99],$V51=[2,80],$V61=[1,162],$V71=[2,104],$V81=[1,188],$V91=[21,80],$Va1=[2,87],$Vb1=[1,196],$Vc1=[1,201],$Vd1=[1,198],$Ve1=[1,199],$Vf1=[1,200],$Vg1=[1,202],$Vh1=[1,209],$Vi1=[1,212],$Vj1=[1,207],$Vk1=[1,208],$Vl1=[1,210],$Vm1=[1,211],$Vn1=[1,213],$Vo1=[1,214],$Vp1=[1,215],$Vq1=[1,216],$Vr1=[12,15,21,35,49,50,55,56,57,58,59,60,61,62,74,75,80],$Vs1=[12,15,21,35,49,50,51,52,55,56,57,58,59,60,61,62,74,75,80],$Vt1=[12,15,21,35,55,56,57,58,59,60,61,62,74,75,80],$Vu1=[12,15,21,35,59,60,61,62,74,75,80],$Vv1=[2,85],$Vw1=[1,255],$Vx1=[12,13,15,21,41,80],$Vy1=[2,95],$Vz1=[1,258],$VA1=[1,264],$VB1=[1,268],$VC1=[1,267],$VD1=[1,269],$VE1=[1,270],$VF1=[1,271],$VG1=[1,272],$VH1=[1,273],$VI1=[1,274],$VJ1=[1,275],$VK1=[1,276],$VL1=[1,277],$VM1=[1,278],$VN1=[1,279],$VO1=[1,280],$VP1=[1,282],$VQ1=[1,281],$VR1=[12,35,49,50,51,52,53,54,55,56,57,58,59,60,61,62,75,80],$VS1=[2,118],$VT1=[1,288],$VU1=[1,289],$VV1=[2,127],$VW1=[1,310],$VX1=[1,351],$VY1=[1,349],$VZ1=[1,350],$V_1=[10,13,26,49,63,64,65,66,67,68,69,70,72,76,77],$V$1=[2,113],$V02=[1,376],$V12=[12,35,49,50,55,56,57,58,59,60,61,62,75,80],$V22=[12,35,49,50,51,52,55,56,57,58,59,60,61,62,75,80],$V32=[12,35,55,56,57,58,59,60,61,62,75,80],$V42=[12,35,59,60,61,62,75,80];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"ini\":3,\"instrucciones\":4,\"EOF\":5,\"instruccion\":6,\"declaracion\":7,\"type\":8,\"R_IF\":9,\"ABRIR_PARENTESIS\":10,\"expresion\":11,\"CERRAR_PARENTESIS\":12,\"ABRIR_LLAVE\":13,\"sentencias\":14,\"CERRAR_LLAVE\":15,\"elseIf\":16,\"R_CONSOLE\":17,\"PUNTO\":18,\"R_LOG\":19,\"impresion\":20,\"PUNTO_COMA\":21,\"R_SWITCH\":22,\"cases\":23,\"R_FOR\":24,\"for_init\":25,\"IDENTIFICADOR\":26,\"for_change\":27,\"R_LET\":28,\"R_OF\":29,\"R_IN\":30,\"R_WHILE\":31,\"R_DO\":32,\"R_FUNCTION\":33,\"parametros\":34,\"DOS_PUNTOS\":35,\"tipo\":36,\"argumentos\":37,\"R_RETURN\":38,\"retorno\":39,\"id\":40,\"IGUAL\":41,\"INCREMENTO\":42,\"DECREMENTO\":43,\"ASIGNACION_SUMA\":44,\"ASIGNACION_RESTA\":45,\"R_BREAK\":46,\"R_CONTINUE\":47,\"sentencia\":48,\"MENOS\":49,\"MAS\":50,\"MULTIPLICACION\":51,\"DIVISION\":52,\"POTENCIA\":53,\"MODULO\":54,\"MAYOR\":55,\"MENOR\":56,\"MAYOR_IGUAL\":57,\"MENOR_IGUAL\":58,\"IGUALDAD\":59,\"DISTINTO\":60,\"AND\":61,\"OR\":62,\"NOT\":63,\"ENTERO\":64,\"DECIMAL\":65,\"R_TRUE\":66,\"R_FALSE\":67,\"CADENA\":68,\"CADENA_CHARS\":69,\"CADENA_EJECUTABLE\":70,\"objeto\":71,\"ABRIR_CORCHETE\":72,\"arrays\":73,\"CERRAR_CORCHETE\":74,\"OPERADOR_TERNARIO\":75,\"R_NULL\":76,\"R_NEW\":77,\"R_ARRAY\":78,\"argumentos_P\":79,\"COMA\":80,\"definicion_tipo\":81,\"definicion\":82,\"listaID\":83,\"R_CONST\":84,\"R_NUMBER\":85,\"declarar_array\":86,\"R_STRING\":87,\"R_BOOLEAN\":88,\"R_VOID\":89,\"obj_atributos\":90,\"obj_atributos_pr\":91,\"arrays_pr\":92,\"R_TYPE\":93,\"type_atributos\":94,\"type_atributos_pr\":95,\"R_ELSE\":96,\"elseIf_P\":97,\"R_CASE\":98,\"R_DEFAULT\":99,\"parametros_pr\":100,\"array_position\":101,\"id_pr\":102,\"R_LENGTH\":103,\"R_CHARAT\":104,\"R_TOLOWERCASE\":105,\"R_TOUPPERCASE\":106,\"R_CONCAT\":107,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",9:\"R_IF\",10:\"ABRIR_PARENTESIS\",12:\"CERRAR_PARENTESIS\",13:\"ABRIR_LLAVE\",15:\"CERRAR_LLAVE\",17:\"R_CONSOLE\",18:\"PUNTO\",19:\"R_LOG\",21:\"PUNTO_COMA\",22:\"R_SWITCH\",24:\"R_FOR\",26:\"IDENTIFICADOR\",28:\"R_LET\",29:\"R_OF\",30:\"R_IN\",31:\"R_WHILE\",32:\"R_DO\",33:\"R_FUNCTION\",35:\"DOS_PUNTOS\",38:\"R_RETURN\",41:\"IGUAL\",42:\"INCREMENTO\",43:\"DECREMENTO\",44:\"ASIGNACION_SUMA\",45:\"ASIGNACION_RESTA\",46:\"R_BREAK\",47:\"R_CONTINUE\",49:\"MENOS\",50:\"MAS\",51:\"MULTIPLICACION\",52:\"DIVISION\",53:\"POTENCIA\",54:\"MODULO\",55:\"MAYOR\",56:\"MENOR\",57:\"MAYOR_IGUAL\",58:\"MENOR_IGUAL\",59:\"IGUALDAD\",60:\"DISTINTO\",61:\"AND\",62:\"OR\",63:\"NOT\",64:\"ENTERO\",65:\"DECIMAL\",66:\"R_TRUE\",67:\"R_FALSE\",68:\"CADENA\",69:\"CADENA_CHARS\",70:\"CADENA_EJECUTABLE\",72:\"ABRIR_CORCHETE\",74:\"CERRAR_CORCHETE\",75:\"OPERADOR_TERNARIO\",76:\"R_NULL\",77:\"R_NEW\",78:\"R_ARRAY\",80:\"COMA\",84:\"R_CONST\",85:\"R_NUMBER\",87:\"R_STRING\",88:\"R_BOOLEAN\",89:\"R_VOID\",93:\"R_TYPE\",96:\"R_ELSE\",98:\"R_CASE\",99:\"R_DEFAULT\",103:\"R_LENGTH\",104:\"R_CHARAT\",105:\"R_TOLOWERCASE\",106:\"R_TOUPPERCASE\",107:\"R_CONCAT\"},\nproductions_: [0,[3,2],[4,2],[4,1],[6,1],[6,1],[6,8],[6,7],[6,7],[6,11],[6,10],[6,10],[6,7],[6,9],[6,10],[6,5],[6,3],[6,4],[6,3],[6,3],[6,4],[6,4],[6,2],[6,2],[6,2],[14,2],[14,1],[48,1],[48,8],[48,7],[48,7],[48,11],[48,10],[48,10],[48,7],[48,9],[48,5],[48,3],[48,4],[48,3],[48,3],[48,4],[48,4],[48,2],[48,2],[48,2],[11,2],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,3],[11,2],[11,3],[11,1],[11,1],[11,4],[11,1],[11,1],[11,1],[11,1],[11,1],[11,1],[11,3],[11,1],[11,5],[11,1],[11,5],[37,2],[37,0],[79,3],[79,0],[7,6],[7,6],[7,2],[83,5],[83,0],[82,2],[82,0],[81,2],[36,2],[36,2],[36,2],[36,2],[36,1],[86,3],[86,0],[71,3],[71,2],[90,4],[91,2],[91,0],[73,2],[73,0],[92,3],[92,0],[8,7],[94,3],[95,2],[95,2],[95,1],[95,1],[95,0],[16,2],[16,0],[97,8],[97,3],[23,5],[23,3],[23,0],[25,6],[25,4],[27,1],[27,1],[27,2],[34,3],[34,0],[100,4],[100,0],[39,1],[39,0],[101,4],[101,0],[40,2],[102,4],[102,3],[102,2],[102,5],[102,4],[102,4],[102,5],[102,0],[20,2],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,3],[20,2],[20,3],[20,3],[20,1],[20,1],[20,4],[20,1],[20,1],[20,1],[20,1],[20,1],[20,5]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n\t\t// cuado se haya reconocido la entrada completa retornamos el AST\n\t\tvar temporal = salida;\n\t\tsalida=[];\n\t\tvar tempAr = ArrayDeErrores;\n\t\tArrayDeErrores = [];\n\t\treturn {AST: $$[$0-1], Errores: temporal, ErrArr:tempAr};\n\t\nbreak;\ncase 2: case 25:\n $$[$0-1].push($$[$0]); this.$ = $$[$0-1]; \nbreak;\ncase 3:\nthis.$=[$$[$0]];\nbreak;\ncase 4: case 5: case 27: case 86: case 88: case 99: case 107: case 108: case 121: case 122: case 123: case 128:\nthis.$=$$[$0];\nbreak;\ncase 6: case 28:\n this.$ = instruccionesAPI.nuevoIf($$[$0-5], $$[$0-2], $$[$0]);\nbreak;\ncase 7: case 29:\nthis.$ = instruccionesAPI.nuevoImprimir($$[$0-2]);\nbreak;\ncase 8: case 30:\nthis.$=instruccionesAPI.nuevoSwitch($$[$0-4], $$[$0-1]);\nbreak;\ncase 9: case 31:\n this.$ = instruccionesAPI.nuevoFor($$[$0-8], $$[$0-7], {id:$$[$0-5], paso:$$[$0-4]}, $$[$0-1]);\nbreak;\ncase 10: case 32:\nthis.$=instruccionesAPI.nuevoForOF($$[$0-6], $$[$0-4], $$[$0-1]);\nbreak;\ncase 11: case 33:\nthis.$=instruccionesAPI.nuevoForIn($$[$0-6], $$[$0-4], $$[$0-1]);\nbreak;\ncase 12: case 34:\nthis.$=instruccionesAPI.nuevoWhile($$[$0-4], $$[$0-1]);\nbreak;\ncase 13: case 35:\nthis.$=instruccionesAPI.nuevoDoWhile($$[$0-6], $$[$0-2]);\nbreak;\ncase 14:\n  this.$ = instruccionesAPI.nuevaFuncion($$[$0-3], $$[$0-8], $$[$0-6], $$[$0-1], _$[$0-8].first_line, _$[$0-8].first_column); \nbreak;\ncase 15: case 36:\nthis.$ = instruccionesAPI.nuevaLlamada($$[$0-4], $$[$0-2], _$[$0-4].first_column, _$[$0-4].first_line);\nbreak;\ncase 16: case 37:\nthis.$=instruccionesAPI.nuevoReturn($$[$0-1]);\nbreak;\ncase 17: case 38: case 120:\nthis.$ = instruccionesAPI.nuevaAsignacion($$[$0-3], $$[$0-1], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 18:\nthis.$=instruccionesAPI.nuevoIncremento($$[$0-2], _$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 19:\nthis.$=instruccionesAPI.nuevoDecremento($$[$0-2], _$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 20: case 41:\nthis.$=instruccionesAPI.nuevoAsignacioSuma($$[$0-3], $$[$0-1], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 21: case 42:\nthis.$=instruccionesAPI.nuevoAsignacioResta($$[$0-3], $$[$0-1], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 22:\nthis.$=instruccionesAPI.nuevoAcceso($$[$0-1]);\nbreak;\ncase 23: case 44:\nthis.$=instruccionesAPI.nuevoBreak(_$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 24: case 45:\nthis.$=instruccionesAPI.nuevoContinue(_$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 26:\n this.$ = [$$[$0]]; \nbreak;\ncase 39:\nthis.$=instruccionesAPI.nuevoIncremento($$[$0-2], $$[$0-1], _$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 40:\nthis.$=instruccionesAPI.nuevoDecremento($$[$0-2], $$[$0-1], _$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 43:\nthis.$=instruccionesAPI.nuevoAcceso($$[$0-1], _$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 46: case 141:\n this.$ = instruccionesAPI.nuevaOperacionUnaria($$[$0], TIPO_OPERACION.NEGATIVO); \nbreak;\ncase 47: case 142:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.SUMA); \nbreak;\ncase 48: case 143:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.RESTA); \nbreak;\ncase 49: case 144:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MULTIPLICACION); \nbreak;\ncase 50: case 145:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.DIVISION); \nbreak;\ncase 51: case 146:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.POTENCIA); \nbreak;\ncase 52: case 147:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MODULO); \nbreak;\ncase 53: case 148:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MAYOR); \nbreak;\ncase 54: case 149:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MENOR); \nbreak;\ncase 55: case 150:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MAYOR_IGUAL); \nbreak;\ncase 56: case 151:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.MENOR_IGUAL); \nbreak;\ncase 57: case 152:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.IGUAL_IGUAL); \nbreak;\ncase 58: case 153:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.DISTINTO); \nbreak;\ncase 59: case 154:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.AND); \nbreak;\ncase 60: case 155:\n this.$ = instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.OR); \nbreak;\ncase 61: case 156:\nthis.$ =  instruccionesAPI.nuevaOperacionUnaria($$[$0], TIPO_OPERACION.NOT);\nbreak;\ncase 62: case 158:\n this.$ = $$[$0-1]; \nbreak;\ncase 63: case 159:\n this.$ = instruccionesAPI.nuevoValor(Number($$[$0]), TIPO_VALOR.NUMERO); \nbreak;\ncase 64: case 160:\n this.$ = instruccionesAPI.nuevoValor(Number($$[$0]), TIPO_VALOR.DECIMAL); \nbreak;\ncase 65: case 161:\n this.$ = instruccionesAPI.nuevaLlamada($$[$0-3], $$[$0-1], _$[$0-3].first_column, _$[$0-3].first_line); \nbreak;\ncase 66: case 162:\n this.$ = instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.TRUE); \nbreak;\ncase 67: case 163:\n this.$ = instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.FALSE); \nbreak;\ncase 68: case 164:\n this.$ = instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.CADENA); \nbreak;\ncase 69: case 165:\n this.$ = instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.CADENA_CHARS); \nbreak;\ncase 70:\n this.$ = instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.CADENA_EJECUTABLE); \nbreak;\ncase 71:\n this.$ = instruccionesAPI.nuevoObjeto($$[$0], _$[$0].first_column, _$[$0].first_line); \nbreak;\ncase 72:\n this.$ = instruccionesAPI.nuevoArray($$[$0-1], _$[$0-1].first_column, _$[$0-1].first_line); \nbreak;\ncase 73: case 166:\nthis.$=instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.IDENTIFICADOR);\nbreak;\ncase 74: case 167:\nthis.$=instruccionesAPI.nuevoOperadorTernario($$[$0-4], $$[$0-2], $$[$0]);\nbreak;\ncase 75:\nthis.$ = instruccionesAPI.nuevoValor($$[$0], TIPO_VALOR.NULL);\nbreak;\ncase 76:\nthis.$=instruccionesAPI.nuevoNewArray($$[$0-1]);\nbreak;\ncase 77:\nthis.$ = instruccionesAPI.nuevoArgumento($$[$0-1], $$[$0], _$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 78:\nthis.$ = \"Epsilon\";\nbreak;\ncase 79:\nthis.$ = instruccionesAPI.nuevoArgumento($$[$0-1], $$[$0] , _$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 80:\nthis.$ =  \"Epsilon\";\nbreak;\ncase 81: case 82:\nthis.$ = instruccionesAPI.nuevaDeclaracion($$[$0-5], $$[$0-4], $$[$0-3], $$[$0-2], $$[$0-1], _$[$0-4].first_line, _$[$0-4].first_column);\nbreak;\ncase 83:\n console.error('Este es un error sintáctico: ' + yytext + ', en la linea: ' + this._$.first_line + ', en la columna: ' + this._$.first_column);\n\t\t\t\t\t\t  salida.push('Este es un error sintáctico: ' + yytext + ', en la linea: ' + this._$.first_line + ', en la columna: ' + this._$.first_column);\n\t\t\t\t\t\t  ArrayDeErrores.push({tipo:\"sintáctico\", linea:this._$.first_line, columna:this._$.first_column, descripcion: yytext});\nbreak;\ncase 84:\nthis.$=instruccionesAPI.nuevoID($$[$0-3],$$[$0-2], $$[$0-1],$$[$0], _$[$0-3].first_line, _$[$0-3].first_column);\nbreak;\ncase 85: case 97: case 100: case 102: case 104: case 109: case 110: case 111: case 118: case 125: case 127: case 129: case 140:\nthis.$=\"Epsilon\";\nbreak;\ncase 87:\nthis.$=\"undefined\";\nbreak;\ncase 89: case 90: case 91:\n this.$=instruccionesAPI.nuevoTipo($$[$0-1],$$[$0]); \nbreak;\ncase 92:\n this.$ = instruccionesAPI.nuevoTipo($$[$0-1], $$[$0]);\nbreak;\ncase 93:\nthis.$=instruccionesAPI.nuevoTipo($$[$0], false);\nbreak;\ncase 94:\nthis.$=instruccionesAPI.nuevaDimension($$[$0]);\nbreak;\ncase 95:\nthis.$=false;\nbreak;\ncase 96:\nthis.$=$$[$0-1];\nbreak;\ncase 98:\nthis.$=instruccionesAPI.nuevoObjAtributo($$[$0-3], $$[$0-1], $$[$0]);\nbreak;\ncase 101: case 103:\nthis.$=instruccionesAPI.nuevoDato($$[$0-1], $$[$0]);\nbreak;\ncase 105:\nthis.$=instruccionesAPI.nuevoType($$[$0-5],$$[$0-2], _$[$0-5].first_line, _$[$0-5].first_column);\nbreak;\ncase 106:\nthis.$=instruccionesAPI.nuevoTypeAtributo($$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 112:\n this.$ = $$[$0];\nbreak;\ncase 113:\n this.$ = \"Epsilon\"; \nbreak;\ncase 114:\nthis.$ = instruccionesAPI.nuevoElseIf($$[$0-5], $$[$0-2], $$[$0]);\nbreak;\ncase 115:\nthis.$ =  instruccionesAPI.nuevoElse($$[$0-1]);\nbreak;\ncase 116:\nthis.$=instruccionesAPI.nuevoCase($$[$0-3], $$[$0-1], $$[$0]);\nbreak;\ncase 117:\nthis.$=instruccionesAPI.nuevoDefault($$[$0]);\nbreak;\ncase 119:\nthis.$ = instruccionesAPI.nuevaDeclaracion($$[$0-5], $$[$0-4], $$[$0-3], $$[$0-1], \"Epsilon\", _$[$0-4].first_line, _$[$0-4].first_column);\nbreak;\ncase 124: case 126:\nthis.$=instruccionesAPI.nuevoParametro($$[$0-1], $$[$0-2], $$[$0]);\nbreak;\ncase 130:\nthis.$=instruccionesAPI.nuevoArrayIndex($$[$0-2], $$[$0]);\nbreak;\ncase 131:\nthis.$=\"false\";\nbreak;\ncase 132:\nthis.$=instruccionesAPI.nuevaReferencia($$[$0-1], $$[$0], _$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 133:\nthis.$=instruccionesAPI.nuevoAccPosicion($$[$0-2], $$[$0], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 134:\nthis.$=instruccionesAPI.nuevoAccAtributo($$[$0-1], $$[$0], _$[$0-1].first_column, _$[$0-1].first_line);\nbreak;\ncase 135:\nthis.$=instruccionesAPI.nuevoLength(_$[$0].first_column, _$[$0].first_line);\nbreak;\ncase 136:\nthis.$=instruccionesAPI.nuevoCharAt($$[$0-1], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 137:\nthis.$=instruccionesAPI.nuevoToLowerCase(_$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 138:\nthis.$=instruccionesAPI.nuevoToUpperCase(_$[$0-2].first_column, _$[$0-2].first_line);\nbreak;\ncase 139:\nthis.$=instruccionesAPI.nuevoConcat($$[$0-1], _$[$0-3].first_column, _$[$0-3].first_line);\nbreak;\ncase 157:\nthis.$=instruccionesAPI.nuevaOperacionBinaria($$[$0-2], $$[$0], TIPO_OPERACION.CONCATENACION);\nbreak;\n}\n},\ntable: [{2:$V0,3:1,4:2,6:3,7:4,8:5,9:$V1,17:$V2,22:$V3,24:$V4,26:$V5,28:$V6,31:$V7,32:$V8,33:$V9,38:$Va,40:15,46:$Vb,47:$Vc,84:$Vd,93:$Ve},{1:[3]},{2:$V0,5:[1,22],6:23,7:4,8:5,9:$V1,17:$V2,22:$V3,24:$V4,26:$V5,28:$V6,31:$V7,32:$V8,33:$V9,38:$Va,40:15,46:$Vb,47:$Vc,84:$Vd,93:$Ve},o($Vf,[2,3]),o($Vf,[2,4]),o($Vf,[2,5]),{10:[1,24]},{18:[1,25]},{10:[1,26]},{10:[1,27]},{10:[1,28]},{13:[1,29]},{26:[1,30]},o($Vg,$Vh,{102:32,10:[1,31],18:$Vi,72:$Vj}),{10:$Vk,11:36,13:$Vl,21:$Vm,26:$Vn,39:35,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{21:[1,59],41:[1,54],42:[1,55],43:[1,56],44:[1,57],45:[1,58]},{21:[1,60]},{21:[1,61]},{26:[1,62]},{26:[1,63]},{21:[1,64]},{26:[1,65]},{1:[2,1]},o($Vf,[2,2]),{10:$Vk,11:66,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{19:[1,67]},{10:$Vk,11:68,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{25:69,26:$VA,28:[1,70],40:71},{10:$Vk,11:73,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{2:$V0,7:76,9:$VB,14:74,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{10:[1,88]},{10:$Vk,11:90,12:$VL,13:$Vl,26:$Vn,37:89,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($VM,[2,132]),{10:$Vk,11:91,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{26:[1,92],103:[1,93],104:[1,94],105:[1,95],106:[1,96],107:[1,97]},{21:[1,98]},{21:[2,128],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{10:$Vk,11:114,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:115,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:116,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($V01,[2,63]),o($V01,[2,64]),o($V01,$Vh,{102:32,10:[1,117],18:$Vi,72:$Vj}),o($V01,[2,66]),o($V01,[2,67]),o($V01,[2,68]),o($V01,[2,69]),o($V01,[2,70]),o($V01,[2,71]),{10:$Vk,11:119,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,73:118,74:[2,102],76:$Vy,77:$Vz},o($V01,[2,73]),o($V01,[2,75]),{78:[1,120]},{15:[1,122],26:$V11,90:121},{10:$Vk,11:124,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{21:[1,125]},{21:[1,126]},{10:$Vk,11:127,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:128,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($Vf,[2,22]),o($Vf,[2,23]),o($Vf,[2,24]),{35:$V21,81:129},{35:$V21,81:131},o($V31,[2,83]),{41:[1,132]},{12:[1,133],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{10:[1,134]},{12:[1,135],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{10:$Vk,11:136,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{26:[1,137]},{41:[1,138]},{18:$Vi,41:$Vh,72:$Vj,102:32},{12:[1,139],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{2:$V0,7:76,9:$VB,15:[1,140],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},o($V41,[2,26]),o($V41,[2,27]),{10:[1,142]},{18:[1,143]},{10:[1,144]},{10:[1,145]},{10:[1,146]},{13:[1,147]},o($Vg,$Vh,{102:32,10:[1,148],18:$Vi,72:$Vj}),{10:$Vk,11:36,13:$Vl,21:$Vm,26:$Vn,39:149,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{21:[1,155],41:[1,150],42:[1,151],43:[1,152],44:[1,153],45:[1,154]},{21:[1,156]},{21:[1,157]},{12:[2,125],26:[1,159],34:158},{12:[1,160]},{12:$V51,49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$,79:161,80:$V61},{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,74:[1,163],75:$V$},o($VM,$Vh,{102:164,18:$Vi,72:$Vj}),o($VM,[2,135]),{10:[1,165]},{10:[1,166]},{10:[1,167]},{10:[1,168]},o($Vf,[2,16]),{10:$Vk,11:169,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:170,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:171,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:172,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:173,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:174,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:175,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:176,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:177,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:178,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:179,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:180,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:181,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:182,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:183,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($V01,[2,46]),o($V01,[2,61]),{12:[1,184],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{10:$Vk,11:90,12:$VL,13:$Vl,26:$Vn,37:185,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{74:[1,186]},{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,74:$V71,75:$V$,80:$V81,92:187},{10:[1,189]},{15:[1,190]},o($V01,[2,97]),{35:[1,191]},{21:[1,192],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},o($Vf,[2,18]),o($Vf,[2,19]),{21:[1,193],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{21:[1,194],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},o($V91,$Va1,{82:195,41:$Vb1}),{26:$Vc1,36:197,85:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1},o($V91,$Va1,{82:203,41:$Vb1}),{13:[1,204]},{13:[1,205]},{10:$Vh1,20:206,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{13:[1,218]},{21:[1,219],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{29:[1,220],30:[1,221],35:$V21,81:222},{10:$Vk,11:223,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{13:[1,224]},{31:[1,225]},o($V41,[2,25]),{10:$Vk,11:226,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{19:[1,227]},{10:$Vk,11:228,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{25:229,26:$VA,28:[1,230],40:71},{10:$Vk,11:231,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{2:$V0,7:76,9:$VB,14:232,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{10:$Vk,11:90,12:$VL,13:$Vl,26:$Vn,37:233,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{21:[1,234]},{10:$Vk,11:235,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{21:[1,236]},{21:[1,237]},{10:$Vk,11:238,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:239,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($V41,[2,43]),o($V41,[2,44]),o($V41,[2,45]),{12:[1,240]},{35:$V21,81:241},{21:[1,242]},{12:[2,77]},{10:$Vk,11:243,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($VM,$Vh,{102:244,18:$Vi,72:$Vj}),o($VM,[2,134]),{10:$Vk,11:245,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{12:[1,246]},{12:[1,247]},{10:$Vk,11:248,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($Vr1,[2,47],{51:$VP,52:$VQ,53:$VR,54:$VS}),o($Vr1,[2,48],{51:$VP,52:$VQ,53:$VR,54:$VS}),o($Vs1,[2,49],{53:$VR,54:$VS}),o($Vs1,[2,50],{53:$VR,54:$VS}),o($V01,[2,51]),o($V01,[2,52]),o($Vt1,[2,53],{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS}),o($Vt1,[2,54],{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS}),o($Vt1,[2,55],{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS}),o($Vt1,[2,56],{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS}),o($Vu1,[2,57],{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW}),o($Vu1,[2,58],{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW}),o([12,15,21,35,61,62,74,75,80],[2,59],{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY}),o([12,15,21,35,62,74,75,80],[2,60],{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ}),{35:[1,249],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},o($V01,[2,62]),{12:[1,250]},o($V01,[2,72]),{74:[2,101]},{10:$Vk,11:251,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:252,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($V01,[2,96]),{10:$Vk,11:253,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($Vf,[2,17]),o($Vf,[2,20]),o($Vf,[2,21]),{21:$Vv1,80:$Vw1,83:254},{10:$Vk,11:256,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o([12,15,21,41,80],[2,88]),o($Vx1,$Vy1,{86:257,72:$Vz1}),o($Vx1,$Vy1,{86:259,72:$Vz1}),o($Vx1,$Vy1,{86:260,72:$Vz1}),o($Vx1,$Vy1,{86:261,72:$Vz1}),o($Vx1,[2,93]),{21:$Vv1,80:$Vw1,83:262},{26:$VA1,94:263},{2:$V0,7:76,9:$VB,14:265,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{12:[1,266],49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1,55:$VH1,56:$VI1,57:$VJ1,58:$VK1,59:$VL1,60:$VM1,61:$VN1,62:$VO1,75:$VP1,80:$VQ1},{10:$Vh1,20:283,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:284,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:285,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},o($VR1,[2,159]),o($VR1,[2,160]),o($VR1,$Vh,{102:32,10:[1,286],18:$Vi,72:$Vj}),o($VR1,[2,162]),o($VR1,[2,163]),o($VR1,[2,164]),o($VR1,[2,165]),o($VR1,[2,166]),{15:$VS1,23:287,98:$VT1,99:$VU1},{26:[1,290]},{10:$Vk,11:291,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:292,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{41:[1,293]},{21:[1,294],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{2:$V0,7:76,9:$VB,14:295,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{10:[1,296]},{12:[1,297],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{10:[1,298]},{12:[1,299],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{10:$Vk,11:300,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{26:[1,301]},{12:[1,302],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{2:$V0,7:76,9:$VB,15:[1,303],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},{12:[1,304]},o($V41,[2,37]),{21:[1,305],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},o($V41,[2,39]),o($V41,[2,40]),{21:[1,306],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{21:[1,307],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{35:[1,308]},{12:$VV1,80:$VW1,100:309},o($Vf,[2,15]),{12:$V51,49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$,79:311,80:$V61},o($VM,[2,133]),{12:[1,312],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},o($VM,[2,137]),o($VM,[2,138]),{12:[1,313],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{10:$Vk,11:314,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($V01,[2,65]),{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,74:$V71,75:$V$,80:$V81,92:315},{12:[1,316],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{15:[2,100],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$,80:[1,318],91:317},{21:[1,319]},{26:[1,320]},o($V91,[2,86],{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$}),o($Vx1,[2,89]),{74:[1,321]},o($Vx1,[2,90]),o($Vx1,[2,91]),o($Vx1,[2,92]),{21:[1,322]},{15:[1,323]},{35:$V21,81:324},{2:$V0,7:76,9:$VB,15:[1,325],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},{21:[1,326]},{10:$Vh1,20:327,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:328,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:329,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:330,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:331,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:332,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:333,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:334,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:335,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:336,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:337,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:338,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:339,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:340,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:341,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},{10:$Vh1,20:342,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},o($VR1,[2,141]),o($VR1,[2,156]),{12:[1,343],49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1,55:$VH1,56:$VI1,57:$VJ1,58:$VK1,59:$VL1,60:$VM1,61:$VN1,62:$VO1,75:$VP1,80:$VQ1},{10:$Vk,11:90,12:$VL,13:$Vl,26:$Vn,37:344,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{15:[1,345]},{10:$Vk,11:346,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{35:[1,347]},{27:348,41:$VX1,42:$VY1,43:$VZ1},{12:[1,352],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{12:[1,353],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{10:$Vk,11:354,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},o($V_1,[2,120]),{2:$V0,7:76,9:$VB,15:[1,355],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},{10:$Vk,11:356,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{13:[1,357]},{10:$Vk,11:358,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{13:[1,359]},{21:[1,360],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{29:[1,361],30:[1,362],35:$V21,81:222},{13:[1,363]},{31:[1,364]},{21:[1,365]},o($V41,[2,38]),o($V41,[2,41]),o($V41,[2,42]),{26:$Vc1,36:366,85:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1},{12:[2,124]},{26:[1,367]},{12:[2,79]},o($VM,[2,136]),o($VM,[2,139]),o([12,15,21,35,74,75,80],[2,74],{49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_}),{74:[2,103]},o($V01,[2,76]),{15:[2,98]},{26:$V11,90:368},o($V31,[2,81]),{35:$V21,81:369},o($Vx1,$Vy1,{86:370,72:$Vz1}),o($V31,[2,82]),{21:[1,371]},{15:[2,111],21:[1,374],80:[1,373],95:372},o($Vf,$V$1,{16:375,96:$V02}),o($Vf,[2,7]),o($V12,[2,142],{51:$VD1,52:$VE1,53:$VF1,54:$VG1}),o($V12,[2,143],{51:$VD1,52:$VE1,53:$VF1,54:$VG1}),o($V22,[2,144],{53:$VF1,54:$VG1}),o($V22,[2,145],{53:$VF1,54:$VG1}),o($VR1,[2,146]),o($VR1,[2,147]),o($V32,[2,148],{49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1}),o($V32,[2,149],{49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1}),o($V32,[2,150],{49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1}),o($V32,[2,151],{49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1}),o($V42,[2,152],{49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1,55:$VH1,56:$VI1,57:$VJ1,58:$VK1}),o($V42,[2,153],{49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1,55:$VH1,56:$VI1,57:$VJ1,58:$VK1}),o([12,35,61,62,75,80],[2,154],{49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1,55:$VH1,56:$VI1,57:$VJ1,58:$VK1,59:$VL1,60:$VM1}),o([12,35,62,75,80],[2,155],{49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1,55:$VH1,56:$VI1,57:$VJ1,58:$VK1,59:$VL1,60:$VM1,61:$VN1}),o([12,35,80],[2,157],{49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1,55:$VH1,56:$VI1,57:$VJ1,58:$VK1,59:$VL1,60:$VM1,61:$VN1,62:$VO1,75:$VP1}),{35:[1,377],49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1,55:$VH1,56:$VI1,57:$VJ1,58:$VK1,59:$VL1,60:$VM1,61:$VN1,62:$VO1,75:$VP1,80:$VQ1},o($VR1,[2,158]),{12:[1,378]},o($Vf,[2,8]),{35:[1,379],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{2:$V0,7:76,9:$VB,14:380,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{12:[1,381]},{12:[2,121]},{12:[2,122]},{10:$Vk,11:382,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{13:[1,383]},{13:[1,384]},{21:[1,385],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},o($Vf,[2,12]),{12:[1,386],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{2:$V0,7:76,9:$VB,14:387,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{12:[1,388],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{15:$VS1,23:389,98:$VT1,99:$VU1},{26:[1,390]},{10:$Vk,11:391,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{10:$Vk,11:392,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{2:$V0,7:76,9:$VB,14:393,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{10:[1,394]},o($V41,[2,36]),{13:[1,395]},{35:$V21,81:396},{15:[2,99]},o($V91,$Va1,{82:397,41:$Vb1}),o($Vx1,[2,94]),o($Vf,[2,105]),{15:[2,106]},{15:[2,109],26:$VA1,94:398},{15:[2,110],26:$VA1,94:399},o($Vf,[2,6]),{9:[1,401],13:[1,402],97:400},{10:$Vh1,20:403,26:$Vi1,40:217,49:$Vj1,63:$Vk1,64:$Vl1,65:$Vm1,66:$Vn1,67:$Vo1,68:$Vp1,69:$Vq1},o($VR1,[2,161]),{2:$V0,7:76,9:$VB,14:404,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{2:$V0,7:76,9:$VB,15:[2,117],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},{13:[1,405]},{12:[2,123],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{2:$V0,7:76,9:$VB,14:406,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{2:$V0,7:76,9:$VB,14:407,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},o($V_1,[2,119]),{21:[1,408]},{2:$V0,7:76,9:$VB,15:[1,409],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},{21:[1,410]},{15:[1,411]},{27:412,41:$VX1,42:$VY1,43:$VZ1},{12:[1,413],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{12:[1,414],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{2:$V0,7:76,9:$VB,15:[1,415],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},{10:$Vk,11:416,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{2:$V0,4:417,6:3,7:4,8:5,9:$V1,17:$V2,22:$V3,24:$V4,26:$V5,28:$V6,31:$V7,32:$V8,33:$V9,38:$Va,40:15,46:$Vb,47:$Vc,84:$Vd,93:$Ve},{12:$VV1,80:$VW1,100:418},{21:$Vv1,80:$Vw1,83:419},{15:[2,107]},{15:[2,108]},o($V31,[2,112]),{10:[1,420]},{2:$V0,7:76,9:$VB,14:421,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},o([12,35,75,80],[2,167],{49:$VB1,50:$VC1,51:$VD1,52:$VE1,53:$VF1,54:$VG1,55:$VH1,56:$VI1,57:$VJ1,58:$VK1,59:$VL1,60:$VM1,61:$VN1,62:$VO1}),{2:$V0,7:76,9:$VB,15:$VS1,17:$VC,22:$VD,23:422,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd,98:$VT1,99:$VU1},{2:$V0,7:76,9:$VB,14:423,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{2:$V0,7:76,9:$VB,15:[1,424],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},{2:$V0,7:76,9:$VB,15:[1,425],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},o($Vf,[2,13]),o($V41,$V$1,{16:426,96:$V02}),o($V41,[2,29]),o($V41,[2,30]),{12:[1,427]},{13:[1,428]},{13:[1,429]},o($V41,[2,34]),{12:[1,430],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},{2:$V0,6:23,7:4,8:5,9:$V1,15:[1,431],17:$V2,22:$V3,24:$V4,26:$V5,28:$V6,31:$V7,32:$V8,33:$V9,38:$Va,40:15,46:$Vb,47:$Vc,84:$Vd,93:$Ve},{12:[2,126]},{21:[2,84]},{10:$Vk,11:432,13:$Vl,26:$Vn,40:50,49:$Vo,63:$Vp,64:$Vq,65:$Vr,66:$Vs,67:$Vt,68:$Vu,69:$Vv,70:$Vw,71:48,72:$Vx,76:$Vy,77:$Vz},{2:$V0,7:76,9:$VB,15:[1,433],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},{15:[2,116]},{2:$V0,7:76,9:$VB,15:[1,434],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},o($Vf,[2,10]),o($Vf,[2,11]),o($V41,[2,28]),{13:[1,435]},{2:$V0,7:76,9:$VB,14:436,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{2:$V0,7:76,9:$VB,14:437,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{21:[1,438]},o($Vf,[2,14]),{12:[1,439],49:$VN,50:$VO,51:$VP,52:$VQ,53:$VR,54:$VS,55:$VT,56:$VU,57:$VV,58:$VW,59:$VX,60:$VY,61:$VZ,62:$V_,75:$V$},o($V31,[2,115]),o($Vf,[2,9]),{2:$V0,7:76,9:$VB,14:440,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},{2:$V0,7:76,9:$VB,15:[1,441],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},{2:$V0,7:76,9:$VB,15:[1,442],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},o($V41,[2,35]),{13:[1,443]},{2:$V0,7:76,9:$VB,15:[1,444],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},o($V41,[2,32]),o($V41,[2,33]),{2:$V0,7:76,9:$VB,14:445,17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:75,84:$Vd},o($V41,[2,31]),{2:$V0,7:76,9:$VB,15:[1,446],17:$VC,22:$VD,24:$VE,26:$VF,28:$V6,31:$VG,32:$VH,38:$VI,40:85,46:$VJ,47:$VK,48:141,84:$Vd},o($V31,$V$1,{16:447,96:$V02}),o($V31,[2,114])],\ndefaultActions: {22:[2,1],161:[2,77],187:[2,101],309:[2,124],311:[2,79],315:[2,103],317:[2,98],349:[2,121],350:[2,122],368:[2,99],372:[2,106],398:[2,107],399:[2,108],418:[2,126],419:[2,84],422:[2,116]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\n\tconst TIPO_OPERACION\t= require('./instrucciones').TIPO_OPERACION;\n\tconst TIPO_VALOR \t\t= require('./instrucciones').TIPO_VALOR;\n\tconst instruccionesAPI\t= require('./instrucciones').instruccionesAPI;\n\tconst TIPO_DATO = require('./instrucciones').TIPO_DATO;\n\tconst TS = require('./instrucciones').TS;\n\tvar salida=[];\n\tvar ArrayDeErrores = [];\n\tvar currentType=\"\";\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 85;\nbreak;\ncase 1:return 88;\nbreak;\ncase 2:return 87;\nbreak;\ncase 3:return 28;\nbreak;\ncase 4:return 84;\nbreak;\ncase 5:return 17;\nbreak;\ncase 6:return 19;\nbreak;\ncase 7:return 67;\nbreak;\ncase 8:return 66;\nbreak;\ncase 9:return 9;\nbreak;\ncase 10:return 96;\nbreak;\ncase 11:return 22;\nbreak;\ncase 12:return 98;\nbreak;\ncase 13:return 99;\nbreak;\ncase 14:return 46;\nbreak;\ncase 15:return 47;\nbreak;\ncase 16:return 31;\nbreak;\ncase 17:return 32;\nbreak;\ncase 18:return 24;\nbreak;\ncase 19:return 89;\nbreak;\ncase 20:return 38;\nbreak;\ncase 21:return 'R_PUSH';\nbreak;\ncase 22:return 'R_POP';\nbreak;\ncase 23:return 103;\nbreak;\ncase 24:return 93;\nbreak;\ncase 25:return 29;\nbreak;\ncase 26:return 30;\nbreak;\ncase 27:return 33 ;\nbreak;\ncase 28:return 76;\nbreak;\ncase 29:return 'R_GRAFICAR_TS';\nbreak;\ncase 30:return 104;\nbreak;\ncase 31:return 105;\nbreak;\ncase 32:return 106;\nbreak;\ncase 33:return 107;\nbreak;\ncase 34:return 77;\nbreak;\ncase 35:return 78;\nbreak;\ncase 36: yy_.yytext = yy_.yytext.substr(1, yy_.yyleng-2); return 68;\nbreak;\ncase 37: yy_.yytext = yy_.yytext.substr(1, yy_.yyleng-2); return 69;\nbreak;\ncase 38: yy_.yytext = yy_.yytext.substr(1, yy_.yyleng-2); return 70;\nbreak;\ncase 39:return 65;\nbreak;\ncase 40:return 64;\nbreak;\ncase 41:return 26;\nbreak;\ncase 42:\nbreak;\ncase 43:// comentario simple línea\nbreak;\ncase 44:// comentario multiple líneas\nbreak;\ncase 45:return 42;\nbreak;\ncase 46:return 43;\nbreak;\ncase 47:return 44;\nbreak;\ncase 48:return 50;\nbreak;\ncase 49:return 45;\nbreak;\ncase 50:return 49;\nbreak;\ncase 51:return 53;\nbreak;\ncase 52:return 51;\nbreak;\ncase 53:return 52;\nbreak;\ncase 54:return 54;\nbreak;\ncase 55:return 59;\nbreak;\ncase 56:return 60;\nbreak;\ncase 57:return 41;\nbreak;\ncase 58:return 57;\nbreak;\ncase 59:return 55;\nbreak;\ncase 60:return 58;\nbreak;\ncase 61:return 56;\nbreak;\ncase 62:return 61;\nbreak;\ncase 63:return 62;\nbreak;\ncase 64:return 63;\nbreak;\ncase 65:return 13;\nbreak;\ncase 66:return 15;\nbreak;\ncase 67:return 10;\nbreak;\ncase 68:return 12;\nbreak;\ncase 69:return 72;\nbreak;\ncase 70:return 74;\nbreak;\ncase 71:return 21;\nbreak;\ncase 72:return 35;\nbreak;\ncase 73:return 18;\nbreak;\ncase 74:return 80;\nbreak;\ncase 75:return 75;\nbreak;\ncase 76:return 5;\nbreak;\ncase 77: console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\n\t\t\t\t\t\t salida.push('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column); \n\t\t\t\t\t\t ArrayDeErrores.push({tipo:\"léxico\", linea:yy_.yylloc.first_line, columna:yy_.yylloc.first_column, descripcion: yy_.yytext});\nbreak;\n}\n},\nrules: [/^(?:number\\b)/i,/^(?:boolean\\b)/i,/^(?:string\\b)/i,/^(?:let\\b)/i,/^(?:const\\b)/i,/^(?:console\\b)/i,/^(?:log\\b)/i,/^(?:false\\b)/i,/^(?:true\\b)/i,/^(?:if\\b)/i,/^(?:else\\b)/i,/^(?:switch\\b)/i,/^(?:case\\b)/i,/^(?:default\\b)/i,/^(?:break\\b)/i,/^(?:continue\\b)/i,/^(?:while\\b)/i,/^(?:do\\b)/i,/^(?:for\\b)/i,/^(?:void\\b)/i,/^(?:return\\b)/i,/^(?:push\\b)/i,/^(?:pop\\b)/i,/^(?:length\\b)/i,/^(?:type\\b)/i,/^(?:of\\b)/i,/^(?:in\\b)/i,/^(?:function\\b)/i,/^(?:null\\b)/i,/^(?:graficar_ts\\b)/i,/^(?:CharAt\\b)/i,/^(?:ToLowerCase\\b)/i,/^(?:ToUpperCase\\b)/i,/^(?:Concat\\b)/i,/^(?:new\\b)/i,/^(?:Array\\b)/i,/^(?:\"(\\\\\"|\\\\n|\\\\t|\\\\r|\\\\\\\\|[^\\\"])*\")/i,/^(?:'(\\\\'|\\\\n|\\\\t|\\\\r|\\\\\\\\|[^\\'])*')/i,/^(?:`(\\\\\"|\\\\n|\\\\t|\\\\r|\\\\\\\\|[^\\`])*`)/i,/^(?:[0-9]+\\.([0-9]+)?\\b)/i,/^(?:[0-9]+\\b)/i,/^(?:([a-zA-Z])[a-zA-Z0-9_]*)/i,/^(?:\\s+)/i,/^(?:\\/\\/.*)/i,/^(?:[\\/][*][^*]*[*]+([^\\/*][^*]*[*]+)*[\\/])/i,/^(?:\\+\\+)/i,/^(?:--)/i,/^(?:\\+=)/i,/^(?:\\+)/i,/^(?:-=)/i,/^(?:-)/i,/^(?:\\*\\*)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:==)/i,/^(?:!=)/i,/^(?:=)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:<)/i,/^(?:&&)/i,/^(?:\\|\\|)/i,/^(?:!)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:;)/i,/^(?::)/i,/^(?:\\.)/i,/^(?:,)/i,/^(?:\\?)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = gramatica;\nexports.Parser = gramatica.Parser;\nexports.parse = function () { return gramatica.parse.apply(gramatica, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"],"sourceRoot":""}